<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Octodash works with octo4a? Yes!</title>
      <link href="/use-octodash-on-your-android-phone-en/"/>
      <url>/use-octodash-on-your-android-phone-en/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p><a href="https://unchartedbull.github.io/OctoDash/index.html">Octodash</a> uses <a href="https://en.wikipedia.org/wiki/Electron_(software_framework)">Electron</a> to present the interface and only runs on Windows, Linux and macOS. Obviously doesn’t run on Android, but you can run Linux on your Android phone if you want, so that you can run Electron!</p></div><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>We all know that using the <a href="https://github.com/feelfreelinux/octo4a">Octo4a</a> APP allows you to install <a href="https://octoprint.org/">Octoprint</a> on your Android phone (If you don’t know, take a look at <a href="https://www.youtube.com/watch?v=74xdib_-X38&ab_channel=ThomasSanladerer">[YouTube]How to run OctoPrint on your phone!</a>), so you can use your phone as a controller to control your 3D printer. But if you want to check the state of your printer or do some  manipulation, you can only do it by opening the management page of Octoprint through the browser. Although the display layout on the mobile phone can be optimized after installing the Custom UI plugin, you still need to scroll to see more Information. It would be so much nicer if Octodash can run on your phone. Now I did it, I’m sharing the steps with you, hope that it will help you achieve this.</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/IMG_3031.jpeg" alt="IMG_3031"></p><span id="more"></span><h2 id="Ideas"><a href="#Ideas" class="headerlink" title="Ideas"></a>Ideas</h2><ol><li>You need an Android phone that has Octoprint installed and configured</li><li>Install <a href="https://termux.com/">Termux</a> on your phone</li><li>Install the <a href="https://wiki.termux.com/wiki/PRoot">PRoot</a> distribution for Debian in Termux</li><li>Install Octodash in Debian</li><li>Install Xserver XSDL on your phone</li><li>Test running Octodash under Debian in Termux</li><li>Add Octodash as a service in Termux and enable automatic startup</li><li>Done, use Octodash in Xserver XSDL</li></ol><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><h3 id="Install-Termux"><a href="#Install-Termux" class="headerlink" title="Install Termux"></a>Install Termux</h3><p>Download and install the latest version of Termux from <a href="https://github.com/termux/termux-app/releases"><code>Github Releases</code></a>. If you have the ability, you can start the <code>SSH</code> server to facilitate the next operations from the computer.</p><h3 id="Install-and-enter-the-Debian-system"><a href="#Install-and-enter-the-Debian-system" class="headerlink" title="Install and enter the Debian system"></a>Install and enter the Debian system</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot-distro</span><br><span class="line">proot-distro install debian</span><br><span class="line">proot-distro login debian --termux-home</span><br></pre></td></tr></table></figure><h3 id="Install-Octodash"><a href="#Install-Octodash" class="headerlink" title="Install Octodash"></a>Install Octodash</h3><ul><li><p>Install dependencies</p><p>Made some modifications to the commands of the <a href="https://github.com/UnchartedBull/OctoDash/wiki/Installation#manual-installation">installation guide</a> to suit the current system</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt install -y libgtk-3-0 libnotify4 libnss3 libxss1 libxtst6 xdg-utils libatspi2.0-0 libuuid1 libsecret-1-0 libasound2 libgirepository-1.0-1 gir1.2-glib-2.0 libayatana-appindicator3-1</span><br></pre></td></tr></table></figure></li><li><p>Download and install the latest version of Octodash (replace the download link with the link on the <a href="https://github.com/UnchartedBull/OctoDash/releases"><code>Github Releases</code></a> page for the latest version)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O octodash.deb https://github.com/UnchartedBull/OctoDash/releases/download/v2.3.1/octodash_2.3.1_arm64.deb</span><br><span class="line">dpkg -i octodash.deb</span><br></pre></td></tr></table></figure></li><li><p>Install Xserver</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y xserver-xorg x11-xserver-utils xinit libgtk-3-0</span><br></pre></td></tr></table></figure></li></ul><h3 id="Install-Xserver-XSDL"><a href="#Install-Xserver-XSDL" class="headerlink" title="Install Xserver XSDL"></a>Install Xserver XSDL</h3><p>Install the latest version of Xserver XSDL from <a href="https://play.google.com/store/apps/details?id=x.org.server"><code>Google Play Store</code></a></p><p>After installation, open the APP, press <code>Change device config</code> button during app start, select <code>Mouse emulation</code> -&gt; <code>Mode</code> -&gt; <code>Desktop</code>.</p><p>Return to the startup page after completion, wait until connection info shows up like below, remember the port number, for example, mine is <code>4713</code>.</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/Screenshot_2022-06-03-19-54-14-504_x.org.server.jpg" alt="Screenshot_2022-06-03-19-54-14-504_x.org.server"></p><h3 id="Test-Octodash"><a href="#Test-Octodash" class="headerlink" title="Test Octodash"></a>Test Octodash</h3><p>Go back to the Debian system under Termux and create the script file (if your port is different from mine, replace it)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /root/startdash.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">export DISPLAY=127.0.0.1:0</span></span><br><span class="line"><span class="string">export PLUSE_SERVER=tcp:127.0.0.1:4713</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">octodash --no-sandbox 2&gt;&amp;1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">chmod</span> +x /root/startdash.sh</span><br></pre></td></tr></table></figure><p>Run the script file to test if Octodash is working properly</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/startdash.sh</span><br></pre></td></tr></table></figure><p>If you see that there is information output and no error is reported, switch back to the Xserver XSDL APP to check whether the initial page of Octodash is displayed at this time.</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/332-OctoDashSetup-01.png" alt="OctoPi with OctoDash on RPi 4 with HyperPixel 4.0 - Maurice Kevenaar&#39;s  Techblog"></p><p>If you see it, don’t rush to set it up. After the test is passed, you need the next step: Add Octodash to the Termux service to ensure that it runs in the background.</p><h3 id="Configure-the-Octodash-service"><a href="#Configure-the-Octodash-service" class="headerlink" title="Configure the Octodash service"></a>Configure the Octodash service</h3><p>Return to Termux app, first <code>Ctrl+C</code> exit the current script, then <code>Ctrl+D</code> exit the current terminal, return to the Termux terminal, and continue the following operations.</p><p>After ensuring that you have returned to the Termux system, install the termux-services package to enable Termux to support services</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install termux-services</span><br></pre></td></tr></table></figure><p>Create a service for Octodash</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PREFIX</span>/var/service/octodash/log</span><br><span class="line"><span class="built_in">ln</span> -sf <span class="variable">$PREFIX</span>/share/termux-services/svlogger <span class="variable">$PREFIX</span>/var/service/octodash/log/run</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; $PREFIX/var/service/octodash/run</span></span><br><span class="line"><span class="string">#!/data/data/com.termux/files/usr/bin/sh</span></span><br><span class="line"><span class="string">exec proot-distro login debian --termux-home -- /root/startdash.sh</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">chmod</span> +x <span class="variable">$PREFIX</span>/var/service/octodash/run</span><br></pre></td></tr></table></figure><p>Start the Octodash service and set it to start automatically</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sv up octodash</span><br><span class="line">sv-enable octodash</span><br></pre></td></tr></table></figure><blockquote><p>The log files are located at <code>$PREFIX/var/log/sv/octodash/current</code></p><p>what can be done with <code>sv</code>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sv up octodash <span class="comment">#Start the service </span></span><br><span class="line">sv down octodash <span class="comment">#Stop the service </span></span><br><span class="line">sv-disable octodash <span class="comment">#Close the service to start automatically</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="Finish"><a href="#Finish" class="headerlink" title="Finish"></a>Finish</h3><p>Now you can go back to the Xserver XSDL APP and continue the initialization of Octodash. After the configuration is complete, you can see this interface</p><blockquote><p>If the printer address 127.0.0.1:5000 cannot be added successfully, enter the LAN IP of the mobile phone to connect to add it.</p></blockquote><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/Screenshot_2022-06-03-17-06-38-324_x.org.server.jpg" alt="Screenshot_2022-06-03-17-06-38-324_x.org.server"></p><p>You’re all done, if you archived this, please share your results in the comment!</p><h2 id="Some-notes"><a href="#Some-notes" class="headerlink" title="Some notes"></a>Some notes</h2><p>In the process of configuration, the experience and tips of some problems are summarized:</p><ul><li><p>If your phone doesn’t have battery protection and keeps charging to 100% all the time, your battery will be bulging after a while. It is recommended to download the <a href="https://github.com/helloklf/vtools">Scene 4</a> mobile phone management tool. In the tool, you can adjust the battery charging strategy. After charging to 90%, stop charging, and continue charging when the battery drops to 70% to protect the battery. Download link: <a href="https://github.com/helloklf/vtools/releases">https://github.com/helloklf/vtools/releases</a></p></li><li><p>The Webcam server that comes with Octo4a has the following problems (for MI6):</p><ul><li>The resolution cannot be set, and the snapshot resolution is extremely low, resulting in a very low resolution of the generated time-lapse video</li><li>You can enable auto flash when you stream video, but you can’t enable it when you take a snapshot</li><li>The camera emits shutter sound every time a snapshot is triggered, even after change to mute mode</li></ul><p>To sum up, I finally used a separate Webcam software: <a href="https://play.google.com/store/apps/details?id=com.pas.webcam">IP Webcam</a> , which solved the above problems. It can also modify the configuration on the web page, which is very convenient</p><blockquote><p>If you also change the video source, remember to update the system settings in Octodash and the settings of the octolapse plugin at the same time</p></blockquote></li><li><p>Every APP mentioned in this article must set a background lock, and turn off the power saving policy of these APPs to keep it running in the background all the time.</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> English Article </tag>
            
            <tag> 3D </tag>
            
            <tag> Octoprint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Octo4a 更进一步：在 Android 手机上运行 Octodash</title>
      <link href="/use-octodash-on-your-android-phone/"/>
      <url>/use-octodash-on-your-android-phone/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p><a href="https://unchartedbull.github.io/OctoDash/index.html">Octodash</a> 使用 <a href="https://zh.m.wikipedia.org/zh/Electron">Electron</a> 来展示界面，只能在 Windows、Linux 和 macOS 上运行。显然不能在 Android 上运行，但是如果你想的话，你可以在你的 Android 手机上运行 Linux，这样你也就可以运行 Electron 了！</p></div><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我们都知道使用 <a href="https://github.com/feelfreelinux/octo4a">Octo4a</a> APP 可以让 Android 手机安装 <a href="https://octoprint.org/">Octoprint</a>（如果不知道的话去看看 <a href="https://www.youtube.com/watch?v=74xdib_-X38&ab_channel=ThomasSanladerer">[YouTube]How to run OctoPrint on your phone!</a>），从而使用手机就可以控制你的 3D 打印机。但是要想在手机上操作打印机或者查看打印状态，还是只能通过打开 Octoprint 的管理网页来实现，虽然安装了 Custom UI 后可以优化在手机上的显示排版，但是始终还是需要滚动来看到更多信息，如果 Octodash 也能运行在手机上的话，那就能好看和方便很多。如今我做到了，所以我和大家分享一下我的步骤，希望能够帮到你。</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/IMG_3031.jpeg" alt="IMG_3031"></p><span id="more"></span><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ol><li>你需要一个已经安装且配置完成的 Octoprint 在你的 Android 手机上</li><li>在手机上安装 <a href="https://termux.com/">Termux</a></li><li>在 Termux 中安装 Debain 系统的 <a href="https://wiki.termux.com/wiki/PRoot">PRoot</a> 版本</li><li>在 Debain 系统中安装 Octodash</li><li>在手机上安装 Xserver XSDL</li><li>测试在 Termux 中运行 Debain 下的 Octodash</li><li>在 Termux 中添加 Octodash 为服务，并开启自动启动</li><li>完成，在 Xserver XSDL 中使用 Octodash</li></ol><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="安装-Termux"><a href="#安装-Termux" class="headerlink" title="安装 Termux"></a>安装 Termux</h3><p>从  <a href="https://github.com/termux/termux-app/releases"><code>Github Releases</code></a> 下载安装最新版 Termux，有能力的话可以开启 <code>SSH</code> 服务器，方便从电脑上进行接下来的操作。</p><h3 id="安装并进入-Debain-系统"><a href="#安装并进入-Debain-系统" class="headerlink" title="安装并进入 Debain 系统"></a>安装并进入 Debain 系统</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot-distro</span><br><span class="line">proot-distro install debian</span><br><span class="line">proot-distro login debian --termux-home</span><br></pre></td></tr></table></figure><h3 id="安装-Octodash"><a href="#安装-Octodash" class="headerlink" title="安装 Octodash"></a>安装 Octodash</h3><ul><li><p>安装依赖</p><p>  对<a href="https://github.com/UnchartedBull/OctoDash/wiki/Installation#manual-installation">安装指导</a>的命令作了一些修改以适应当前系统</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt install -y libgtk-3-0 libnotify4 libnss3 libxss1 libxtst6 xdg-utils libatspi2.0-0 libuuid1 libsecret-1-0 libasound2 libgirepository-1.0-1 gir1.2-glib-2.0 libayatana-appindicator3-1</span><br></pre></td></tr></table></figure></li><li><p>下载并安装最新版的 Octodash（替换下载链接为 <a href="https://github.com/UnchartedBull/OctoDash/releases"><code>Github Releases</code></a> 页面上最新版本的链接）</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O octodash.deb https://github.com/UnchartedBull/OctoDash/releases/download/v2.3.1/octodash_2.3.1_arm64.deb</span><br><span class="line">dpkg -i octodash.deb</span><br></pre></td></tr></table></figure></li><li><p>安装 Xserver</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y xserver-xorg x11-xserver-utils xinit libgtk-3-0</span><br></pre></td></tr></table></figure></li></ul><h3 id="安装-Xserver-XSDL"><a href="#安装-Xserver-XSDL" class="headerlink" title="安装 Xserver XSDL"></a>安装 Xserver XSDL</h3><p>从  <a href="https://play.google.com/store/apps/details?id=x.org.server"><code>Google Play Store</code></a> 安装最新版 Xserver XSDL</p><p>安装好后打开 APP，在初始化页面上点击 <code>更改设备配置</code> -&gt; <code>鼠标模拟</code> -&gt; <code>鼠标仿真模式</code> ，选择 <code>桌面版，无仿真</code>。</p><p>完成后返回启动页面，等待启动完成后记下端口号，比如我的是 <code>4713</code></p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/Screenshot_2022-06-03-19-54-14-504_x.org.server.jpg" alt="Screenshot_2022-06-03-19-54-14-504_x.org.server"></p><h3 id="测试-Octodash"><a href="#测试-Octodash" class="headerlink" title="测试 Octodash"></a>测试 Octodash</h3><p>回到 Termux 下的 Debian 系统中，创建脚本文件（如果不一样，替换端口号为你的端口号）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /root/startdash.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">export DISPLAY=127.0.0.1:0</span></span><br><span class="line"><span class="string">export PLUSE_SERVER=tcp:127.0.0.1:4713</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">octodash --no-sandbox 2&gt;&amp;1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">chmod</span> +x /root/startdash.sh</span><br></pre></td></tr></table></figure><p> 运行脚本文件以测试 Octodash 是否正常运行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/startdash.sh</span><br></pre></td></tr></table></figure><p>看到有信息输出且没有报错的话，切回 Xserver XSDL APP 查看此时是否显示了 Octodash 的初始页面</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/332-OctoDashSetup-01.png" alt="OctoPi with OctoDash on RPi 4 with HyperPixel 4.0 - Maurice Kevenaar&#39;s  Techblog"></p><p>看到的话先不着急进行设置，测试通过后还需要下一步，把 Octodash 添加到 Termux 的服务中保证后台运行</p><h3 id="配置-Octodash-服务"><a href="#配置-Octodash-服务" class="headerlink" title="配置 Octodash 服务"></a>配置 Octodash 服务</h3><p>先 <code>Ctrl+C</code> 退出当前脚本，然后 <code>Ctrl+D</code> 退出当前终端，回到 Termux 终端后，继续后面的操作</p><p>确保已经回到 Termux 系统后，安装 termux-services 包，使 Termux 支持服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install termux-services</span><br></pre></td></tr></table></figure><p>为 Octodash 创建服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$PREFIX</span>/var/service/octodash/log</span><br><span class="line"><span class="built_in">ln</span> -sf <span class="variable">$PREFIX</span>/share/termux-services/svlogger <span class="variable">$PREFIX</span>/var/service/octodash/log/run</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; $PREFIX/var/service/octodash/run</span></span><br><span class="line"><span class="string">#!/data/data/com.termux/files/usr/bin/sh</span></span><br><span class="line"><span class="string">exec proot-distro login debian --termux-home -- /root/startdash.sh</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">chmod</span> +x <span class="variable">$PREFIX</span>/var/service/octodash/run</span><br></pre></td></tr></table></figure><p>启动 Octodash 服务，并设置为自动启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sv up octodash</span><br><span class="line">sv-enable octodash</span><br></pre></td></tr></table></figure><blockquote><p>日志文件位于 <code>$PREFIX/var/log/sv/octodash/current</code> </p><p><code>sv</code> 可以进行的操作</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sv</span> up octodash <span class="comment">#启动服务</span></span><br><span class="line"><span class="built_in">sv</span> down octodash <span class="comment">#停止服务</span></span><br><span class="line"><span class="built_in">sv</span><span class="literal">-disable</span> octodash <span class="comment">#关闭服务自动启动</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3><p>现在可以回到 Xserver XSDL APP，继续 Octodash 的初始化，配置完成后就可以看到这样的界面</p><blockquote><p>如果打印机地址填写 127.0.0.1:5000 无法成功添加打印机的话，输入手机的内网 IP 进行连接即可成功添加</p></blockquote><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/use-octodash-on-your-android-phone/Screenshot_2022-06-03-17-06-38-324_x.org.server.jpg" alt="Screenshot_2022-06-03-17-06-38-324_x.org.server"></p><p>大功告成，如果你也成功了，欢迎在评论区分享你的成果！</p><h2 id="Notes"><a href="#Notes" class="headerlink" title="Notes"></a>Notes</h2><p>在配置的过程中总结了一些问题的经验和提示：</p><ul><li><p>如果你的手机没有电池保护功能，会一直保持充电100%的话，过不久你的电池就会鼓包。建议下载 <a href="https://github.com/helloklf/vtools">Scene 4</a> 手机管理工具，在工具中可以调整电池的充电策略，充电至90%后就停止充电，直道降至70%再继续充电，达到保护电池的目的。下载链接: <a href="https://github.com/helloklf/vtools/releases">https://github.com/helloklf/vtools/releases</a></p></li><li><p>Octo4a自带的 Webcam 服务器使用起来有以下问题（MI6 遇到的）：</p><ul><li>无法设置分辨率，快照分辨率极低，导致生成的延时视频也是分辨率极低</li><li>可以设置视频时开启闪光灯，却不能设置快照时开启</li><li>每次触发快照都会发出相机的卡擦声，静音也无法关闭</li></ul><p>综上我最后使用了单独的 Webcam 软件: <a href="https://play.google.com/store/apps/details?id=com.pas.webcam">IP Webcam</a>，解决了以上的问题，它还可以在网页上修改配置，非常方便</p><blockquote><p>如果你也更换了视频源，记得同时更新 Octodash 中的系统设置和延时插件的设置</p></blockquote></li><li><p>这篇文章提到的每一个 APP 都要设置后台锁定，且在关闭这几个 APP 的省电策略，以保持一直后台运行。</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 3D </tag>
            
            <tag> Octoprint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何导出微信公众号卡券的会员信息</title>
      <link href="/wechat-vip-how-to/"/>
      <url>/wechat-vip-how-to/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p>这是一个手把手教程</p></div><p>推荐使用谷歌浏览器<a href="https://www.google.cn/intl/zh-CN/chrome/">Chrome</a>安装插件<a href="https://www.tampermonkey.net/?ext=dhdg&locale=zh">Tampermonkey</a>使用，其他浏览器没测试过</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>导出你能看到的会员的所有信息，看起来像这个样子</p><table><thead><tr><th>会员</th><th>地区</th><th>姓名</th><th>手机</th><th>生日</th><th>状态</th><th>是否关注</th><th>标签</th><th>会员号</th><th>积分</th></tr></thead><tbody><tr><td>lucky</td><td>中国  江苏 苏州</td><td>张三</td><td>13700000000</td><td>1999-9-9</td><td>有效</td><td>否</td><td>无标签</td><td>9492-3564-9589</td><td>11</td></tr><tr><td>👧</td><td>毛里求斯</td><td>赵四</td><td>13800000000</td><td>2000-10-10</td><td>无效</td><td>已关注</td><td>无标签</td><td>2391-8300-1593</td><td>30</td></tr></tbody></table><span id="more"></span><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="如果你是资深玩家"><a href="#如果你是资深玩家" class="headerlink" title="如果你是资深玩家"></a>如果你是资深玩家</h3><p>用过油猴插件，那么直接<a href="https://github.com/xiaoxx970/wechat_vip_info_export/raw/master/Wechat_offical_account_VIP_info_export.user.js">点这里打开安装页面</a>。</p><p>在微信公众号的<code>卡劵功能-&gt;会员卡-&gt; 会员管理</code>界面就可以使用。</p><h3 id="如果你没听说过Tampermonkey"><a href="#如果你没听说过Tampermonkey" class="headerlink" title="如果你没听说过Tampermonkey"></a>如果你没听说过Tampermonkey</h3><p>那么你需要：</p><ol><li><p>下载安装谷歌浏览器：<a href="https://www.google.cn/intl/zh-CN/chrome/">https://www.google.cn/intl/zh-CN/chrome/</a></p></li><li><p>下载Tampermonkey插件</p><p>去这个网站：<a href="https://www.crx4chrome.com/crx/755/">https://www.crx4chrome.com/crx/755/</a></p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215145542390.png"></p><p>点其中一个链接（除了google cdn 和 Chrome web store），下载插件</p></li><li><p>解压插件</p><p>下载后你得到的是一个crx格式的文件，重命名文件修改后缀，把<code>.crx</code>改成<code>.zip</code></p><table><thead><tr><th><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215150212447.png"></th><th><strong>→</strong></th><th><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215150325561.png"></th></tr></thead></table><p>解压zip文件：点解压到”extension_xxx\”</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215150624537.png"></p><p>记住这个文件夹的位置</p></li><li><p>安装插件</p><p>打开Chrome浏览器，在地址栏输入<code>chrome://extensions/</code>，或者点浏览器菜单按钮 &gt; 更多工具 &gt; 扩展程序</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215151002595.png"></p><p>进入扩展程序页面，打开右上角开发者模式开关，点左边的<code>加载已解压的扩展程序</code></p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215151145803.png"></p><p>选择刚才解压出来的文件夹（不需要点进去，选中文件夹后就点<code>选择文件夹</code>）</p><p>然后就可以安装好插件</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215151317653.png"></p><p>看到这个就说明安装好了</p></li><li><p>安装我的脚本</p><p>打开脚本页面：<a href="https://greasyfork.org/zh-CN/scripts/387221-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BC%9A%E5%91%98%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA-wechat-offical-account-vip-info-export">微信公众号会员信息导出</a></p><p>点<code>安装此脚本</code></p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215151923867.png"></p><p>然后在这个页面点安装，点一下就可以安装好</p></li><li><p>开始做事情</p><p>打开微信公众号的<code>卡劵功能-&gt;会员卡-&gt; 会员管理</code>界面</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215152613213.png">只要一进入会员管理页面，浏览器就会开始自动跳转，收集信息。然后就等着吧。</p><p>平均一个会员需要4秒导出，如果九百个会员的话需要一个小时。</p></li><li><p>下载导出的csv文件</p><p>如果脚本执行完最后一页的最后一个用户，就会出现提示说导出完成，可以开始下载</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/md-img/image-20191215153051694.png"></p><p>下载下来的<code>vip.csv</code>文件可以通过Excel打开，完事。</p></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li><p>打开调试工具后可以在console看到当前正在导出本页的第几个会员信息。</p></li><li><p>你始终可以通过浏览器右上角tampermonkey按钮终止脚本运行</p></li><li><p>任何时候你都可以把当前已经导出的会员先下载下来</p><p>停止脚本后在console输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getDownloadUrl</span>(<span class="params">csvData</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> _utf = <span class="string">&quot;\uFEFF&quot;</span>; <span class="comment">// 为了使Excel以utf-8的编码模式，同时也是解决中文乱码的问题</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">Blob</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">URL</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="property">createObjectURL</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> csvData = <span class="keyword">new</span> <span class="title class_">Blob</span>([_utf + csvData], &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;text/csv&#x27;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(csvData);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">SaveAs</span>(<span class="params">fileName, csvData</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">Sys</span> = &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> ua = navigator.<span class="property">userAgent</span>.<span class="title function_">toLowerCase</span>();</span><br><span class="line">    <span class="keyword">var</span> s;</span><br><span class="line">    (s = ua.<span class="title function_">match</span>(<span class="regexp">/chrome\/([\d.]+)/</span>)) ? <span class="title class_">Sys</span>.<span class="property">chrome</span> = s[<span class="number">1</span>]:<span class="number">0</span>;<span class="comment">//这里直接指定了chrome</span></span><br><span class="line">    <span class="keyword">var</span> bw = <span class="title class_">Sys</span>;</span><br><span class="line">    <span class="keyword">var</span> alink = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    alink.<span class="property">id</span> = <span class="string">&quot;linkDwnldLink&quot;</span>;</span><br><span class="line">    alink.<span class="property">href</span> = <span class="title function_">getDownloadUrl</span>(csvData);</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(alink);</span><br><span class="line">    <span class="keyword">var</span> linkDom = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;linkDwnldLink&#x27;</span>);</span><br><span class="line">    linkDom.<span class="title function_">setAttribute</span>(<span class="string">&#x27;download&#x27;</span>, fileName);</span><br><span class="line">    linkDom.<span class="title function_">click</span>();</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(linkDom);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> csv = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;csv&quot;</span>)</span><br><span class="line">csv = <span class="string">&quot;会员,地区,姓名,手机,生日,状态,是否关注,标签,会员号,积分\n&quot;</span>+csv</span><br><span class="line"><span class="title class_">SaveAs</span>(<span class="string">&quot;vip.csv&quot;</span>, csv)</span><br></pre></td></tr></table></figure></li><li><p>终止后要想从头开始导入（或者从某一页），需要先清除cookie和localstorage数据，在console输入：</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clearCookie</span>(<span class="params">c_name</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> expiredays = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">var</span> exdate = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    exdate.<span class="title function_">setDate</span>(exdate.<span class="title function_">getDate</span>() + expiredays)</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">cookie</span> = c_name + <span class="string">&quot;=&quot;</span> + ((expiredays == <span class="literal">null</span>) ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;;expires=&quot;</span> + exdate.<span class="title function_">toGMTString</span>())</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&quot;csv&quot;</span>)</span><br><span class="line"><span class="title function_">clearCookie</span>(<span class="string">&quot;step&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>在会员页面打开插件后不会马上开始运行脚本，要刷新一下才可以</p></li></ul><p>现在还有的问题：</p><ul><li><p>有时候会停下来不继续点下一个页面，这时候看一下console里的提示信息</p><ul><li><p>如果写的<code>next page</code>，那只要手动点一下下一页就可以了</p></li><li><p>如果写的<code>step:</code>后面跟一个数字，那数字是几就手动点一下当前页面的第几个会员信息</p></li><li><p>如果停在某个会员信息页，那可以手动返回上一页试试</p></li></ul></li></ul><hr><blockquote><p>Note:仅仅是为我自己做的脚本，如果没达到你的要求，欢迎找我有尝定制。（比如你还需要导出会员卡使用次数、激活时间、使用记录等）</p><p>QQ：987896425</p></blockquote><blockquote><p>实现过程：<a href="/Wechat-vip-info-export">用JS脚本…</a></p></blockquote><blockquote><p>要是你有觉得可以改进的地方，欢迎来<a href="https://github.com/xiaoxx970/wechat_vip_info_export">GitHub页面</a>提交Pull request。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 手把手教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用caddy实现v2ray流量伪装</title>
      <link href="/caddy-ws-v2ray/"/>
      <url>/caddy-ws-v2ray/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p><a href="https://dengxiaolong.com/caddy/zh/">Caddy</a>：一个方便配置的 web server</p></div><p>本质上要做的事情是让caddy做反向代理服务器转发v2ray流量，caddy的好处是自己申请证书实现https，这样伪装成的tls流量更不容易被发现</p><span id="more"></span><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Get-caddy"><a href="#Get-caddy" class="headerlink" title="Get caddy"></a>Get caddy</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl https://getcaddy.com | bash -s personal</span><br></pre></td></tr></table></figure><h2 id="Get-v2ray"><a href="#Get-v2ray" class="headerlink" title="Get v2ray"></a>Get v2ray</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="注册caddy服务"><a href="#注册caddy服务" class="headerlink" title="注册caddy服务"></a>注册caddy服务</h2><p>让caddy拥有非root用户打开端口的权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">setcap</span> <span class="string">&#x27;cap_net_bind_service=+ep&#x27;</span> /usr/local/bin/caddy</span><br></pre></td></tr></table></figure><p>如果出现<code>setcap: command not found</code>那就安装一下<code>libcap2-bin</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libcap2-bin</span><br></pre></td></tr></table></figure><p>创建用户和所需目录并且只赋予必要的权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd -g 33 www-data</span><br><span class="line">sudo useradd \</span><br><span class="line">  -g www-data --no-user-group \</span><br><span class="line">  --home-dir /var/www --no-create-home \</span><br><span class="line">  --shell /usr/sbin/nologin \</span><br><span class="line">  --system --uid 33 www-data</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">mkdir</span> /etc/ssl/caddy</span><br><span class="line">sudo <span class="built_in">chown</span> -R root:www-data /etc/ssl/caddy</span><br><span class="line">sudo <span class="built_in">chmod</span> 0770 /etc/ssl/caddy</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">touch</span> /var/log/caddy.log</span><br><span class="line">sudo <span class="built_in">chown</span> root:www-data /var/log/caddy.log</span><br><span class="line">sudo <span class="built_in">chmod</span> 0770 /var/log/caddy.log</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">mkdir</span> /etc/caddy</span><br><span class="line">sudo <span class="built_in">chown</span> -R root:root /etc/caddy</span><br><span class="line">sudo <span class="built_in">touch</span> /etc/caddy/Caddyfile</span><br><span class="line">sudo <span class="built_in">chown</span> root:root /etc/caddy/Caddyfile</span><br><span class="line">sudo <span class="built_in">chmod</span> 644 /etc/caddy/Caddyfile</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">mkdir</span> /var/www</span><br><span class="line">sudo <span class="built_in">chown</span> www-data:www-data /var/www</span><br><span class="line">sudo <span class="built_in">chmod</span> 555 /var/www</span><br></pre></td></tr></table></figure><p>上面创建了三个目录，<code>/etc/caddy/Caddyfile</code> 是 Caddy 的配置文件，<code>/etc/ssl/caddy</code> 存放证书，<code>/var/www</code> 是默认的网站目录。</p><p>把官方提供的脚本 <a href="https://github.com/mholt/caddy/blob/master/dist/init/linux-systemd/caddy.service">caddy.service</a>下载到 <code>/etc/systemd/system/</code> 并重新加载 <code>systemd daemon</code>，让配置生效。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/caddyserver/caddy/master/dist/init/linux-systemd/caddy.service</span><br><span class="line">sudo <span class="built_in">cp</span> caddy.service /etc/systemd/system/</span><br><span class="line">sudo <span class="built_in">chown</span> root:root /etc/systemd/system/caddy.service</span><br><span class="line">sudo <span class="built_in">chmod</span> 644 /etc/systemd/system/caddy.service</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start caddy.service</span><br></pre></td></tr></table></figure><p>让 Caddy 开机自启。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> caddy.service</span><br></pre></td></tr></table></figure><p>至此，Caddy 已经成功注册服务，并能够开机自启了。</p><h2 id="配置Caddyfile"><a href="#配置Caddyfile" class="headerlink" title="配置Caddyfile"></a>配置Caddyfile</h2><p>修改<code>/etc/caddy/Caddyfile</code>文件内容如下，用来配置反向代理，<code>mydomain.me</code>替换为你的域名：<br>（点右上链接后可以编辑配置文件后再复制）</p><figure class="highlight plaintext"><figcaption><span>/etc/caddy/Caddyfile</span><a href="https://paste.to/en/clone/5de34d1fbce5a">Caddyfile</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mydomain.me</span><br><span class="line">&#123;</span><br><span class="line">  root /var/www/mydomain.me</span><br><span class="line">  tls 你的邮箱</span><br><span class="line">  log /var/log/caddy.log</span><br><span class="line">  proxy /ray localhost:10000 &#123;</span><br><span class="line">    websocket</span><br><span class="line">    header_upstream -Origin</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启caddy服务器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart caddy</span><br></pre></td></tr></table></figure><h2 id="配置v2ray-conf"><a href="#配置v2ray-conf" class="headerlink" title="配置v2ray conf"></a>配置v2ray conf</h2><p>修改<code>/etc/v2ray/config.json</code>文件内容：</p><figure class="highlight json"><figcaption><span>/etc/v2ray/config.json</span><a href="https://paste.to/en/clone/5de35ac9c897b">config.json</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">10000</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;listen&quot;</span><span class="punctuation">:</span><span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span><span class="comment">//只监听 127.0.0.1，避免除本机外的机器探测到开放了 10000 端口</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;clients&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;b831381d-6324-4d53-ad4f-8cda48b30811&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;alterId&quot;</span><span class="punctuation">:</span> <span class="number">64</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ws&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/ray&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;freedom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="完事"><a href="#完事" class="headerlink" title="完事"></a>完事</h1><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><figure class="highlight json"><figcaption><span>/etc/v2ray/config.json</span><a href="https://paste.to/en/clone/5de35b2f78656">config.json</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">1080</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;listen&quot;</span><span class="punctuation">:</span> <span class="string">&quot;127.0.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;socks&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sniffing&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;destOverride&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;http&quot;</span><span class="punctuation">,</span> <span class="string">&quot;tls&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;auth&quot;</span><span class="punctuation">:</span> <span class="string">&quot;noauth&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;udp&quot;</span><span class="punctuation">:</span> <span class="keyword">false</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmess&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;vnext&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mydomain.me&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;port&quot;</span><span class="punctuation">:</span> <span class="number">443</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;users&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;b831381d-6324-4d53-ad4f-8cda48b30811&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;alterId&quot;</span><span class="punctuation">:</span> <span class="number">64</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ws&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tls&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/ray&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>参考：<br> <a href="https://github.com/caddyserver/caddy/tree/master/dist/init/linux-systemd">https://github.com/caddyserver/caddy/tree/master/dist/init/linux-systemd</a><br> <a href="https://guide.v2fly.org/advanced/wss_and_web.html">https://guide.v2fly.org/advanced/wss_and_web.html</a></p></blockquote><div class="note default"><h4 id="Note-另一种伪装的方式"><a href="#Note-另一种伪装的方式" class="headerlink" title="Note:另一种伪装的方式"></a>Note:另一种伪装的方式</h4> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;transport&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;quicSettings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;security&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;header&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wechat-video&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      
        <tags>
            
            <tag> Systemctl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo new后自动打开你喜爱的编辑器</title>
      <link href="/open-your-farvorite-editor-after-new-hexo-post/"/>
      <url>/open-your-farvorite-editor-after-new-hexo-post/</url>
      
        <content type="html"><![CDATA[<blockquote><p>作为一个用hexo写博客的blogger，每次写文章都是件麻烦事：对我来说，要先用Code打开Hexo工作区，然后<code>Ctrl+` </code>打开终端先pull一下，再开始<code>hexo new post something</code>，接下来去目录找到_posts，点进去打开刚创建的md，然后，才开始写文章。</p></blockquote><p>这篇post就是解决众多繁杂步骤中的一环：找md文件然后打开的过程。</p><!---more----><p>很简单，要做的就是写个脚本让<code>NodeJS</code>知道我什么时候新建了post，然后脚本帮我打开刚新建好的post.md，最主要的是，可以用自己喜爱的编辑器，比如说我用的是<a href="https://typora.io/">Typora</a>。</p><ol><li><p>在你的hexo目录下新建一个文件夹名叫<code>scripts</code>（你的hexo目录就是你执行hexo命令的目录）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> scripts</span><br><span class="line"><span class="built_in">cd</span> scripts</span><br></pre></td></tr></table></figure></li><li><p>在<code>scripts</code>文件夹里新建一个脚本文件叫做<code>AutoOpenEditor.js</code>（也可以是其他名字），内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> spawn = <span class="built_in">require</span>(<span class="string">&#x27;hexo-util/lib/spawn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">hexo.<span class="title function_">on</span>(<span class="string">&#x27;new&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">spawn</span>(<span class="string">&#x27;C:/\Program Files/\Typora/\Typora.exe&#x27;</span>, [data.<span class="property">path</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这几句话的大概意思就是，在检测到执行<code>hexo new</code>命令后，触发这个脚本，然后脚本执行<code>C:\Program Files\Typora\Typora.exe [文件路径]</code>这个命令，<code>spawn()</code>里就是要执行的命令和参数，有斜杠的话需要用转义符。</p><p>这里我用的是Typora编辑器，你也可以让它用VScode来打开：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> spawn = <span class="built_in">require</span>(<span class="string">&#x27;hexo-util/lib/spawn&#x27;</span>);</span><br><span class="line"></span><br><span class="line">hexo.<span class="title function_">on</span>(<span class="string">&#x27;new&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title function_">spawn</span>(<span class="string">&#x27;code&#x27;</span>,<span class="string">&#x27;-r&#x27;</span>,[data.<span class="property">path</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这是针对在VScode里已经打开hexo目录工作区的情况，<code>-r</code>让code不打开新窗口，而是作为标签页打开。</p></li></ol><p>这样就可以了，以后每次<code>hexo new post</code>，都会在新建后帮你打开编辑器，虽然只是少了一小环，但是让你写博客更有动力了不是。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo tricks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用JS脚本实现微信公众号后台会员卡信息导出</title>
      <link href="/Wechat-vip-info-export/"/>
      <url>/Wechat-vip-info-export/</url>
      
        <content type="html"><![CDATA[<p>使用教程：<a href="/wechat-vip-how-to">如何导出微信公众号的会员信息</a></p><div class="note info no-icon"><p>本文讲实现过程</p></div><blockquote><p>交代背景：微信公众号认证快到期了，没有需求就不想再继续认证，一年300有点贵。但是顾客的会员卡是用微信的卡券功能办理的，就需要导出所有会员的信息并且导入到另一个会员管理系统里面。</p></blockquote><p>查了几遍微信公众号开发者的文档，发现只可以用API得到关注列表，或者创建会员卡，就是不可以得到会员信息。看来是故意的不想让我轻易导出会员信息。</p><p>想了几种思路：Python？手动导出？javascript？<br>会员两百多个，手动也不是不可以，但是作为程序员，能让电脑自己动我就绝不动。</p><span id="more"></span><p>至于为什么没用Python，主要是公众号后台的登录认证有点复杂，又是输密码又是扫码，还认浏览器，对python相当不友好。</p><p>于是面对着这个页面，想了很久的我想到用Javascript。<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/Wechat-vip-info-export/%E4%BC%9A%E5%91%98%E8%AF%A6%E6%83%85%E9%A1%B5%E9%9D%A2.png"></p><p>不是有<code>document.getElementsByClassName</code>嘛，我只要找到放信息的标签的class就好了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> info = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;msg_pre_view&quot;</span>)[<span class="number">0</span>].<span class="property">innerText</span></span><br></pre></td></tr></table></figure><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/Wechat-vip-info-export/console1.png"><br>这样得到的就是以回车为分隔的会员信息，很好的第一步。</p><p>下一句就是把它转换成数组：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> info_array = info.<span class="title function_">split</span>(<span class="string">&quot;\n&quot;</span>)</span><br></pre></td></tr></table></figure><p>然后把会员名后面的方框去掉，因为那里是一只小笔，也被抓进来了：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_array[<span class="number">1</span>] = info_array[<span class="number">1</span>].<span class="title function_">replace</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>现在info_array就长这个样子<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/Wechat-vip-info-export/info_array.png"></p><p>如你所见，表头和内容需要分离，现在在同一行。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> info_es = []</span><br><span class="line"><span class="keyword">var</span> info_head = []</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">    info_head[i]=info_array.<span class="title function_">splice</span>(<span class="number">0</span>,<span class="number">1</span>)[<span class="number">0</span>];<span class="comment">//偶数行为head</span></span><br><span class="line">    info_es[i]=info_array.<span class="title function_">splice</span>(<span class="number">0</span>,<span class="number">1</span>)[<span class="number">0</span>]; <span class="comment">//奇数行为内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样<code>info_es</code>里存的才是我需要的信息。</p><p>接下来还有会员号和积分，没有和上面的信息在同一个class里面，就另外获取一下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> card_no = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;msg_pre_view&quot;</span>)[<span class="number">1</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;span&quot;</span>)[<span class="number">1</span>].<span class="property">innerText</span></span><br><span class="line"><span class="keyword">var</span> card_point = <span class="built_in">parseInt</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;msg_pre_view&quot;</span>)[<span class="number">1</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;span&quot;</span>)[<span class="number">2</span>].<span class="property">innerText</span>)</span><br><span class="line">info_head.<span class="title function_">push</span>(<span class="string">&quot;会员号&quot;</span>,<span class="string">&quot;积分&quot;</span>)</span><br><span class="line">info_es.<span class="title function_">push</span>(card_no,card_point)</span><br></pre></td></tr></table></figure><p>在后面就把会员号和积分添加进刚才数组的末尾。</p><p>现在，info_es就长这个样子<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/Wechat-vip-info-export/info_es.png"><br>那为了保存我现在得到的数据，我试过用cookie，但是有空间限制，并存不下我两百多个会员的信息，所以后来是使用了localstorage，更健壮也比cookie大很多，而且存取只要两句话：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;csv&quot;</span>,csv);<span class="comment">//存</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;csv&quot;</span>);<span class="comment">//取</span></span><br></pre></td></tr></table></figure><p>就喜欢这么简单的</p><p>不过在存之前先把我们数组转换成csv的格式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> csv = info_es.<span class="title function_">join</span>(<span class="string">&quot;,&quot;</span>)</span><br></pre></td></tr></table></figure><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/Wechat-vip-info-export/csv.png" alt="csv"><br>所谓csv格式就是，逗号分隔数据，以<code>\n</code>换行符来分隔行，这里是一行的数据，所以还没看到<code>\n</code>。</p><p>接下来就是，把csv变量存进localStorage里</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;csv&quot;</span>,csv);</span><br></pre></td></tr></table></figure><p>已经很完美了，但这还只是一行，我们的目标是星辰和大海。</p><p>为了实现页内跳转，我用<code>window.location.href</code>这个值来定义当前的URL，这样就不必打开新窗口再关闭。</p><p>下面讲讲主要思路：在会员列表页开始，计数器写1，点第一个会员的详情，把数据弄好存进localstorage，返回会员列表页，计数器加一，点第二个， 读取localstorage里的csv，把当前会员数据追加进csv，存csv，以此类推，计数器加到大于10的时候点下一页的按钮，然后计数器写1。</p><p>还有一个问题就是列表页的js代码不能马上就运行，列表还没加载出来，会报错。要用<code>window.addEventListener(&#39;load&#39;, function() &#123;&#125;</code>来判断页面加载完成，完成后就执行{}里的语句。</p><p>总的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">read_info</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> info = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;msg_pre_view&quot;</span>)[<span class="number">0</span>].<span class="property">innerText</span></span><br><span class="line">        <span class="keyword">var</span> info_array = info.<span class="title function_">split</span>(<span class="string">&quot;\n&quot;</span>)<span class="comment">//转换信息为数组</span></span><br><span class="line">        info_array[<span class="number">1</span>] = info_array[<span class="number">1</span>].<span class="title function_">replace</span>(<span class="string">&quot; &quot;</span>,<span class="string">&quot;&quot;</span>)<span class="comment">//删掉会员名后面小笔的图标</span></span><br><span class="line">        <span class="keyword">var</span> info_es = []</span><br><span class="line">        <span class="keyword">var</span> info_head = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">            info_head[i]=info_array.<span class="title function_">splice</span>(<span class="number">0</span>,<span class="number">1</span>)[<span class="number">0</span>];<span class="comment">//偶数行为head</span></span><br><span class="line">            info_es[i]=info_array.<span class="title function_">splice</span>(<span class="number">0</span>,<span class="number">1</span>)[<span class="number">0</span>]; <span class="comment">//奇数行为内容</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> card_no = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;msg_pre_view&quot;</span>)[<span class="number">1</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;span&quot;</span>)[<span class="number">1</span>].<span class="property">innerText</span></span><br><span class="line">        <span class="keyword">var</span> card_point = <span class="built_in">parseInt</span>(<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;msg_pre_view&quot;</span>)[<span class="number">1</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;span&quot;</span>)[<span class="number">2</span>].<span class="property">innerText</span>)</span><br><span class="line">        info_head.<span class="title function_">push</span>(<span class="string">&quot;会员号&quot;</span>,<span class="string">&quot;积分&quot;</span>)</span><br><span class="line">        info_es.<span class="title function_">push</span>(card_no,card_point)</span><br><span class="line">        <span class="keyword">var</span> csv = info_es.<span class="title function_">join</span>(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> csv</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> step = <span class="built_in">parseInt</span>(<span class="title function_">getCookie</span>(<span class="string">&quot;step&quot;</span>))<span class="comment">//这个就是计数器</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">has</span>(<span class="string">&quot;action=user_list&quot;</span>))&#123;<span class="comment">//分支1：在会员列表页</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">getCookie</span>(<span class="string">&quot;step&quot;</span>)==<span class="string">&quot;&quot;</span>)&#123;<span class="comment">//如果第一次运行脚本，计数器写1</span></span><br><span class="line">                <span class="title function_">setCookie</span>(<span class="string">&quot;step&quot;</span>,<span class="string">&quot;1&quot;</span>);</span><br><span class="line">                step = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(step&gt;<span class="number">10</span>)&#123;<span class="comment">//计数器大于10的时候把自己写1，点下一页按钮</span></span><br><span class="line">                step=<span class="number">1</span></span><br><span class="line">                <span class="title function_">setCookie</span>(<span class="string">&quot;step&quot;</span>,step)</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;js_next_page&quot;</span>).<span class="title function_">click</span>()<span class="comment">//去往下一页</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">catch</span>(err) &#123;<span class="comment">//如果没有下一页可以去了就提示完成，下载csv文件</span></span><br><span class="line">                    <span class="title function_">alert</span>(<span class="string">&quot;导出完成，下载csv文件&quot;</span>)</span><br><span class="line">                    <span class="keyword">var</span> csv = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;csv&quot;</span>)</span><br><span class="line">                    csv = <span class="string">&quot;会员,地区,姓名,手机,生日,状态,是否关注,标签,会员号,积分\n&quot;</span>+csv</span><br><span class="line">                    <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;data:text/csv;charset=utf-8,&quot;</span>+csv)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;next page&quot;</span>)</span><br><span class="line">                <span class="keyword">return</span><span class="comment">//这个return必须要否则下一页的点击速度赶不上去详情页的速度</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;step:&quot;</span>+step)</span><br><span class="line">            <span class="title function_">setCookie</span>(<span class="string">&quot;back_url&quot;</span>,<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>)<span class="comment">//把列表页的URL存进cookie</span></span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&quot;tbody&quot;</span>)[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>)[step*<span class="number">2</span>-<span class="number">1</span>].<span class="property">href</span><span class="comment">//去往详情页</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">has</span>(<span class="string">&quot;action=user_detail&quot;</span>))&#123;<span class="comment">//分支2：在会员详情页</span></span><br><span class="line">            step++;</span><br><span class="line">            <span class="title function_">setCookie</span>(<span class="string">&quot;step&quot;</span>,step)</span><br><span class="line">            <span class="comment">/*在这里做事情*/</span></span><br><span class="line">            <span class="keyword">var</span> csv = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;csv&quot;</span>)<span class="comment">//拿出存在localstorage里的csv变量</span></span><br><span class="line">            <span class="keyword">if</span> (csv == <span class="literal">null</span>)&#123;<span class="comment">//如果是第一次运行脚本，csv的值就是null</span></span><br><span class="line">                csv = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;csv&quot;</span>,csv)</span><br><span class="line">            &#125;</span><br><span class="line">            csv = csv+<span class="string">&quot;\n&quot;</span>+<span class="title function_">read_info</span>()<span class="comment">//用换行符分隔已有的数据和这次读来的数据</span></span><br><span class="line">            <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&quot;csv&quot;</span>,csv)<span class="comment">//用localstorage存储csv</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;back&quot;</span>)</span><br><span class="line">            <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="title function_">getCookie</span>(<span class="string">&quot;back_url&quot;</span>)<span class="comment">//回到列表页，比用下面这行更有鲁棒性</span></span><br><span class="line">            <span class="comment">//window.history.back();//后退</span></span><br><span class="line">            <span class="comment">//return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>最后，它需要一个运行的载体，那就是tampermonkey没错了，完整的脚本我还上传到了GreasyFork，在这里：<a href="https://greasyfork.org/zh-CN/scripts/387221-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BC%9A%E5%91%98%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA-wechat-offical-account-vip-info-export">微信公众号会员信息导出</a></p><p>需要的尽管拿去用吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacOS Mojave Hackintosh for Lenovo Yoga710 [clover]</title>
      <link href="/hackintosh-of-yoga710/"/>
      <url>/hackintosh-of-yoga710/</url>
      
        <content type="html"><![CDATA[<p>I’ve been attempt making my laptop work with mojave for like one month, and bought a DW1820 wireless card to fix network problem.  Also there was a lot of problem like brightness, bluetooth, app store, etc. It’s all work now.</p><span id="more"></span><p>The most tricky part is to drive DW1820(What? I bought it for hackintosh!), I do found kext driver for my card from RehabMan, but seems not work at all. Every time I boot up I see this</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/hackintosh-of-yoga710/error1.jpg"></p><p>Maybe something wrong with Bluetooth since it’s connected via inner USB. But I fixed it by just delete <code>BrcmPatchRAM2.kext</code> and <code>BrcmFirmwareData.kext</code>, and add the address of bluetooth’s USB port to <code>FakePCIID.kext</code>, it workd fine then. no  need of other kext driver.</p><h4 id="Here’s-my-hardware"><a href="#Here’s-my-hardware" class="headerlink" title="Here’s my hardware:"></a>Here’s my hardware:</h4><div class="note info"><p><strong>Processor</strong>: Intel Core i5-7200U<br><strong>Graphics</strong>: Intel HD Graphics 620, NVDIA Geforce 940MX<br><strong>Memory</strong>: 4096 MB, 2133 MHz, DDR4, 1&#x2F;1 slots occupied, Single-Channel<br><strong>Display</strong>: 14 inch 16:9, 1920 x 1080 pixel 157 PPI, Multitouch<br><strong>Mainboard</strong>: Intel Kaby Lake-U Premium PCH</p></div><div class="note success"><h4 id="What-works-well"><a href="#What-works-well" class="headerlink" title="What works well:"></a>What works well:</h4><ul><li>Graphics, Brightness(and save brightness)</li><li>Keyboard &amp; Trackpad</li><li>Audio</li><li>Battery</li><li>Airprot</li><li>Bluetooth</li><li>HDMI output with audio</li><li>Headphone jack include microphone</li></ul></div><div class="note danger"><h4 id="What-is-not-working"><a href="#What-is-not-working" class="headerlink" title="What is not working:"></a>What is not working:</h4><ul><li>NVDIA Geforce 940MX</li><li>Touch screen</li><li>Sleep function(just about work, it wake immediately after sleep)</li><li>SD card reader</li></ul></div><div class="note default"><h4 id="Something-you-need-attention"><a href="#Something-you-need-attention" class="headerlink" title="Something you need attention:"></a>Something you need attention:</h4><p>brightness can be adjust at setting, you can add a key map yourself.<br>You can enable HIDPI :<a href="https://github.com/xzhih/one-key-hidpi">one-key-hidpi</a></p></div><p>I’m just put the clover file of myself here, hope there’s help for you. As for installing detals, it’s alot outside.</p><p>Download link: <a href="CLOVER.zip">clover file of yoga 710</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> English Article </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米6刷入miui欧洲版以及安装小米钱包、应用商店APP,开启全盘加密</title>
      <link href="/miui-eu/"/>
      <url>/miui-eu/</url>
      
        <content type="html"><![CDATA[<div class="note info no-icon"><p><a href="https://xiaomi.eu/community/forums/miui-rom-releases.103/">miui.eu</a>，一个真正没有广告的系统，比国际版还要纯净</p></div><p>我一开始照着知乎<a href="https://www.zhihu.com/question/50231539">这个教程</a>刷的，刷了后死活开不了机，也就是卡在了MI界面，后来在miui欧洲论坛找到了<a href="https://xiaomi.eu/community/threads/bootloop-problem-while-flashing-eu-stable.46593/">这个</a>答案，完全符合我的情况，不能直接从国内版刷成欧洲版，要先刷个国际版，在国际版的基础上才能刷欧洲版。</p><blockquote><p>miui欧洲版自带人脸解锁，抬起亮屏，还有谷歌的Smart Lock，挺有意思。</p></blockquote><span id="more"></span><hr><blockquote><p>2020-02-20 更新:</p><p>不再跟随官方miui的链接, 因为官方已经不再更新开发板的链接, 找了一个第三方列表: <a href="https://miuiver.com/sagit_developer_recovery/">小米6 MIUI开发版下载索引 (卡刷包)</a>. 现在还是每周自动生成一次, 发布在这里👉<a href="https://github.com/xiaoxx970/mipay-extract/releases">releases 页面</a>, 要注意自从9.8.15后面的版本我都没有自己测试过, 出了问题开机卡米什么的一般清data可以解决.</p></blockquote><blockquote><p>2019-08-18 更新：</p><p>现在已经半夜1点，我的小米6正在通过线刷刷国内版miui，起因是这次更新miui9.8.15版本后出了一点问题怎么也开不了机，具体的问题应该就是换行符的问题，我刚通过脚本自动获取链接的方式做到持续集成，可以全自动生成刷机包而不用每次改两个链接以及git commit,tag,push等，现在只要在持续集成那边开个定时，就可以每周自动出炉修复刷机包并且上传到GitHub的release页面，可惜我再也用不到了（大概），还需要的朋友记得在评论区告诉我，我会考虑加上其他机型或者出个持续集成的教程。</p><p>链接在这里：<a href="https://github.com/xiaoxx970/mipay-extract/releases">https://github.com/xiaoxx970/mipay-extract/releases</a></p><p>现在已经开启了每周更新，不用我动就会保持最新版本的，用着miui欧洲版的同学每次更新前去这个页面下载一下就可以刷机了。 </p></blockquote><p>首先要说的是，要折腾，先备份。<br>如果你用了谷歌验证器，可以象我一样换成Authy，通过手机登录，不用担心换手机找不回来<br>微信可以通过Windows端备份聊天记录<br>相册短信便签什么的就交给小米云，差不多就这些</p><p>其次要说的是，等下用到的所有提取出来的刷机包，在每一次更新系统后都会失效，你可以选择再次刷入。<br>特别地，关于支付安全，eu固件默认关闭了全盘强制加密（FBE）功能，这跟国内固件不一样，最直接的影响就是进入恢复模式不用解密，数据暴露在捡到你手机的人面前，所以我是选择刷入了开启加密的补丁包，同样的每一次更新系统就必须在更新后重新刷入<code>force-fbe</code>包，否则无法开机。</p><h1 id="请选择你的选择↓"><a href="#请选择你的选择↓" class="headerlink" title="请选择你的选择↓"></a>请选择你的选择↓</h1><div class="tabs" id="fbe"><ul class="nav-tabs"><li class="tab active"><a href="#fbe-1">开启全盘加密</a></li><li class="tab"><a href="#fbe-2">不开启全盘加密</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fbe-1"><p>下面从第一步，你还是个国内miui系统开始</p><h1 id="解锁bootloader"><a href="#解锁bootloader" class="headerlink" title="解锁bootloader"></a>解锁bootloader</h1><p>看这里👉 <a href="http://www.miui.com/unlock/index.html">http://www.miui.com/unlock/index.html</a></p><h1 id="刷入国际版ROM"><a href="#刷入国际版ROM" class="headerlink" title="刷入国际版ROM"></a>刷入国际版ROM</h1><div class="note info"><p>根据评论，可以直接刷欧洲版，只要刷完欧洲版，清理一下缓存就行了，所以这步可跳过试试</p></div><p>欧洲版和国内版系统分区不一样（我猜的），直接卡刷欧洲版我试过没法开机（可能还是因为FBE的缘故？），反正为了保证成功就先刷国际版ROM，顺便把系统和数据也清了</p><ul><li>去下载线刷包：<a href="http://en.miui.com/download.html">线刷包地址</a></li><li>手机音量下+电源键开机，进入Fastboot模式</li><li>下载小米的<a href="http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip">通用刷机工具</a></li><li>按照教程一步一步往下做</li><li><strong>注意</strong>软件打开右下角不要选<code>全部删除并lock</code>，选择<code>全部删除</code>就可以了</li><li>线刷具体教程：<a href="http://www.miui.com/shuaji-393.html">http://www.miui.com/shuaji-393.html</a></li></ul><h1 id="不用开机，继续刷入twrp"><a href="#不用开机，继续刷入twrp" class="headerlink" title="不用开机，继续刷入twrp"></a>不用开机，继续刷入twrp</h1><p>怎么做到的呢，就是线刷软件提示刷入成功，手机重启的时候，还是按住音量下+电源键开机，进入Fastboot模式，通过ADB(刚才下载的通用刷机工具里有)终端命令来刷入。<br>如果还是不小心开机了没关系，等下刷系统的时候在twrp里面双清一下就可以了。</p><ol><li><p><a href="https://twrp.me/Devices/">twrp官方下载</a></p><p> 选择你的机型对应下载下来</p></li><li><p>打开adb终端</p><p> adb终端的位置在<code>\MiFlash2018-5-28-0\Source\ThirdParty\Google\Android</code>里面，进入到<code>Android</code>文件夹，鼠标在空白的地方按住Shift以后右键，选择在此处打开cmd&#x2F;power shell窗口，就可以使用adb了。</p></li><li><p>终端输入命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash recovery twrp.img</span><br><span class="line">fastboot boot twrp.img</span><br></pre></td></tr></table></figure><p> <code>twrp.img</code> 是替换成你的twrp包的路径和名称。</p><blockquote><p>第二条命令执行完后手机就会自己重启到twrp界面，可以设置成中文。</p></blockquote></li></ol><h1 id="进入twrp，刷eu固件"><a href="#进入twrp，刷eu固件" class="headerlink" title="进入twrp，刷eu固件"></a>进入twrp，刷eu固件</h1><ol><li><p>去下载miui欧洲版：<a href="https://xiaomi.eu/community/link-forums/roms-download.73/">miui欧洲版发布页面</a></p></li><li><p>格式化data分区</p></li><li><p>连接电脑，把eu固件拷入sdcard目录</p><p>手机在twrp界面，电脑上应该能看到手机，不能的话在手机点挂载，然后点开启MTP</p></li><li><p>选择eu包刷机</p><div class="note primary"><p>因为你选了要开启全盘加密</p></li></ol><p>   刷到这里的时候手机先放一边, 刷完不要开机, 下面操作电脑弄出修复包一起刷了以后再开机</p></div><h1 id="提取加密包以及mipay"><a href="#提取加密包以及mipay" class="headerlink" title="提取加密包以及mipay"></a>提取加密包以及mipay</h1><blockquote><p>要从中国版固件的system.img里面提取软件包，还要通过Root权限把软件包写入System分区，这里有一个教程：<a href="https://www.yipkwong.com/2018/06/06/167/">MIUI国际版mi pay解决方案</a>，里面叙述了详细经过，但是我没用这个方法，虽然尝试过但是卡在了挂载镜像那一步。</p></blockquote><p>使用：<a href="https://github.com/linusyang92/mipay-extract">Mi Pay Extractor</a>，是一个提取脚本，可以自动提取出卡刷包中的MiPay软件和日历、天气等。</p><ol><li><p>下载zip包: <a href="https://github.com/linusyang92/mipay-extract/archive/master.zip">repo的下载链接</a></p><p>linux用户可以clone</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/linusyang92/mipay-extract.git</span><br></pre></td></tr></table></figure></li><li><p>下载国内的miui最新卡刷包，放入同一目录</p></li><li><p>miui欧洲版卡刷包，也放在同一目录</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/git-clone.jpg" alt="目录截图"></p></li><li><p>运行<code>extract.bat</code>(双击)</p><p>会生成一个卡刷包<code>mipay-MIxxx.zip</code></p><div class="note default"><p>如果出现下面这样的错误：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">extract.sh: line 2: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 3: <span class="built_in">cd</span>: $<span class="string">&#x27;.\r&#x27;</span>: No such file or directory</span><br><span class="line">extract.sh: line 4: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 6: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 18: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 19: syntax error near unexpected token `$<span class="string">&#x27;&#123;\r&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>xtract.sh: line 19: `<span class="function"><span class="title">exists</span></span>() &#123;</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><p>那就是因为<code>extract.sh</code>文件用的换行符不对，把原来的换行符<code>CRLF</code>改成<code>LF</code>后保存就可以正常运行了</p></div><p>   Windows下双击<code>extract.bat</code>就可以开始提取，会要几分钟时间。<br>   <img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/bat-run.jpg" alt="bat-run">这样就说明提取成功，现在目录下会有<code>mipay-MIxxx.zip</code>,这就是一个卡刷包，通过twrp可以直接刷入</p><ol start="5"><li><p>运行<code>cleaner-fix.bat</code>(双击)</p> <div class="note primary"><p>这里就是生成开启默认加密的刷机包 <code>force-fbe</code></p></li></ol></div><pre><code>还可以生成修复日历和天气的刷机包，具体说就是让日历显示农历，天气app换回国内的。</code></pre><ol start="6"><li>对于想在负一屏还能用微信支付宝扫码快捷键的，以及查快递，在cmd运行<code>extract.bat --appvault</code>可以生成这样的修复包，也就是替换成跟国内一样的信息助手</li></ol><p>Finally，我们有了四个准备卡刷的包：<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/mipay-extract.jpg" alt="目录截图2">全部还是通过MTP放进手机，一个一个刷就是了</p><div class="note warning"><p>如果刷机的时候遇到255错误</p><p>简单来说就是以上这四个包，没一个能刷成功的，网上搜255错误，原因很多，没有一个能解决我的问题的，于是我慢慢想起了前面提到的<code>CRLF</code>，说不定又是这个东西在捣鬼。打开zip包，第一个文件夹<code>META-INF</code>一路点进去，最后看到了一个叫做<code>update-binary</code>的文件，这个文件类似于脚本，在刷机的时候执行的，和其他能刷成功的一对比发现确实是因为用了<code>CRLF</code>换行符导致错误的。用VScode打开转换成<code>LF</code>后保存，更新压缩包，这次就没有任何毛病了,在twrp下开启MTP把刷机包存到手机，可以全部成功刷入。</p></div><h1 id="完成-开机"><a href="#完成-开机" class="headerlink" title="完成, 开机"></a>完成, 开机</h1><p>刷好后就可以开机</p><p>选择语言，连WiFi，登账号<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/screen1.jpg"></p><p>这时候如果进设置就会看到手机已加密</p><blockquote><p>是用来看的, 要是看到没加密不能在这里选开启加密, 不然会出问题</p><p>(如果有人试了不刷加密包来到这里可以开启加密记得告诉我)</p></blockquote><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/screen.png"></p><p>好了这样就完事了, 可以继续看下面, 下个国产的应用商店</p></div><div class="tab-pane" id="fbe-2"><p>下面从第一步，你还是个国内miui系统开始</p><h1 id="解锁bootloader"><a href="#解锁bootloader" class="headerlink" title="解锁bootloader"></a>解锁bootloader</h1><p>看这里👉 <a href="http://www.miui.com/unlock/index.html">http://www.miui.com/unlock/index.html</a></p><h1 id="刷入国际版ROM"><a href="#刷入国际版ROM" class="headerlink" title="刷入国际版ROM"></a>刷入国际版ROM</h1><div class="note info"><p>根据评论，可以直接刷欧洲版，只要刷完欧洲版，清理一下缓存就行了，所以这步可跳过试试</p></div><p>欧洲版和国内版系统分区不一样（我猜的），直接卡刷欧洲版我试过没法开机（可能还是因为FBE的缘故？），反正为了保证成功就先刷国际版ROM，顺便把系统和数据也清了</p><ul><li>去下载线刷包：<a href="http://en.miui.com/download.html">线刷包地址</a></li><li>手机音量下+电源键开机，进入Fastboot模式</li><li>下载小米的<a href="http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip">通用刷机工具</a></li><li>按照教程一步一步往下做</li><li><strong>注意</strong>软件打开右下角不要选<code>全部删除并lock</code>，选择<code>全部删除</code>就可以了</li><li>线刷具体教程：<a href="http://www.miui.com/shuaji-393.html">http://www.miui.com/shuaji-393.html</a></li></ul><h1 id="不用开机，继续刷入twrp"><a href="#不用开机，继续刷入twrp" class="headerlink" title="不用开机，继续刷入twrp"></a>不用开机，继续刷入twrp</h1><p>怎么做到的呢，就是线刷软件提示刷入成功，手机重启的时候，还是按住音量下+电源键开机，进入Fastboot模式，通过ADB(刚才下载的通用刷机工具里有)终端命令来刷入。<br>如果还是不小心开机了没关系，等下刷系统的时候在twrp里面双清一下就可以了。</p><ol><li><p><a href="https://twrp.me/Devices/">twrp官方下载</a></p><p> 选择你的机型对应下载下来</p></li><li><p>打开adb终端</p><p> adb终端的位置在<code>\MiFlash2018-5-28-0\Source\ThirdParty\Google\Android</code>里面，进入到<code>Android</code>文件夹，鼠标在空白的地方按住Shift以后右键，选择在此处打开cmd&#x2F;power shell窗口，就可以使用adb了。</p></li><li><p>终端输入命令</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fastboot flash recovery twrp.img</span><br><span class="line">fastboot boot twrp.img</span><br></pre></td></tr></table></figure><p> <code>twrp.img</code> 是替换成你的twrp包的路径和名称。</p><blockquote><p>第二条命令执行完后手机就会自己重启到twrp界面，可以设置成中文。</p></blockquote></li></ol><h1 id="进入twrp，刷eu固件"><a href="#进入twrp，刷eu固件" class="headerlink" title="进入twrp，刷eu固件"></a>进入twrp，刷eu固件</h1><ol><li><p>去下载miui欧洲版：<a href="https://xiaomi.eu/community/link-forums/roms-download.73/">miui欧洲版发布页面</a></p></li><li><p>连接电脑，把eu固件拷入sdcard目录<br>手机在twrp界面，电脑上应该能看到手机，不能的话在手机点挂载，然后点开启MTP</p></li><li><p>从手机上点刷机，选择刷机包，完成，开机。</p></li></ol><p>到这里已经完成miui欧洲版刷机了，选择语言，连WiFi，登账号<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/screen1.jpg">这是开机后的桌面<br>miui欧洲版阉割了很多比如小米钱包，里面的卡模拟的功能我用得到，包括公交卡什么的，所以接下来折腾如何装回这个应用</p><h1 id="提取Mipay安装包以及本土化修复包"><a href="#提取Mipay安装包以及本土化修复包" class="headerlink" title="提取Mipay安装包以及本土化修复包"></a>提取Mipay安装包以及本土化修复包</h1><blockquote><p>要从中国版固件的system.img里面提取软件包，还要通过Root权限把软件包写入System分区，这里有一个教程：<a href="https://www.yipkwong.com/2018/06/06/167/">MIUI国际版mi pay解决方案</a>，里面叙述了详细经过，但是我没用这个方法，虽然尝试过但是卡在了挂载镜像那一步。</p></blockquote><p>使用：<a href="https://github.com/linusyang92/mipay-extract">Mi Pay Extractor</a>，是一个提取脚本，可以自动提取出卡刷包中的MiPay软件和日历、天气等。</p><ol><li><p>下载zip包: <a href="https://github.com/linusyang92/mipay-extract/archive/master.zip">repo的下载链接</a></p><p>linux用户可以clone</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/linusyang92/mipay-extract.git</span><br></pre></td></tr></table></figure></li><li><p>下载国内的miui最新卡刷包，放入同一目录</p></li><li><p>miui欧洲版卡刷包，也放在同一目录</p><p><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/git-clone.jpg" alt="目录截图"></p></li><li><p>运行<code>extract.bat</code>(双击)</p><p>可以生成加密包和一个修复包</p><div class="note default"><p>如果出现下面这样的错误：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">extract.sh: line 2: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 3: <span class="built_in">cd</span>: $<span class="string">&#x27;.\r&#x27;</span>: No such file or directory</span><br><span class="line">extract.sh: line 4: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 6: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 18: $<span class="string">&#x27;\r&#x27;</span>: <span class="built_in">command</span> not found</span><br><span class="line">extract.sh: line 19: syntax error near unexpected token `$<span class="string">&#x27;&#123;\r&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#x27;</span>xtract.sh: line 19: `<span class="function"><span class="title">exists</span></span>() &#123;</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure><p>那就是因为<code>extract.sh</code>文件用的换行符不对，把原来的换行符<code>CRLF</code>改成<code>LF</code>后保存就可以正常运行了</p></div>   <p>   <img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/bat-run.jpg" alt="bat-run"></p><p>   这样就说明提取成功，现在目录下会有<code>mipay-MIxxx.zip</code>,这就是一个卡刷包，通过twrp可以直接刷入</p><ol start="5"><li><p>运行<code>cleaner-fix.bat</code><br>生成修复日历和天气的刷机包，具体说就是让日历显示农历，天气app换回国内的。这个命令同时还会生成开启默认加密的刷机包。</p></li><li><p>对于想在负一屏还能用微信支付宝扫码快捷键的，以及查快递，<code>extract.bat --appvault</code>可以生成这样的修复包，也就是替换成跟国内一样的信息助手</p></li></ol><p>Finally，我们有了四个准备卡刷的包：<br><img data-src="https://xiaoxx.oss-cn-beijing.aliyuncs.com/blog-img/miui-eu/mipay-extract.jpg" alt="目录截图2">全扔进手机，一个一个刷就是了</p><div class="note warning"><p>如果刷机的时候遇到255错误</p><p>简单来说就是以上这四个包，没一个能刷成功的，网上搜255错误，原因很多，没有一个能解决我的问题的，于是我慢慢想起了前面提到的<code>CRLF</code>，说不定又是这个东西在捣鬼。打开zip包，第一个文件夹<code>META-INF</code>一路点进去，最后看到了一个叫做<code>update-binary</code>的文件，这个文件类似于脚本，在刷机的时候执行的，和其他能刷成功的一对比发现确实是因为用了<code>CRLF</code>换行符导致错误的。用VScode打开转换成<code>LF</code>后保存，更新压缩包，这次就没有任何毛病了,在twrp下开启MTP把刷机包存到手机，可以全部成功刷入。</p></div></div></div></div><p>下面是安装小米应用商店，装了就可以用它来更新小米钱包，而不用每次想更新都去下载线刷包。</p><p>下载地址：<a href="https://xiaomi-market.cn.uptodown.com/android">https://xiaomi-market.cn.uptodown.com/android</a></p><p>不知道为什么这个网站是被墙了的，开全局去下</p><p>然后就可以安装了，一切都非常完美，可以一键装应用和更新</p><p>最后，终于写完了这个教程，自我感觉是很详细了，希望可以帮到跟我一样在折腾miui的人。我刷这个系统的初衷是国内版变得越来越难用，最主要的表现是经常熄屏自己莫名震动，还经常自己亮屏，打开了看也没有什么通知，后来上网一搜发现我不是一个人，这是小米系统本身的问题，那些震动是真的有通知不过之前被我从通知栏禁止了，可能禁止的层面不对，等通知到达了震动了系统才把通知删掉，这不是折磨人么。我就找能不能刷类似CM的原版安卓，然后就在知乎上看到了miui欧洲版，感觉对安卓的底层不会改太多，就折腾用欧洲版来了。现在用了两个星期，确实好用，字体不好看还换了个字体，外观上和国内版差别也不大。就是每次升级系统不是很方便就是了，之后会想办法用持续集成完成自动的提取。</p><blockquote><p>2019-4-23更新：总结一下用miui-eu时更新系统步骤</p><ol><li><p>下载eu包：<a href="https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/">https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/</a></p></li><li><p>下载国内相同版本包：<a href="http://www.miui.com/download.html">http://www.miui.com/download.html</a></p></li><li><p>在<code>mipay-extract</code>文件夹中执行以下命令</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./cleaner-fix.bat</span></span><br><span class="line"><span class="string">./extract.bat</span> <span class="params">--appvault</span></span><br></pre></td></tr></table></figure></li><li><p>生成的4个包加上下载下来的eu包拷贝进手机，重启进入twrp选择刷机包刷机</p><p>可以批量选择刷机包，顺序是eu包在最前面，其他的在后面刷。</p><blockquote><p>我的<a href="https://github.com/xiaoxx970/mipay-extract/releases">Release页面</a> ，如果你也是小米6就可以直接下载下来用</p></blockquote></li></ol></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> MIUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft海外服务器加速后续：用frp更高效地转发流量（也适用于其他游戏的加速）</title>
      <link href="/frp-for-mc/"/>
      <url>/frp-for-mc/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前情提要：之前用Nginx反向代理的功能来加速Minecraft，真的是太不稳定！了！<br>经常出现玩着玩着掉线了，去看Minecraft服务器没有任何毛病，看用来加速的阿里云服务器，也没有任何异常，但是直连Minecraft服务器是可以的，所以问题绝壁出在加速服务器上<br>重启Nginx，连不上，重启服务器，还是连不上，最后过了几分钟，自己连上了。很任性有没有，如此的情况出了几次实在是忍受不了了，于是在想别的办法，想到一个叫frp的软件，之前用过来做内网穿透，同样也是转发流量的道理嘛，就两边装了试试发现，是真的好用啊，甚至感觉延迟更低了，也没有掉线过</p></blockquote><p>安装过程来介绍一下</p><!---more---><p>其实也没什么新的东西，就是分别在服务器和加速服务器安装frp，然后配置运行就可以了</p><h1 id="在Minecraft服务器上安装和配置frp客户端-frpc"><a href="#在Minecraft服务器上安装和配置frp客户端-frpc" class="headerlink" title="在Minecraft服务器上安装和配置frp客户端(frpc)"></a>在Minecraft服务器上安装和配置frp客户端(frpc)</h1><ul><li><p>下载并解压frp</p><p>  可以去<a href="https://github.com/fatedier/frp/releases/latest">release页面</a>找到最新版的下载链接然后替换下面的链接</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz</span><br><span class="line">tar -xvf frp.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>到frp目录下,复制文件到系统里（以管理员身份运行）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> frp</span><br><span class="line"><span class="built_in">cp</span> frpc /usr/local/bin/frpc</span><br><span class="line"><span class="built_in">mkdir</span> /etc/frp</span><br><span class="line"><span class="built_in">cp</span> frpc.ini /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure></li><li><p>编写frpc的配置文件：<code>frpc.ini</code></p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/frp/frpc.ini</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = 加速服务器的IP或域名</span><br><span class="line">server_port = 7000</span><br><span class="line">login_fail_exit= <span class="literal">false</span>  <span class="comment">#0.11新功能：登录远程服务器失败不退出，30s自动重试</span></span><br><span class="line"><span class="comment">#protocol = kcp</span></span><br><span class="line"></span><br><span class="line">[mc]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 25565</span><br><span class="line">remote_port = 25565</span><br><span class="line"></span><br><span class="line">[mc-udp]</span><br><span class="line"><span class="built_in">type</span> = udp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 25565</span><br><span class="line">remote_port = 25565</span><br></pre></td></tr></table></figure><p>  我也不知道开启udp的必要性，但是经过实测只开tcp并登陆不进游戏</p></li><li><p>编写 frp service 文件，把frpc加入系统服务，这样方便管理</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nano /usr/lib/systemd/system/frpc.service</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=frpc</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=30</span><br><span class="line">ExecStart=/usr/local/bin/frpc -c /etc/frp/frpc.ini</span><br><span class="line">ExecStop=/bin/kill <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></li><li><p>设置文件权限，启动 frp 并设置开机启动</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 754 /usr/lib/systemd/system/frpc.service</span><br><span class="line">systemctl <span class="built_in">enable</span> frpc</span><br></pre></td></tr></table></figure><p>  好了frp客户端的操作先到这里，等下装好frp服务端并运行后再<a id="back" />回来这里，开启客户端：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start frpc</span><br><span class="line">systemctl status frpc</span><br></pre></td></tr></table></figure></li></ul><h1 id="在加速服务器上安装frp服务端"><a href="#在加速服务器上安装frp服务端" class="headerlink" title="在加速服务器上安装frp服务端"></a>在加速服务器上安装frp服务端</h1><ul><li>还是一样，先下载frp，再解压  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz</span><br><span class="line">tar -xvf frp.tar.gz</span><br></pre></td></tr></table></figure></li><li>到frp目录下,复制文件到系统里（这次是frps了）  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> frp</span><br><span class="line"><span class="built_in">cp</span> frps /usr/local/bin/frps</span><br><span class="line"><span class="built_in">mkdir</span> /etc/frp</span><br><span class="line"><span class="built_in">cp</span> frps.ini /etc/frp/frps.ini</span><br></pre></td></tr></table></figure></li><li>编写frps的配置文件：<code>frps.ini</code>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/frp/frps.ini</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line">[common]</span><br><span class="line">bind_port = 7000</span><br></pre></td></tr></table></figure>  就是这么简单，记得去防火墙允许7000端口</li><li>加入系统服务  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nano /usr/lib/systemd/system/frps.service</span><br><span class="line"><span class="comment"># 内容如下</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=frps</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">TimeoutStartSec=30</span><br><span class="line">ExecStart=/usr/local/bin/frps -c /etc/frp/frps.ini</span><br><span class="line">ExecStop=/bin/kill <span class="variable">$MAINPID</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>  保存退出，设置权限，开机启动  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 754 /usr/lib/systemd/system/frps.service</span><br><span class="line">systemctl <span class="built_in">enable</span> frps</span><br><span class="line">systemctl start frps</span><br><span class="line">systemctl status frps</span><br></pre></td></tr></table></figure>  现在可以<a href="#back">回去</a>启动客户端了  <br /></li></ul><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;完成了~最后一句话是显示服务运行状态的,当里面显示绿色的<code>active</code>就表示程序正常运行了<br>客户端那边也是，如果出问题了显示红色的<code>dead</code>，那么认真看看系统日志,是不是配置文件不对什么的，然后再<code>systemctl restart frpc</code>(s),看<code>status</code>，多错几次还是就OK了。</p><p>如果你照着我的教程做了，在任何一步出了问题都欢迎在评论里告诉我，看到了一定回复。</p><blockquote><p>ftp项目地址：<a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a><br>它能做的不止转发端口流量这么简单，如果你愿意，看看它的中文文档，会有很多收获的</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Systemctl </tag>
            
            <tag> Minecraft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Nginx转发Minecraft服务器流量达到加速的目的(Nginx转发TCP)</title>
      <link href="/nginx%E5%BB%BA%E7%AB%8BTCP%E4%BB%A3%E7%90%86/"/>
      <url>/nginx%E5%BB%BA%E7%AB%8BTCP%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>阿里云学生机10块一个月挺便宜了，就是内存2G对于一个Minecraft服务器来说有点小<br>而我还有个谷歌云服务器在台湾，配置不错内存也够，问题就是网络延迟太大<br>把Minecraft服务器运行在那里实际玩下来发现延迟不能忍受<br>从我的电脑Ping台湾服务器有250ms，Ping阿里云20ms，阿里云Ping台湾服务器，50ms<br>用小学老师教我的加法一算发现，50+20小于250啊<br>于是就有了标题这个想法</p><span id="more"></span><p>对于流量转发除了SS和Frp其他我还真不知道（<strong>去看我的<a href="/frp-for-mc/">frp教程</a>吧，真的，Nginx反向代理太难用了</strong>）</p><p>网上查了可以用firewalld做端口转发，我试了把tcp和udp的25565端口都转发到台湾服务器<br>没用，可能是原理不对</p><p>再一查看到Nginx反向代理可以做这种事情<br>大概就是编辑站点配置文件，在server{}里面加上</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">listen</span> <span class="number">25565</span>;</span><br><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">  <span class="comment"># 代理的地址</span></span><br><span class="line">  <span class="attribute">proxy_pass</span> http://35.xx.xx.23:25565;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我确实这样做了因为前面不加<code>http://</code>配置文件不让过，结果一试当然没有用</p><h1 id="正确的方法在这里"><a href="#正确的方法在这里" class="headerlink" title="正确的方法在这里"></a>正确的方法在这里</h1><p>后来找到了Nginx转发tcp的文章，总算是找对方向了<br>我的Nginx版本1.14，默认是支持TCP流量转发的，只需要在<strong>Nginx的</strong>配置文件(Nginx.conf)里面加如下面几行就可以：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">stream</span> &#123;</span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">25565</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> <span class="number">35</span>.xx.xx.<span class="number">23</span>:<span class="number">25565</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加在events后面</p><p>是的，就是这么简单，这篇文章能教你的已经结束了</p><p>而我自己的折腾还在后面，因为我没有把前面listen 25565的站点删掉，没删掉！！<br>导致我不管怎么改Nginx的配置都是说连不上<br>折腾了一晚上+一小个下午共计两个小时，的人生<br>终于在今天也就是写这篇文章前发现了，把那个站点删掉，终于是能连上了<br>感动得我<br>掀了桌子<br>昔日的卡顿<br>完全没了影子<br>那么以后<br>终于能和小伙伴愉快的玩mc了<br>开心</p>]]></content>
      
      
      
        <tags>
            
            <tag> Minecraft </tag>
            
            <tag> Frp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Coding绑定ssh并部署hexo</title>
      <link href="/%E5%85%B3%E4%BA%8Ecoding%E5%92%8Cgit%E7%9A%84%E6%8A%98%E8%85%BE/"/>
      <url>/%E5%85%B3%E4%BA%8Ecoding%E5%92%8Cgit%E7%9A%84%E6%8A%98%E8%85%BE/</url>
      
        <content type="html"><![CDATA[<p>通过ssh连接git需要配置公钥，先在本地生成公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;your_email@example.com&quot;</span></span><br></pre></td></tr></table></figure><p>生成在目录<code>~/.ssh</code>下面，<code>.ssh/id_rsa.pub</code>就是公钥，绑定coding的时候在设置里点添加公钥，然后复制<code>.pub</code>文件里的内容过去，<span id="more"></span>保存后还需要认证一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.NET</span><br></pre></td></tr></table></figure><p>按照提示输<code>yes</code><br>coding会提示绑定成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> D:\Onedrive\文档\hexo&gt; ssh <span class="literal">-T</span> git@git.coding.NET</span><br><span class="line">The authenticity of host <span class="string">&#x27;git.coding.net (118.25.***.124)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">RSA key fingerprint is SHA256:jok3FH7q5LJ6qvE7iPNehBgXRw51ErE77S0Dn+Vg/Ik.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class="line"><span class="string">Warning: Permanently added &#x27;</span>git.coding.net,<span class="number">118.25</span>.***.<span class="number">124</span><span class="string">&#x27; (RSA) to the list of known hosts.</span></span><br><span class="line"><span class="string">Coding 提示: Hello xiaoxx97, You&#x27;</span>ve connected to Coding.net via SSH. This is a personal key.</span><br><span class="line">xiaoxx97，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥</span><br></pre></td></tr></table></figure><p>以及，如果你的项目的名称不是<code>你的用户名.coding.me</code>，虽然也可以开启静态页面，但是图片的路径会出错，导致所有图片显示不出来，要解决这个问题，绑定一个域名就好了。</p><p>关于hexo的配置文件的deploy部分</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line">    <span class="attr">coding:</span> <span class="string">git@git.coding.net:你的用户名/项目名.git,master</span></span><br></pre></td></tr></table></figure><p><code>.git</code>后面<code>,master</code>要记得加<br>还有现在coding好像在改版，项目页面复制下来的git链接域名是<code>git.dev.tencent.com</code>，而根据我现在的实践操作发现如果我不把域名换成<code>git.coding.net</code>的话是没法部署成功的，失败原因是<code>Host key verification failed.</code></p><p>如果没装过deployer要先装不然会deploy失败</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装了armbian的Orange pi折腾记录(外接HDMI屏幕分辨率调节及屏幕旋转)</title>
      <link href="/orangepi%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/"/>
      <url>/orangepi%E6%8A%98%E8%85%BE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<ul><li><h3 id="Armbian-orange-pi-调节分辨率"><a href="#Armbian-orange-pi-调节分辨率" class="headerlink" title="Armbian orange pi 调节分辨率"></a>Armbian orange pi 调节分辨率</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h3disp -m 1080p60 -c 1</span><br></pre></td></tr></table></figure></li><li><h3 id="动态开启-x2F-关闭HDMI输出"><a href="#动态开启-x2F-关闭HDMI输出" class="headerlink" title="动态开启&#x2F;关闭HDMI输出"></a>动态开启&#x2F;关闭HDMI输出</h3>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line"><span class="built_in">cd</span> /sys/kernel/debug/dispdbg/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;switch&quot;</span> &gt; <span class="built_in">command</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;disp&quot;</span> &gt; name</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;0 10&quot;</span> &gt; param</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; start</span><br></pre></td></tr></table></figure><p>  把parm部分的0改成4就是打开HDMI输出，第二个数字10代表输出分辨率为1080p60，换成5则代表720p60。</p>  <span id="more"></span><p>  全部模式列表：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0 480i</span><br><span class="line">1 576i</span><br><span class="line">2 480p</span><br><span class="line">3 576p</span><br><span class="line">4 720p 50Hz</span><br><span class="line">5 720p 60Hz</span><br><span class="line">6 1080i 50 Hz</span><br><span class="line">7 1080i 60 Hz</span><br><span class="line">8 1080p 24 Hz</span><br><span class="line">9 1080p 50 Hz</span><br><span class="line">10 1080p 60 Hz</span><br></pre></td></tr></table></figure><p>  各种详细设置:<a href="https://docs.armbian.com/User-Guide_Fine-Tuning/">Fine-Tuning</a></p></li><li><h3 id="屏幕旋转"><a href="#屏幕旋转" class="headerlink" title="屏幕旋转"></a>屏幕旋转</h3><p>  编辑配置文件：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/X11/xorg.conf.d/01-armbian-defaults.conf</span><br></pre></td></tr></table></figure><p>  在末尾加入下面的代码:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Append</span></span><br><span class="line">Section <span class="string">&quot;Device&quot;</span></span><br><span class="line">Identifier <span class="string">&quot;default&quot;</span></span><br><span class="line">Driver <span class="string">&quot;fbdev&quot;</span></span><br><span class="line">Option <span class="string">&quot;Rotate&quot;</span> <span class="string">&quot;CCW&quot;</span></span><br><span class="line">EndSection</span><br></pre></td></tr></table></figure><p>  保存后重启，重启后屏幕就旋转成竖的了。 你可以通过改变<code>CCW</code>到<code>CW</code>来改变旋转方向。</p></li></ul><hr><ul><li><h3 id="python-log用法"><a href="#python-log用法" class="headerlink" title="python log用法"></a>python log用法</h3>  <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logging.basicConfig(filename=<span class="string">&#x27;/root/screen.log&#x27;</span>, level=logging.INFO, <span class="built_in">format</span>=<span class="string">&#x27;%(asctime)s %(message)s&#x27;</span>, datefmt=<span class="string">&#x27;[%Y-%m-%d %I:%M:%S %p]&#x27;</span>)</span><br><span class="line">logging.info(<span class="string">&#x27;hi&#x27;</span>)</span><br></pre></td></tr></table></figure><p>  输出(文件：screen.log)：<br>  <code>[2018-10-08 09:36:36 PM] hi</code><br>  其他用法还有：</p>  <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">logging.debug(<span class="string">&quot;debug&quot;</span>) </span><br><span class="line">logging.info(<span class="string">&quot;info&quot;</span>) </span><br><span class="line">logging.warning(<span class="string">&quot;warning&quot;</span>) </span><br><span class="line">logging.error(<span class="string">&quot;error&quot;</span>)</span><br><span class="line">logging.critical(<span class="string">&quot;critical&quot;</span>)</span><br></pre></td></tr></table></figure><p>  参照：<a href="https://docs.python.org/2/howto/logging.html">https://docs.python.org/2/howto/logging.html</a></p><p>  进程管理工具Supervisor:<a href="https://www.restran.net/2015/10/04/supervisord-tutorial/">管理Python</a></p></li></ul><blockquote><p>习得以上知识所用的时间：230分钟</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把时间当作朋友_笔记</title>
      <link href="/%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B_%E7%AC%94%E8%AE%B0/"/>
      <url>/%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B_%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li>我有没有什么觉得自己“现在学也来不及了”的技能？</li><li>浮躁的根源：不懂“有些阶段就是无法跨越”这个道理。告诉自己：我有不足，我需要时间，我没办法一蹴而就。<br>“我要”的欲望可以用”我有“的东西来满足，即便“我有“的暂时不够，我也能借助已经拥有的努力和勤奋（亦或投机），只要假以时日，定能如愿以偿。一旦得偿所愿，不仅”我有“的更多，”我要“的也更容易获得，如此形成良性循环。<br>摆脱生活死循环：给我什么我就用好什么，积累到一定程度再去换能换的东西。<span id="more"></span><br>在想到”我要什么“的时候马上提醒自己，接下来要花一些时间去思考”我有什么“。后者会在转瞬间让我”脚踏实地“。</li><li>完美永不存在，未知永远存在，为了进步，必须忍受一定的未知。<br>初学概念：看不懂证明，暂时不去问为什么.我们只能尝试着适应”在未知中不断前行“。<br>一个有效的策略：<strong>记录下来</strong>暂时不能解决的问题，继续前行并不是忽略这些问题。你一直在前行，你一直在积累，你一直在成长。所以，到有了答案那一刻，你不再是当初无能为力的你，你已经重生。<br>尽快接受现实，包括：<em>速成绝无可能、只有付出才有收获、完美永不存在、未知永远存在、现状无法马上摆脱</em>，<del>不仅要接受，还要牢记；不仅要牢记，还要坚信。</del>而后才能找对目标。<ul><li>真正能够做对、做好的人不会在乎他人的嘲弄和打击，自己也不会这样对别人</li><li>”最后期限”不是固定在将来的某个点，而是朝着你加速扑来，唯一的策略依然是：现在就开始</li></ul></li><li>记录下来那些目前无法理解的、支持的、反对的、无所谓的论点，对无法理解的，写下自己当时的疑惑，对支持的，记录几个理由或实例，对反对的，同样记录几个理由或实例，对那些无所谓的，也要记录原因。————避免成为“选择性输入”的受害者。</li><li>在被环境塑造的同时，我们也在塑造环境。</li><li>“恐惧情绪”————喜悦会使人停下行动去享受，而恐惧恰恰相反，会引发一个人马上采取行动去避免危险。事实上这种出于恐惧的决策几乎总是事与愿违。</li><li>积极心理学？NO，应该 <blockquote><p>哪一个更合理、更现实就接受哪一个</p></blockquote><p>而不是</p><blockquote><p>哪一个更积极就接受哪一个</p></blockquote><p>因为后者只是自我欺骗而已。积极的并不总是好的。</p></li><li><code>强</code>与<code>弱</code>才是自然界中真正存在的本质，<code>善</code>与<code>恶</code>往往只是弱者一厢情愿的定义</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派：samba文件共享、frp内网穿透、lighttpd、aria2c下载器（AriaNg前端）安装教程</title>
      <link href="/raspberrypi-how/"/>
      <url>/raspberrypi-how/</url>
      
        <content type="html"><![CDATA[<p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;最近拿到了一个树莓派3B，想要做成NAS以及下载机，我这个人平时喜欢看美剧，每次下载都要先开电脑打开浏览器找资源迅雷下载，有时候用手机找到资源了还是得开电脑，毕竟手机不适合用来下BT，于是有了这个想法，一开始还装了<a href="https://ownyourbits.com/nextcloudpi/">Nextcloud的树莓派版</a>(需要的童鞋可以进去看（需翻墙）)（2018-12-20更新：现在看官网把这个部分已经做的很完善了，占用可能也不高了），网盘下载前端倒是什么都有了，就是觉着太臃肿，web服务器用的居然还是apache，占用可想而知，到后来每次链接ssh都要接近半分钟，运行一个python脚本更是要到一分钟，那就是几行的脚本啊。后来想nextcloud其实没什么用，我只要能下载和共享文件就可以了。  </p><span id="more"></span><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;于是就有了这个教程，我打算用lighttpd作web服务器，上面放hexo博客（毕竟有了frp）和<a href="http://ariang.mayswind.net/zh_Hans/">aria2c前端</a>，通过frp连接到我的阿里云主机，那里有公网IP，这样一来我可以在任何地方访问我的树莓派叫它下美剧，真是很幸福的一件事。  </p><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;废话不多说，下面开始教程，我用的系统是raspbian-stretch-lite，最少占用嘛，桌面也是不需要的。  </p><h1 id="第一部分：samba文件共享"><a href="#第一部分：samba文件共享" class="headerlink" title="第一部分：samba文件共享"></a><strong>第一部分：samba文件共享</strong></h1><ul><li><h2 id="挂载硬盘"><a href="#挂载硬盘" class="headerlink" title="挂载硬盘"></a>挂载硬盘</h2></li></ul><p>查看设备列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fdisk -l</span><br></pre></td></tr></table></figure><p>这时候会列出所有挂载的设备（告诉我你已经插上硬盘了）然后找到硬盘的标识，一般是&#x2F;dev&#x2F;sda1，然后记下来<br>挂载硬盘：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount /dev/sda1 /media</span><br></pre></td></tr></table></figure><p>查看现有磁盘信息，看是否挂载成功:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -T</span><br></pre></td></tr></table></figure><ul><li><h2 id="更换软件安装源到国内"><a href="#更换软件安装源到国内" class="headerlink" title="更换软件安装源到国内"></a>更换软件安装源到国内</h2></li></ul><p>少数情况后面的安装会出现apt-get install安装失败，这个时候就需要把安装源替换成国内源，速度也会更快  </p><p>备份原列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sudo <span class="built_in">cp</span> /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak</span><br></pre></td></tr></table></figure><p>编辑文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sed -i <span class="string">&#x27;s#://raspbian.raspberrypi.org#s://mirrors.tuna.tsinghua.edu.cn/raspbian#g&#x27;</span> /etc/apt/sources.list</span><br><span class="line">sudo sed -i <span class="string">&#x27;s#://archive.raspberrypi.org/debian#s://mirrors.tuna.tsinghua.edu.cn/raspberrypi#g&#x27;</span> /etc/apt/sources.list.d/raspi.list</span><br></pre></td></tr></table></figure><p>然后执行更新让更改生效:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><ul><li><h2 id="samba安装及配置"><a href="#samba安装及配置" class="headerlink" title="samba安装及配置"></a>samba安装及配置</h2></li></ul><p>根据需要修改下面配置文件<br>[MyNAS]是电脑上可以看到的名称<br>共享路径是挂载硬盘的路径所以我用的是&#x2F;media<br>其他可以不用管<br>全部复制到终端即可：<br>（我用了echo命令来写配置文件，当然用nano、vim、vi都是可以的，看各位喜欢）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba -y <span class="comment">#安装samba</span></span><br><span class="line">sudo <span class="built_in">echo</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">    # 分享名称</span></span><br><span class="line"><span class="string">    [MyNAS]</span></span><br><span class="line"><span class="string">    # 说明信息</span></span><br><span class="line"><span class="string">    comment = NAS Storage</span></span><br><span class="line"><span class="string">    # 可以访问的用户</span></span><br><span class="line"><span class="string">    valid users = pi,root</span></span><br><span class="line"><span class="string">    # 共享文件的路径。</span></span><br><span class="line"><span class="string">    path = /media</span></span><br><span class="line"><span class="string">    # 可被其他人看到资源名称（非内容）</span></span><br><span class="line"><span class="string">    browseable = yes</span></span><br><span class="line"><span class="string">    # 可写</span></span><br><span class="line"><span class="string">    writable = yes</span></span><br><span class="line"><span class="string">    # 新建文件的权限为 664</span></span><br><span class="line"><span class="string">    create mask = 0664</span></span><br><span class="line"><span class="string">    # 新建目录的权限为 775</span></span><br><span class="line"><span class="string">    directory mask = 0775</span></span><br><span class="line"><span class="string">&quot;</span>  &gt;&gt; /etc/samba/smb.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试配置文件是否有错误，根据提示做相应修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testparm</span><br></pre></td></tr></table></figure><p>添加登陆账户并创建密码，必须是 linux 已存在的用户，密码不一定要和系统一样，只是登录samba用的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure><p>输入两次密码  </p><p>重载 samba 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service samba reload</span><br></pre></td></tr></table></figure><p>让samba开机启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d samba defaults</span><br></pre></td></tr></table></figure><h1 id="第二部分：aria2下载器"><a href="#第二部分：aria2下载器" class="headerlink" title="第二部分：aria2下载器"></a><strong>第二部分：aria2下载器</strong></h1><ul><li><h2 id="aria2配置及安装"><a href="#aria2配置及安装" class="headerlink" title="aria2配置及安装"></a>aria2配置及安装</h2></li></ul><p>安装aria2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install aria2 -y</span><br></pre></td></tr></table></figure><p>创建 session 和配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/.aria2</span><br><span class="line"><span class="built_in">touch</span> ~/.aria2/aria2.session</span><br><span class="line"><span class="built_in">touch</span> ~/.aria2/aria2.conf</span><br></pre></td></tr></table></figure><p>写入配置文件aria2.conf,注意如果用户名不是pi的话需要改下面的对应文件路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 文件保存相关 ##</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 文件保存目录</span></span><br><span class="line"><span class="string">dir=/media/Download</span></span><br><span class="line"><span class="string"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class="line"><span class="string">disk-cache=32M</span></span><br><span class="line"><span class="string"># 断点续传</span></span><br><span class="line"><span class="string">continue=true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class="line"><span class="string"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class="line"><span class="string"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class="line"><span class="string"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class="line"><span class="string">#file-allocation=falloc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 下载连接相关 ##</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class="line"><span class="string">#max-concurrent-downloads=5</span></span><br><span class="line"><span class="string"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class="line"><span class="string">max-connection-per-server=15</span></span><br><span class="line"><span class="string"># 整体下载速度限制, 运行时可修改, 默认:0（不限制）</span></span><br><span class="line"><span class="string">#max-overall-download-limit=0</span></span><br><span class="line"><span class="string"># 单个任务下载速度限制, 默认:0（不限制）</span></span><br><span class="line"><span class="string">#max-download-limit=0</span></span><br><span class="line"><span class="string"># 整体上传速度限制, 运行时可修改, 默认:0（不限制）</span></span><br><span class="line"><span class="string">#max-overall-upload-limit=0</span></span><br><span class="line"><span class="string"># 单个任务上传速度限制, 默认:0（不限制）</span></span><br><span class="line"><span class="string">#max-upload-limit=0</span></span><br><span class="line"><span class="string"># 禁用IPv6, 默认:false</span></span><br><span class="line"><span class="string">disable-ipv6=true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class="line"><span class="string"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class="line"><span class="string">min-split-size=10M</span></span><br><span class="line"><span class="string"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class="line"><span class="string">split=10</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 进度保存相关 ##</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 从会话文件中读取下载任务</span></span><br><span class="line"><span class="string">input-file=/home/pi/.aria2/aria2.session</span></span><br><span class="line"><span class="string"># 在Aria2退出时保存错误的、未完成的下载任务到会话文件</span></span><br><span class="line"><span class="string">save-session=/home/pi/.aria2/aria2.session</span></span><br><span class="line"><span class="string"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class="line"><span class="string">save-session-interval=60</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## RPC相关设置 ##</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 启用RPC, 默认:false</span></span><br><span class="line"><span class="string">enable-rpc=true</span></span><br><span class="line"><span class="string"># 允许所有来源, 默认:false</span></span><br><span class="line"><span class="string">rpc-allow-origin-all=true</span></span><br><span class="line"><span class="string"># 允许外部访问, 默认:false</span></span><br><span class="line"><span class="string">rpc-listen-all=true</span></span><br><span class="line"><span class="string"># RPC端口, 仅当默认端口被占用时修改</span></span><br><span class="line"><span class="string"># rpc-listen-port=6800</span></span><br><span class="line"><span class="string"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class="line"><span class="string">#rpc-secret=&lt;TOKEN&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## BT/PT下载相关 ##</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class="line"><span class="string">#follow-torrent=true</span></span><br><span class="line"><span class="string"># 客户端伪装, PT需要</span></span><br><span class="line"><span class="string">peer-id-prefix=-TR2770-</span></span><br><span class="line"><span class="string">user-agent=Transmission/2.77</span></span><br><span class="line"><span class="string"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class="line"><span class="string"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class="line"><span class="string">#force-save=false</span></span><br><span class="line"><span class="string"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class="line"><span class="string">bt-seed-unverified=true</span></span><br><span class="line"><span class="string"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class="line"><span class="string">bt-save-metadata=true</span></span><br><span class="line"><span class="string">&quot;</span> &gt;&gt; ~/.aria2/aria2.conf</span><br></pre></td></tr></table></figure><p>然后执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aria2c --conf-path=/home/pi/.aria2/aria2.conf -D</span><br></pre></td></tr></table></figure><p>没有任何提示则表示成功，Ctrl+C退出。<br>接下来作为服务添加开机自启，注意路径是否正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> /etc/init.d/aria2c &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          aria2</span></span><br><span class="line"><span class="comment"># Required-Start:    $remote_fs $network</span></span><br><span class="line"><span class="comment"># Required-Stop:     $remote_fs $network</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Aria2 Downloader</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"><span class="function"><span class="title">do_start</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">echo</span> -n <span class="string">&quot;Starting aria2c&quot;</span></span><br><span class="line">             su pi -c <span class="string">&quot;aria2c --conf-path=/home/pi/.aria2/aria2.conf &amp;&quot;</span></span><br><span class="line"><span class="comment">#这里的路径只能用绝对路径所以用户名不是pi的记得来这里修改</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">do_stop</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">     <span class="built_in">echo</span> -n <span class="string">&quot;Shutting down aria2c &quot;</span></span><br><span class="line">        pkill -f aria2c</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">do_restart</span></span>() &#123;</span><br><span class="line">    do_stop</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    do_start</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">   do_start</span><br><span class="line">   ;;</span><br><span class="line">stop)</span><br><span class="line">   do_stop</span><br><span class="line">   ;;</span><br><span class="line">status)</span><br><span class="line">  <span class="built_in">exit</span> $?</span><br><span class="line">  ;;</span><br><span class="line">restart)</span><br><span class="line">  do_restart</span><br><span class="line">  ;;</span><br><span class="line">*)</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;Usage: service aria2c &#123;start|stop|status|restart&#125;&quot;</span> &gt;&amp;2</span><br><span class="line">   <span class="built_in">exit</span> 1</span><br><span class="line">   ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">EOF</span><br><span class="line">sudo <span class="built_in">chmod</span> +x /etc/init.d/aria2c</span><br><span class="line">sudo update-rc.d aria2c defaults</span><br><span class="line">sudo service aria2c start</span><br></pre></td></tr></table></figure><p>这个时候aria2已经添加到开机启动并已经启动<br>以后想要管理aria2只需要输入对应命令即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动aria2服务</span></span><br><span class="line">sudo service aria2c start </span><br><span class="line"><span class="comment">#停止aria2服务</span></span><br><span class="line">sudo service aria2c stop </span><br><span class="line"><span class="comment">#查看aria2服务状态</span></span><br><span class="line">sudo service aria2c status </span><br></pre></td></tr></table></figure><p>同样的命令把aria2c替换成其他名称用来管理samba和等下要装的frp都是可以的  </p><blockquote><p>参考：<a href="https://www.jianshu.com/p/03f8022453a5">https://www.jianshu.com/p/03f8022453a5</a></p></blockquote><ul><li><h2 id="网页前端（lighttpd和ariaNg）"><a href="#网页前端（lighttpd和ariaNg）" class="headerlink" title="网页前端（lighttpd和ariaNg）"></a>网页前端（lighttpd和<a href="http://ariang.mayswind.net/zh_Hans/">ariaNg</a>）</h2></li></ul><p>安装lighttpd并设为默认启动：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lighttpd -y</span><br><span class="line">sudo update-rc.d lighttpd defaults</span><br></pre></td></tr></table></figure><p>安装好lighttpd后默认已经开启网页服务，接下来放aria2前端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html</span><br><span class="line">sudo wget https://github.com/mayswind/AriaNg/releases/download/0.4.0/aria-ng-0.4.0.zip</span><br><span class="line">sudo unzip aria-ng-0.4.0.zip</span><br><span class="line"><span class="comment">#顺便删除压缩包</span></span><br><span class="line"><span class="built_in">rm</span> aria-ng-0.4.0.zip</span><br></pre></td></tr></table></figure><p>现在用浏览器打开树莓派IP，你就可以看到一个漂亮的前端,以后就用它管理下载<br>至此，一个内网NAS已经搭建完成，轻量化，超小占用。<br>当然还没完，我们要做的是能从外网访问的下载器。<br></br></p><h1 id="第三部分：内网穿透frp"><a href="#第三部分：内网穿透frp" class="headerlink" title="第三部分：内网穿透frp"></a><strong>第三部分：内网穿透frp</strong></h1><p>关于frp</p><p>英文全称：fast reverse proxy<br>中文全称：快速反向代理<br>简称：frp<br>frp 是一个可用于内网穿透的高性能反向代理应用，支持 tcp, udp, http, https 协议.</p><p>frp 的作用<br>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。<br>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。<br>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p><p>frp为免费且开源项目，需要自己利用一台拥有公网IP机器搭建服务端，以部署内网穿透项目。</p><p>项目链接：<a href="https://github.com/fatedier/frp/">https://github.com/fatedier/frp/</a></p><p>科普完了,没有公网IP服务器的童鞋这里推荐一个免费的公共服务:<a href="https://www.nat.ee/">https://www.nat.ee/</a></p><ul><li><h2 id="frp客户端安装"><a href="#frp客户端安装" class="headerlink" title="frp客户端安装"></a>frp客户端安装</h2></li></ul><p>可以自己到<a href="http://github.com/fatedier/frp/releases">releases</a>页面找最新版链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget http://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_arm.tar.gz</span><br><span class="line">tar -xvf frp_0.16.0_linux_arm.tar.gz</span><br><span class="line">sudo <span class="built_in">mv</span> frp_0.16.0_linux_arm/ /etc/frp</span><br></pre></td></tr></table></figure><p>编辑配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure><p>根据nat.ee提供的配置文件,这里提供一个http的例子<br>把中文都换掉,自定义域太简单可能会因为被占用无法启动,记得换个复杂点的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#http-自定义配置-示例</span></span><br><span class="line">[common]</span><br><span class="line">server_addr = nat.ee</span><br><span class="line">server_port = 7000</span><br><span class="line">privilege_token = www.nat.ee</span><br><span class="line">user = 自定义用户名称</span><br><span class="line"></span><br><span class="line">[自定义服务名称]</span><br><span class="line"><span class="built_in">type</span> = http</span><br><span class="line">local_port = 80</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">custom_domains = 自定义域.nat.ee</span><br></pre></td></tr></table></figure><p>Ctrl+O保存，Ctrl+X退出<br>测试一下是否运行正常:  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/frp/frpc -c /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure><p>如果输出结果带有”start proxy success”则表示连接成功<br>Ctrl+C关闭<br>添加frp为服务并自动启动:<br>(我在里面加了判断网络是否连接的脚本”net_ts”,终于解决了开机启动时没网络导致启动失败的问题)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">tee</span> /etc/init.d/frp &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:         frp</span></span><br><span class="line"><span class="comment"># Required-Start:    $network $local_fs $remote_fs $named $portmap $syslog</span></span><br><span class="line"><span class="comment"># Required-Stop::    $network $local_fs $remote_fs</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start frp at boot time</span></span><br><span class="line"><span class="comment"># Description:       A porxy clint</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line"><span class="function"><span class="title">net_ts</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">#超时时间</span></span><br><span class="line">    <span class="built_in">timeout</span>=5</span><br><span class="line"></span><br><span class="line">    <span class="comment">#目标网站</span></span><br><span class="line">    target=baidu.com</span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取响应状态码</span></span><br><span class="line">    ret_code=`curl -I -s --connect-timeout <span class="variable">$timeout</span> <span class="variable">$target</span> -w %&#123;http_code&#125; | <span class="built_in">tail</span> -n1`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;x<span class="variable">$ret_code</span>&quot;</span> = <span class="string">&quot;x200&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 网络畅通</span><br><span class="line">netstate=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> 网络不畅通</span><br><span class="line">netstate=<span class="string">&#x27;0&#x27;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">do_start</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;starting frp.&quot;</span></span><br><span class="line">        /etc/frp/frpc -c /etc/frp/frpc.ini &amp;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">do_stop</span></span>()</span><br><span class="line">&#123;</span><br><span class="line">      pkill -f /etc/frp/frpc</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;stop complete.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">do_restart</span></span>() &#123;</span><br><span class="line">    do_stop</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    do_start</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">  net_ts</span><br><span class="line"><span class="comment">#这里验证网络是否连通，连通了才启动frp</span></span><br><span class="line">  <span class="keyword">while</span> [ <span class="variable">$netstate</span> -lt 0 ];</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> 请检查网络，将在5秒后重试</span><br><span class="line">    <span class="built_in">sleep</span> 5</span><br><span class="line">    net_ts</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line">  do_start</span><br><span class="line">   ;;</span><br><span class="line">stop)</span><br><span class="line">   do_stop</span><br><span class="line">   ;;</span><br><span class="line">status)</span><br><span class="line">  <span class="built_in">exit</span> $?</span><br><span class="line">  ;;</span><br><span class="line">restart)</span><br><span class="line">  do_restart</span><br><span class="line">  ;;</span><br><span class="line">*)</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">&quot;Usage:service frp &#123;start|stop|restart|status&#125;&quot;</span> &gt;&amp;2</span><br><span class="line">   <span class="built_in">exit</span> 1</span><br><span class="line">   ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo <span class="built_in">chmod</span> +x /etc/init.d/frp</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo update-rc.d frp defaults</span><br><span class="line">sudo service frp start</span><br></pre></td></tr></table></figure><p>frp服务已经启动<br>现在试试能否从外网访问<br>一切正常的话你就可以从外网看到刚才那个漂亮的前端<br>开始你的下载吧<br>frp还有很多玩法，有兴趣的朋友可以去项目地址看看，有中文说明.  </p><p><strong>第一次写教程,写的不好的地方请多包涵,之后我还会写在树莓派上安装hexo博客的教程,记得来看哦.</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Systemctl </tag>
            
            <tag> Pi </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
