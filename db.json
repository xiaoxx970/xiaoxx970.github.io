{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/raspi-init.sh","path":"raspi-init.sh","modified":0,"renderable":0},{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":0,"renderable":0},{"_id":"source/images/favicon/browserconfig.xml","path":"images/favicon/browserconfig.xml","modified":0,"renderable":0},{"_id":"source/images/favicon/apple-touch-icon.png","path":"images/favicon/apple-touch-icon.png","modified":0,"renderable":0},{"_id":"source/images/favicon/favicon-32x32.png","path":"images/favicon/favicon-32x32.png","modified":0,"renderable":0},{"_id":"source/images/favicon/favicon.ico","path":"images/favicon/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/favicon/favicon-16x16.png","path":"images/favicon/favicon-16x16.png","modified":0,"renderable":0},{"_id":"source/images/favicon/mstile-150x150.png","path":"images/favicon/mstile-150x150.png","modified":0,"renderable":0},{"_id":"source/images/favicon/site.webmanifest","path":"images/favicon/site.webmanifest","modified":0,"renderable":0},{"_id":"source/images/favicon/safari-pinned-tab.svg","path":"images/favicon/safari-pinned-tab.svg","modified":0,"renderable":0},{"_id":"source/images/favicon/android-chrome-192x192.png","path":"images/favicon/android-chrome-192x192.png","modified":0,"renderable":0},{"_id":"source/images/favicon/android-chrome-512x512.png","path":"images/favicon/android-chrome-512x512.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"ab4108532c23aba3fe730afa8337695abaf3b776","modified":1561392133347},{"_id":"source/CNAME","hash":"c3be04a7e84e283558a1b243bb592fb0fbc48ea7","modified":1561392133347},{"_id":"themes/next/.all-contributorsrc","hash":"a03f0ccb9b6798679dc2a77e5c395a167ce388c2","modified":1568534925533},{"_id":"source/raspi-init.sh","hash":"9034455b9c1b6dc583c9d930c46e663fa039f705","modified":1568534842911},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1566963428953},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1568534925534},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1566963428954},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1568534925534},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1568534925535},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1566963428978},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1568534925535},{"_id":"themes/next/README.md","hash":"e0fcd99c0a6db47fe5739df32d6ab39c44c65196","modified":1566963428980},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1568534925535},{"_id":"themes/next/_config.yml","hash":"490585fd02f5c362caa5ea76059f43b2c5a6c5a8","modified":1568534842912},{"_id":"themes/next/gulpfile.coffee","hash":"25d1bf7f98ea03c647cb8caa19e109aaaacd6ad7","modified":1566963429022},{"_id":"themes/next/package.json","hash":"4891972e0a53023164ed241966ba93cb0a8c05fc","modified":1568534925548},{"_id":"themes/next/.git/MERGE_MODE","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1566963429757},{"_id":"source/_data/styles.styl","hash":"c7622dc8dc3aea8689943108c9ff556c822aa170","modified":1567564739795},{"_id":"source/_posts/.DS_Store","hash":"5a6769e7d8f712b7a36b5c92643d53913d7b9790","modified":1562745861117},{"_id":"source/_posts/Wechat-vip-info-export.md","hash":"a8ed22e5921115c9e09b65fa7d6b9e23af7c8335","modified":1568534842759},{"_id":"source/_posts/frp-for-mc.md","hash":"61fe525de497f7cf6eb238124e08854b9273d88a","modified":1567409155088},{"_id":"source/_posts/hackintosh-of-yoga710.md","hash":"419abc6c04568ac49ef9e0800fed489c67cc1564","modified":1568534842762},{"_id":"source/_posts/miui-eu.md","hash":"4a13b0aec54fddc8c9a5198758b143db0d0e7c63","modified":1568534842904},{"_id":"source/_posts/open-your-farvorite-editor-after-new-hexo-post.md","hash":"b68134f19dcf2c301b77f90250b015d1ba2d6cdf","modified":1567564739799},{"_id":"source/_posts/nginx建立TCP代理.md","hash":"71fdec184573b52c2a6038d30580b634b6671cc7","modified":1568534842908},{"_id":"source/_posts/orangepi折腾记录.md","hash":"997543de520f3ff00c6b39e5b3733d0dfdbf9ab0","modified":1561392133675},{"_id":"source/_posts/raspberrypi-how.md","hash":"a2d08029b2b6ca6cf54411139c5873393acd49f5","modified":1561392133691},{"_id":"source/_posts/关于coding和git的折腾.md","hash":"03af647938c2db725eb5e5c84ed2ee07368a8453","modified":1568534842909},{"_id":"source/_posts/把时间当作朋友_笔记.md","hash":"532ec03cb7a954cd8a234fa3dba709292a7436c5","modified":1561392133691},{"_id":"source/about/index.md","hash":"1c951bb6628f71e96dfb916a7e8d8824abaa6a8c","modified":1568534842909},{"_id":"source/images/.DS_Store","hash":"dee9e4c70b226adee17106d85837969bd93e67d7","modified":1561392133691},{"_id":"source/tags/index.md","hash":"4f381257662522b235ed1156c13aca0a7d950fee","modified":1568534842911},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1556691993196},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"c149f003d03501565e7688915cd8f2e99fbf8f42","modified":1568534925534},{"_id":"themes/next/.github/auto_assign.yml","hash":"cb68a1dca1c4623448c2ca899614a9f21df1b036","modified":1568534925534},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"88780daa3db837a34fe3ed90cc61cc578b5760ed","modified":1566963428964},{"_id":"themes/next/.github/config.yml","hash":"8a5cbf5aa9529390fe0a782758aca9c3a02f9dcf","modified":1568534925534},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"b09c85aa449f46bc025317ed196ec33a877f7c23","modified":1566963428964},{"_id":"themes/next/.github/lock.yml","hash":"585d2c471047be320aa62f2b74dad797bf09c530","modified":1568534925534},{"_id":"themes/next/.github/eslint-disable-bot.yml","hash":"16541fb7b80f5ab90135db96285badb63c4d7d3e","modified":1568534925534},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1566963428966},{"_id":"themes/next/.github/release-drafter.yml","hash":"f8a0ee0ad08e1493475dbb67b2957cd6afcafac0","modified":1566963428969},{"_id":"themes/next/.github/stale.yml","hash":"41bf97ee86b8940a0b2e754499ec77fd2b44b717","modified":1568534925534},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"72b706f3fe018e10436afb24d9f9e527862f313e","modified":1566963425412},{"_id":"themes/next/.git/FETCH_HEAD","hash":"1743ea9ff79fc5c0a53fd6cb2bdfe35ee549323f","modified":1566963428800},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1556691993102},{"_id":"themes/next/.git/MERGE_HEAD","hash":"e09b2eae162f7b7eef3458746dbedf191a836cb0","modified":1566963429756},{"_id":"themes/next/.git/MERGE_MSG","hash":"2e84f04e1a50c717d0c8cf777929e71628bcee4b","modified":1566963429760},{"_id":"themes/next/.git/ORIG_HEAD","hash":"6e0e6485b7d9980651ad5a0b36ea55e83e996daa","modified":1566963428869},{"_id":"themes/next/.git/config","hash":"f832f515b1ca3e88e3ef1dbc4a8ae5b14c0f0965","modified":1568534925529},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1556691985640},{"_id":"themes/next/.git/index","hash":"f8de18d691ba9ca6ef2db153546ae9ee685718fa","modified":1568534925561},{"_id":"themes/next/.git/packed-refs","hash":"1d786c8b4ed029566eaae73401b6a026181b2421","modified":1568534925526},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"20f8a3d7db6e797a5a3ed8c84837315cb8e09e5b","modified":1566963428982},{"_id":"themes/next/docs/AUTHORS.md","hash":"44c3b963d877c6cbc3a720ed4e266532db3c12ac","modified":1568534925536},{"_id":"themes/next/docs/DATA-FILES.md","hash":"a85ae0f3a9655eea9acd3f6209b72eb002f2058d","modified":1566963428985},{"_id":"themes/next/docs/INSTALLATION.md","hash":"5385246ab4756e3e26ec9fe1f6a6759812177cc4","modified":1566963428987},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1568534925536},{"_id":"themes/next/docs/MATH.md","hash":"aa90364b1ac069b4f8cfdb48b4879311856224e6","modified":1566963428992},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"1fb2c852fad03b73882069f1ec0659db2e1f2da0","modified":1566963428990},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"a07ca23c38f6e4dddd4b74016b30e88cd3796f75","modified":1566963428993},{"_id":"themes/next/languages/de.yml","hash":"3d8920676d89494d7d1c74d4238680151ea6d9df","modified":1566963429025},{"_id":"themes/next/languages/default.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1568534925537},{"_id":"themes/next/languages/en.yml","hash":"c13eda783f8717c62b7ad9e8a9b724314ae74e1a","modified":1566963429026},{"_id":"themes/next/languages/es.yml","hash":"7dc1d7d5ea1078ee3b9bc8e0e8d0f15f52a7a4aa","modified":1566963429028},{"_id":"themes/next/languages/fa.yml","hash":"269b5cb70774485d7dbbcf98eec72c9e84e135b2","modified":1566963429030},{"_id":"themes/next/languages/fr.yml","hash":"dfdcfa536c40d06125dff373d042c50e08fcafd8","modified":1566963429031},{"_id":"themes/next/languages/hu.yml","hash":"e4a5f43fb45acd992def3de3b600aa4df4c95ed7","modified":1566963429032},{"_id":"themes/next/languages/id.yml","hash":"5665dece8435964a27b5061d7283f339f84721f0","modified":1566963429035},{"_id":"themes/next/languages/it.yml","hash":"311597c620059dbb99474f19b2110a4485ecf70b","modified":1566963429037},{"_id":"themes/next/languages/ja.yml","hash":"4f929842b3d6aaed709ea99da679d3910ee184e5","modified":1566963429039},{"_id":"themes/next/languages/nl.yml","hash":"561c77ca68e9d51a5ce8c89d3361fdb033c96bba","modified":1566963429044},{"_id":"themes/next/languages/ko.yml","hash":"5f5194dd0f5a3c8484e7668bce6fbe23340e531a","modified":1566963429041},{"_id":"themes/next/languages/pt.yml","hash":"af9d9b581dca45ab9789ca41d3492883a911e383","modified":1566963429047},{"_id":"themes/next/languages/pt-BR.yml","hash":"13b579911e44a8b213e1860f9a50c341be1bf95e","modified":1566963429045},{"_id":"themes/next/languages/ru.yml","hash":"b485c57dd7b447406dafd0dcfdfc9356266708c9","modified":1566963429049},{"_id":"themes/next/languages/tr.yml","hash":"39caf8a3677fd6dfbd523e73f8482a509e87b603","modified":1566963429051},{"_id":"themes/next/languages/uk.yml","hash":"4cbdbb0ed09487c9b435be21ac35f62182f53283","modified":1566963429053},{"_id":"themes/next/languages/vi.yml","hash":"3c6bb816ee7278afcddac06998c9ebe47ee19aef","modified":1566963429054},{"_id":"themes/next/languages/zh-HK.yml","hash":"93d10d6e448c519004b09b11fba980b5036c93af","modified":1566963429058},{"_id":"themes/next/languages/zh-CN.yml","hash":"e92e1e07a89c9fab27f445f9ec0fa35049fef38c","modified":1566963429056},{"_id":"themes/next/layout/_layout.swig","hash":"aa94f42953d9ef363dd644ef9ea7571bddb0d4ca","modified":1568534925538},{"_id":"themes/next/languages/zh-TW.yml","hash":"ae2aa1c6ec1a5a01a3a3bde17bcc3a82f9a35fa7","modified":1566963429062},{"_id":"themes/next/layout/archive.swig","hash":"72b4e0786668bc61c11eafa12da5d75272b93b61","modified":1566963429207},{"_id":"themes/next/layout/category.swig","hash":"38433a9de15f019267c9130e243e14343fb9bc3d","modified":1566963429209},{"_id":"themes/next/layout/index.swig","hash":"20e776e8863f662c154bb765aaa0a1a22bf78126","modified":1566963429211},{"_id":"themes/next/layout/page.swig","hash":"f038deec70adfecb0a87256ba8c319d4781925a5","modified":1568534925547},{"_id":"themes/next/layout/post.swig","hash":"0c3b34a6832b8e33574edc17095344f9e0bea74f","modified":1566963429215},{"_id":"themes/next/layout/tag.swig","hash":"153fb65e710a9643634aea4813431e92c11d09fe","modified":1566963429217},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1568534925534},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"fb80bb52a76dc9100d9524456f73c7a263c85437","modified":1568534925534},{"_id":"source/uploads/avatar.jpg","hash":"13679f80c715a47dd7b258145007c4088f372d24","modified":1561392133722},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1568534925535},{"_id":"source/_posts/Wechat-vip-info-export/console1.png","hash":"099e583b70b1bf5c4307f344f19e6a7dfc6190ba","modified":1562745861122},{"_id":"source/_posts/Wechat-vip-info-export/csv.png","hash":"ce97f2d0974e811472806003c09e839259dfa8b6","modified":1562745861124},{"_id":"source/_posts/Wechat-vip-info-export/info_array.png","hash":"15d7afa30586c22792d6031d5e534798c2de22fd","modified":1562745861126},{"_id":"source/_posts/Wechat-vip-info-export/info_es.png","hash":"2b069060dcf763787500579d9e9c869062f4d16b","modified":1562745861127},{"_id":"source/_posts/miui-eu/screen1.jpg","hash":"ff497a290f30acc4669303e682d62ab7e13ba440","modified":1561392133675},{"_id":"source/_posts/hackintosh-of-yoga710/.DS_Store","hash":"0039f155e1f393841d70055076ae048991d3daee","modified":1561392133363},{"_id":"source/images/favicon/browserconfig.xml","hash":"cb3d25802d4e0f614fa3682f7d1724dd5eb5ccf0","modified":1568534842910},{"_id":"source/images/favicon/apple-touch-icon.png","hash":"1c033d26b1305d376d0a00be87a666cb621cd1b2","modified":1561392133706},{"_id":"source/images/favicon/favicon-32x32.png","hash":"5fdacf3ae2ab0cdcaee0c5974d0ac9ed4ecce44d","modified":1561392133706},{"_id":"source/images/favicon/favicon.ico","hash":"4c64266449611a00ff7d545d3548bde2762978a2","modified":1561392133706},{"_id":"source/images/favicon/favicon-16x16.png","hash":"a3185c384248afdcdb406af260a4f3dade24eba4","modified":1561392133706},{"_id":"source/images/favicon/mstile-150x150.png","hash":"644349ee623dee06d1902cf72083b4b537d9deb4","modified":1561392133706},{"_id":"source/images/favicon/site.webmanifest","hash":"5c9bb70932091589bdceb6401afdf5502c06ab06","modified":1568534842911},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"2bb989a73168ff9e67722814fb30590cde36548f","modified":1568534925534},{"_id":"themes/next/.github/ISSUE_TEMPLATE/non-english.md","hash":"6fda3f0e0b9968562d6bd81d8d87e9a7b5c24b36","modified":1568534925534},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1568534919450},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1556691985654},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1556691985658},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1568534919447},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1556691985656},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"503c3d2cd9066c2329ae84309c03a4c274f6d90e","modified":1568534919446},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"e6c9fe47f7506171be08ed90baaf91d49bc7fe0c","modified":1568534919449},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1568534919448},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1556691985689},{"_id":"themes/next/.git/logs/HEAD","hash":"9b0ac08ff5f8ddf771685c2bac5c88504d526908","modified":1568534925529},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1568534919444},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1568534919452},{"_id":"themes/next/.github/ISSUE_TEMPLATE/custom-issue-template.md","hash":"17f900aa124af0c9317d0b26429e14af43482b64","modified":1568534925534},{"_id":"source/images/favicon/safari-pinned-tab.svg","hash":"81f5312372789bfa55f0dd361c30220424eabddb","modified":1568534842911},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"f1bd86cc5a310997e9f18abc115eaf62dd1c8095","modified":1568534925534},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1556691985682},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"67d04e3e29a2675d1a9f87d1ae6ea0769e963ff1","modified":1566963428996},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1568534925536},{"_id":"themes/next/docs/ru/README.md","hash":"3ceab62de4db29e2257dd5a187c7f8731a207f84","modified":1566963428997},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1568534925536},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"5ad2c2d0a11443a03b3fd912925bc0dcfbcda88c","modified":1566963429000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"0dfb458370a0ffbbe37c00f53c15e3aa3e79b125","modified":1566963429002},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"ca39e510b43ea1efe7e5feeca2243375e55eff5c","modified":1566963429004},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"c46f3f7496fc422207cc5954e10a2bc972b650aa","modified":1566963429006},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"c13546dd70a99a7d2d409cddf5d59f2f4d4d44a4","modified":1566963429009},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"a658a72589738e11aefaa3a714b188ffd5aac822","modified":1566963429015},{"_id":"themes/next/docs/zh-CN/README.md","hash":"0981aaf68145a05b02cd10c95d38cbaf97622944","modified":1566963429017},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8ceaad956a1afedf179b2e0b98a67adee9afec08","modified":1566963429012},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"4ee0607ddcfb2fe0e5868aced6d5814d1ada4405","modified":1566963429019},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"ccef7a8cd704575cf7bfe63c0492fe43592b1a6d","modified":1568534925538},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"1bb927e0560d3d3c95369da461911cced5bd537b","modified":1568534925538},{"_id":"themes/next/layout/_macro/post.swig","hash":"20ef46756b2a8026cc85e7830e5414fe749d1391","modified":1568534925538},{"_id":"themes/next/layout/_partials/footer.swig","hash":"9d9a5d6a2f0d4f65fe57c3737c91ecaf276c1f5c","modified":1568534925540},{"_id":"themes/next/layout/_partials/comments.swig","hash":"e0f59221b6010bd3e05d34fac915556f51b8a458","modified":1566963429089},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"769a983fe2f77908bfc8590ff37a0d8958b47598","modified":1566963429112},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"4b0c972c44bfa7ab07604280563deb9cc3974657","modified":1566963429114},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"58f12810a730ba8e3129c9b0d1a7cce42ac6f2d2","modified":1566963429134},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1566963429162},{"_id":"themes/next/layout/_third-party/facebook-sdk.swig","hash":"3cf1a1a83ceddef4033a2964150f81b979ced6ff","modified":1568534925544},{"_id":"themes/next/layout/_third-party/index.swig","hash":"32e4fe8dd8b3c40a17314569d1a14bde55251074","modified":1566963429180},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"da6a9d14ed10203e378c6e2c00a7b5e7afabca58","modified":1566963429191},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"65f94b115c42d33e6a90b1f8e62075c6d4ac60c1","modified":1568534925547},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1566963429136},{"_id":"themes/next/layout/_third-party/vkontakte-api.swig","hash":"e0d012bdbae5545d90143030116114c34219bd37","modified":1566963429626},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"e08feac6f8904d7f2006e350514a2f07eb9fff44","modified":1566963429138},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"105004ddcc7fe9f4fd7ad1007b628ba8c08c1e27","modified":1566963429141},{"_id":"themes/next/layout/_scripts/three.swig","hash":"eee4d26b5c0bb7872a21346151c38612a9b76d0b","modified":1566963429147},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"d3448044776dd23abd42b09ef0f26827f95efdf5","modified":1568534925543},{"_id":"themes/next/scripts/events/core.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1566963429223},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"834599d2b83f06e90f8cf618cddc106fe900ba5c","modified":1566963429243},{"_id":"themes/next/scripts/filters/excerpt.js","hash":"827c3733fa14b018dd1f07e41686c207880e823a","modified":1566963429245},{"_id":"themes/next/scripts/filters/exturl.js","hash":"9c32675f64121ffbe454189b8e418b408f79d9c2","modified":1566963429246},{"_id":"themes/next/scripts/filters/lazyload.js","hash":"51672320fff6b39f56fe6a2881c611afe4e79b8e","modified":1566963429249},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1568534925549},{"_id":"themes/next/scripts/helpers/engine.js","hash":"896a581feb9432e58a325ad04d66d6310a12374e","modified":1566963429252},{"_id":"themes/next/scripts/helpers/font.js","hash":"53169e2d04f0c21e68beb07c212be0a6c2a9aaea","modified":1566963429254},{"_id":"themes/next/scripts/helpers/next-inject.js","hash":"33eb6f38de575b973fed237032c34d878594fdc1","modified":1566963429255},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1568534925549},{"_id":"themes/next/scripts/helpers/next-js.js","hash":"b28a8ed6d033946acbb5b91f6d8b884857410dd9","modified":1566963429257},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"d512f44195f68b0ff93f3c82afff9161cdf1b7d6","modified":1566963429258},{"_id":"themes/next/scripts/tags/button.js","hash":"1d1d25f7e579d92fa563778dd0f163e8eda190da","modified":1566963429261},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"20e392b8583ba6ae5037449c2c7e191d3927641b","modified":1566963429262},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1568534925549},{"_id":"themes/next/scripts/tags/full-image.js","hash":"70b1d6ed969143e3912daf051ccc3585d984c146","modified":1566963429263},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1566963429266},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"60f880c1e11a7df1aee4f2e01d65451fecc0372c","modified":1566963429268},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1568534925549},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1568534925549},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1568534925549},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1568534925549},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1568534925549},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1568534925549},{"_id":"themes/next/source/css/main.styl","hash":"68c3377b643162aeaae2b60c196486fdb3b509c3","modified":1566963429461},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1568534925555},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1556691993976},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1556691993978},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1568534925556},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1568534925556},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1568534925556},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1568534925556},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1568534925556},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1568534925556},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1556691993993},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1568534925556},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1556691993994},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1568534925557},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1568534925557},{"_id":"themes/next/source/js/algolia-search.js","hash":"813afcc30feee11d59f297f2d5a96f98fbbd4743","modified":1566963429464},{"_id":"themes/next/source/js/bookmark.js","hash":"60cab6771a57c268da331920edd6d7fcd2713d42","modified":1568534925557},{"_id":"themes/next/source/js/local-search.js","hash":"0579159bf994e3726b3ba063e5905f79465fdfb1","modified":1568534925557},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1568534925556},{"_id":"themes/next/source/js/motion.js","hash":"d52807a73efc34b1189c096477f348d05debf861","modified":1568534925557},{"_id":"themes/next/source/js/next-boot.js","hash":"2294cdcc61f265388c02955e86ff74641d18915a","modified":1568534925557},{"_id":"themes/next/source/js/utils.js","hash":"6aa2f859eee9791a2a41d3cf58403dd19714fbfb","modified":1568534925558},{"_id":"source/_posts/miui-eu/bat-run.jpg","hash":"0fd156c96292397f056ad15b803cd2b8884ac003","modified":1561392133675},{"_id":"source/_posts/miui-eu/git-clone.jpg","hash":"32eb237145b0d94bc6053087327e18695f8c24df","modified":1561392133675},{"_id":"source/_posts/miui-eu/mipay-extract.jpg","hash":"0a5ef7f9583ee2f6c925a4750794c5d3f3860aae","modified":1561392133675},{"_id":"source/_posts/miui-eu/screen.png","hash":"f17cc0b7b24014b02f12815c61261d1f64e831e8","modified":1561392133675},{"_id":"source/images/favicon/android-chrome-192x192.png","hash":"8e0f488713aa8194a66fc2ef2920a2cba93c33bb","modified":1561392133691},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1556691993899},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1556691993900},{"_id":"source/_posts/Wechat-vip-info-export/会员详情页面.png","hash":"bf1a708e1c5da9bb27ab89519f6380bafd6b1211","modified":1562745861131},{"_id":"themes/next/.git/objects/4c/0ce0a77fa1c4996c95c674cbed28f5b9ccd505","hash":"6960a50d18a4253bf3adec41c17322bb69dbb125","modified":1566963425395},{"_id":"themes/next/.git/objects/4f/7c4d90b8d1c7d8d29027a6eade323bb4859e0b","hash":"f677607debadf3f2f16ecb839af5857d0d6c3b24","modified":1566963425415},{"_id":"themes/next/.git/objects/56/ebb6596ca5e8e94f5f9111a77c41b8ace91bbf","hash":"2e7803d98b11d5801be1875ee45b4eae240ce130","modified":1566963425372},{"_id":"themes/next/.git/objects/63/f7171205e793a084a9b61d81a1e00f7d471c42","hash":"1b75ab826ae58981b2f8a122f4a44f88f1877a1f","modified":1566963425367},{"_id":"themes/next/.git/objects/97/4829667094ad3663586911ba5173a9488f4a43","hash":"0cd23b113bb5ebdbea1196dcc31a70808f00437e","modified":1566963425382},{"_id":"themes/next/.git/objects/8c/fbc8cc51cfd9f7179d0cfb5490da16c9b94b8f","hash":"f4b45f2c565fe19695d27bb045d8a5d40c463d7a","modified":1566963425389},{"_id":"themes/next/.git/objects/c9/c32627740c0c78f8985d7102c3a5b50954dbf5","hash":"fb3ed89511fba8763b993c0a4cee084a850394f3","modified":1566963425359},{"_id":"themes/next/.git/objects/fd/ba8ec2d7270bef83dcefefbe4baf75e85cd91c","hash":"7d5f4639c9ca380fe55392a31f937f2c3974bc7f","modified":1566963429702},{"_id":"themes/next/.git/refs/heads/master","hash":"90bc39550ca8746e945206ae29397628b1a8c6c8","modified":1568534925529},{"_id":"themes/next/.git/refs/tags/v7.1.2","hash":"5da254a35926656e17cb71d94eaee61c2610ed37","modified":1566963383043},{"_id":"themes/next/.git/refs/tags/v7.2.0","hash":"2a50b758ec214ed4b5a33e8d12624f75ab9e5fac","modified":1566963383051},{"_id":"themes/next/.git/refs/tags/v7.3.0","hash":"b5e6ac477dd2020ebef248726ece844afb8d2624","modified":1566963383057},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"9e959646899a1dd381c0bea870408cd392c93c70","modified":1566963429068},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"1dc3875981923aee38b7b1e3ca3813b75ed6ab9c","modified":1566963429070},{"_id":"themes/next/layout/_partials/analytics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1566963429079},{"_id":"themes/next/layout/_partials/analytics/firestore.swig","hash":"67e63c25d509f02a6057ee9724f1b6efd647f72f","modified":1566963429081},{"_id":"themes/next/layout/_partials/analytics/tencent-analytics.swig","hash":"493a1ef6c8f475d4dd3156a6ab37690dc75695ea","modified":1566963429677},{"_id":"themes/next/layout/_partials/analytics/tencent-mta.swig","hash":"198813a3f382bda4278fe3759bf0f18a5769bb33","modified":1566963429674},{"_id":"themes/next/layout/_partials/analytics/index.swig","hash":"ac6a3995c1330d2d73300b2427006509d0f8dba5","modified":1566963429680},{"_id":"themes/next/layout/_partials/analytics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1568534925538},{"_id":"themes/next/layout/_partials/analytics/lean-analytics.swig","hash":"fb7729b69ef443db1f3f2755506ee998cfe4b973","modified":1568534925540},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0edd29b972aceecccb65b3e63d79c01f6639d0c5","modified":1568534925540},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"9718d372887f4b0ee952da42d10b2f736d0fc6de","modified":1566963429099},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"e0767e09a632264f189570e95ccf70fb1dad9110","modified":1568534925540},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"1ba4cd71b826186b7f782bd06258f2ec52a2b491","modified":1566963429103},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"c3a484d7bb15b55e4e48d412b0b30981168be6f3","modified":1568534925540},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"d3c25d70f0fd76121e4cacb9f8af4ccbe2a3c74d","modified":1566963429111},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1568534925540},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"b68ccb90e2ee42bd98c93fc030a29d38689dd55c","modified":1568534925540},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"6236a874b93ac1be56fc21df8534a7ae8acffcfc","modified":1568534925540},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"b654d63d2ed221a8b642223e220392e5172d8f4d","modified":1566963429118},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f05225f7d0ada3853c425899b515056b96ca49bf","modified":1568534925541},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"2edfaf1579ea58e15cb5583fb7962dfee9af2257","modified":1566963429123},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"7fa01334a0ba84500e920bb9202baa08067d2ee1","modified":1566963429126},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"d6fa9e4432b87004c5678dfe2d4b2c1f4a702b93","modified":1566963429128},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"733d6874aa4f50d1071e670a554508a5a0094eb3","modified":1566963429130},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"4e71b26d91ab750791f3be6035a946eb96ca7b34","modified":1568534925543},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"90a0869c6cc351d92fc97bf42fdc6e1bfa6bc513","modified":1568534925541},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1566963429153},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"7fd0459d2f1cfe1254f2c2b8087dc094c8cb0e84","modified":1566963429152},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"9f73476ebcf5cd3b7f55525b3f35dc7e9f01e154","modified":1566963429156},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"20fcbed44aede1b908bd17d7a0279b03639068b1","modified":1566963429160},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"42aa3022f7739a552c7a55de316d8c0994b2fdc1","modified":1566963429158},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"fdcf006e1ba2e53eab65e901b6c63159538307ef","modified":1566963429164},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1566963429645},{"_id":"themes/next/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1566963429166},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"1130b8bd60f3b84397974486e6586d7f0afaf836","modified":1566963429169},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"86092b31761948486ecb379eb7445f66a158769d","modified":1566963429171},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"df8413cba22deffca94cf4edd6d9f8d35d2bb58f","modified":1566963429173},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f95bc4d7ffaddc3c0df0ef3eeeaac58ff83f560","modified":1566963429177},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"261c4f1ab42f692279a310943b807ed34516df7c","modified":1566963429175},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ab937195168a0e8a911bf5730307f680e6d521e9","modified":1568534925544},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"b9d7a99534e9c2608765b958eae3b5c50f5e4889","modified":1568534925547},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"bc23c9eb9c06b0b377695f44373c14c5cde1d0e3","modified":1566963429182},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"dff6835d0b03ecc2db6919ca27cfb7b63949e6a8","modified":1566963429186},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"ad7a22ee0f183481c7843ecd881b9f9e8e037e31","modified":1566963429194},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"b2fd17688f0433571b37704bc8df798e175e7811","modified":1566963429196},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1566963429630},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1566963429198},{"_id":"themes/next/layout/_third-party/tags/index.swig","hash":"83d0a8f71878c6b96a04ba08567b9064de6cce83","modified":1566963429201},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"a54308f934c33b12f6bf28e4ce90e517f38cab57","modified":1566963429202},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"7597800b6ce2f545baea797d95d1b8c7cf624299","modified":1566963429204},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1568534925543},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"9e44c795565837ba318fd739e42713de365673fd","modified":1566963429140},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1568534925543},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1566963429143},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1566963429145},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1566963429227},{"_id":"themes/next/scripts/events/lib/config.js","hash":"b710d896fccd34657a70244645470e476a4e069f","modified":1568534925548},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"2a5f7c7e507bb354ec05a881bc9a1f4f2f28197c","modified":1566963429228},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"3ac62f5510f22e9d970089bb01f96ba2134ae161","modified":1566963429230},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1566963429231},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1566963429232},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"ccfac51bde0063ab7ef88182f8cbc98c210e78c9","modified":1566963429234},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"178c4618b29a1e06221285146071e72e24c40499","modified":1566963429235},{"_id":"themes/next/scripts/filters/comment/facebook-comments-plugin.js","hash":"e3c74b24f3818f2504fd0c7a954adaa6681bb969","modified":1566963429237},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1566963429238},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"3c4bdc2a682f9889a532e1cb856bc5caeb4208e1","modified":1566963429239},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"e34d38aee93558b2c68a7fa6203c2e4806405d62","modified":1566963429241},{"_id":"themes/next/scripts/filters/comment/vkontakte.js","hash":"031337c2e2157628a15a5f4d96fa6e3fcf2733fe","modified":1566963429242},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"5c7c71fd04c7b0562574888f96fa011d16a3775f","modified":1556692005840},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2315dd8a7a2c7aabd29efa6193df08e805cb15fc","modified":1566963429405},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"644c1f0b02be9bf59955ebdf496136b3fa4b660b","modified":1566963429406},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"59384f63e608b272e4c8679009bbe5e6594fd1b1","modified":1566963429408},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"d9a2eff154fafff547b3aca7321eee94b450c00a","modified":1566963429452},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"14e4bd0bd702c7a7f83bf7d529fade2d0634c2f1","modified":1566963429453},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"1e99dfbe7736acfee59d6f54dbd6b33ddfe2fe8a","modified":1566963429456},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"db52bce619bb848189e83b7bfabd1b2a06fd5578","modified":1566963429457},{"_id":"themes/next/source/css/_variables/base.styl","hash":"639b65a486154cf1f70c31f3fff440ce022255c0","modified":1566963429459},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"1e47ffdda23f7f645a2a883a90e2e9d9ddbf9a46","modified":1568534925557},{"_id":"themes/next/source/js/schemes/muse.js","hash":"be8471d4a84b773014b46a3650887ab55116ea68","modified":1568534925557},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1568534925558},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1568534925558},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1568534925558},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1568534925558},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1568534925558},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1556692538509},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9c0e38750e26eb9e83e2b5ab9e069b66f0965ce4","modified":1556692538508},{"_id":"themes/next/source/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1556692538515},{"_id":"themes/next/source/lib/fancybox/README.md","hash":"10e4cb3bb98f6b9806bedbb8dbbc00151bad4c70","modified":1556692538517},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1568534925561},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1568534925561},{"_id":"themes/next/source/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1566963429481},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"9b0ac08ff5f8ddf771685c2bac5c88504d526908","modified":1568534925529},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1556691993099},{"_id":"themes/next/.git/refs/remotes/origin/operator","hash":"2ae4b5924062ea5cf9626266d188f17aea1323c1","modified":1566963382900},{"_id":"themes/next/.git/objects/pack/pack-302eeb700346d96adad31169c5a1dc07786e709a.idx","hash":"8810c2f0d909a8a256ff23014d02e89eb191430f","modified":1566963382786},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"e09b2eae162f7b7eef3458746dbedf191a836cb0","modified":1566963382860},{"_id":"themes/next/.git/refs/remotes/origin/jq","hash":"26a971680045392e03ec587dd618fe290653993d","modified":1566963382880},{"_id":"themes/next/.git/refs/remotes/origin/count","hash":"620b3479e6674da9bec9c9680a73cb851bf9dbc4","modified":1566963382870},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"cda066b495a4b6b10c7bc88b2a9b82722156b66b","modified":1566963429271},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"e0db0d9205cd47c48edba81c7397e09ed24783fa","modified":1566963429273},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"6c61a120d61dec145c8db3a244cae0e724f6f3ef","modified":1566963429279},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"060aeb5cff414014f7cdbb61e0ec7855cb0d4b32","modified":1566963429276},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"3faa8a7cdb05ef3f3b02920d381773dfd54270a5","modified":1566963429277},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"674c32b6e9df4b2294df07c3966bf6555e0fb5ad","modified":1566963429315},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"0dd11537a4b9a4d2faf3ad5cdae0f0f770a99ccf","modified":1566963429611},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"8e9deaf1e0a27d5bf5f0401bf04f5637df12b6c4","modified":1566963429339},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"202ee1f1f8e64d8292df16f40ee176ff4e5d7e71","modified":1566963429343},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"b6b9dc8a350e51ad7b8bb08141a61fc2fd7466fc","modified":1566963429390},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"cb25eed35117be256ea7a573fec2cdfb66901dbb","modified":1566963429392},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"0c60cf489cd083d3a1e3502a240a761b656241c2","modified":1568534925553},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"c4a5c52e30444602237530f379c1707ec864fa9a","modified":1566963429396},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"4f7140cc0db08b47a25c4c7aad71047d433051a1","modified":1566963429398},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"19a20393d266b21ee44ff07d6fa1e9ebbc39a5d9","modified":1566963429399},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"4ddbc8b2dba6fad900c5eca793a31f18ba850f5a","modified":1566963429401},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"71d75fa309cf5b96d876da536f57c047e57afcff","modified":1566963429415},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"c42802ecca44d4ea435c26700070a65375edfd7c","modified":1566963429412},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"87d19a45db10689aae9a09736efd1eb896a35b3d","modified":1566963429416},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"e859283440617f18f1ad298f7f1218aafa9b39d5","modified":1566963429424},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"3462ffd270f3e218e0a8362262466e79d731f975","modified":1566963429419},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"73fe940abb0787a19f505fb614aafe73c8a24f08","modified":1566963429421},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"dc2a3217f9b50cf42c4262c9e486281203eaef83","modified":1566963429422},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"f1f81bca31e82ccbd375f0cb9fb8dbb3beac810d","modified":1566963429437},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2ab9e0499f241d1b91e2f7722072d23c95104e1f","modified":1568534925555},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"ac523812bebb13cde268dc3cde65d0b7c6862e30","modified":1568534925555},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44ac3dff65c1bd3fe47feeed8e58aa00c9f2fb7b","modified":1566963429445},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"3bcb47b9b9ea671e0a3cba6a821045d3434734cb","modified":1566963429446},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"10b4794ba62726fc052c74d786d962ed79d0780b","modified":1566963429450},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"54c5e23ec3dcbbc77848ededba76e861cf0f4719","modified":1566963429427},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"41b1d10a530913908e026fd991216e234766d148","modified":1566963429436},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"3646e915b0a55f3b66e41d802b082aba88a76e06","modified":1566963429429},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"eeab294e14abbae231107e1a327e907b25323136","modified":1566963429433},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1568534925559},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"b22583b7340c2686a46aefeeed086540b08324a3","modified":1566963429431},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1568534925558},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1568534925558},{"_id":"themes/next/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1556692538457},{"_id":"themes/next/source/lib/fancybox/.git/config","hash":"6d27bad8831d14b10d7b775812c49acbe18b2af4","modified":1556692538481},{"_id":"themes/next/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1556692533839},{"_id":"themes/next/source/lib/fancybox/.git/index","hash":"ebaab974b083a55b93034805d4301dd610abddeb","modified":1556692538534},{"_id":"themes/next/source/lib/fancybox/.git/packed-refs","hash":"2f41f00b14f8655021d9339e7b28a15c01f5522c","modified":1556692538435},{"_id":"themes/next/source/lib/fancybox/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1556692538513},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1556692538523},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"b6964babd10efdeff086f91822b59c810a06d43d","modified":1556692538521},{"_id":"themes/next/.git/objects/pack/pack-9bad527ba3e800d6e20c36a6393232e73771e446.idx","hash":"f36962dcb052d4263708cb56cbb85a05b85a5e3c","modified":1556691992889},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1556691994067},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1556691994070},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1556692538526},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"9b0ac08ff5f8ddf771685c2bac5c88504d526908","modified":1568534925529},{"_id":"themes/next/.git/logs/refs/remotes/origin/count","hash":"f9f117bd8cda9bdf88a99327ef149d325e249cbc","modified":1566963382870},{"_id":"themes/next/.git/logs/refs/remotes/origin/jq","hash":"8debc319f86b2e5a8b32688cf4fa10fbf500afbd","modified":1566963382880},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"80891922142e5ab481d6be32fbccee42193148d3","modified":1566963382862},{"_id":"themes/next/.git/logs/refs/remotes/origin/operator","hash":"9c5c6e1da9e84093fc498df3ca28af54950f536f","modified":1566963382904},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"caf2abcffa5674adea300046fd3dbee2e830b40e","modified":1568534925550},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1566963429290},{"_id":"themes/next/source/css/_common/components/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1566963429283},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"386fce803e5240c2d6860ae53f38ae3aa2e8b680","modified":1566963429287},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"1bfa07d40ceb03b0b69a5752478ca555723f7a15","modified":1566963429288},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"4718d17fc4ee30802925890771a032d966133a31","modified":1568534925550},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1566963429299},{"_id":"themes/next/source/css/_common/components/highlight/copy-code.styl","hash":"2124abd41b69ff152f4bb39e78d8fbce96a45c65","modified":1566963429298},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"139c17e7d4aa3e1112340a26a270efe58c279f8e","modified":1566963429292},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4efe9174369bfe2125bd167feac18a07271635d6","modified":1566963429302},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"dada73ae88f01fab2ab4d2c83eddfc558de2110a","modified":1566963429294},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"a67dc85f6d158dac20e951ab55988ff7e9e1739b","modified":1566963429304},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1566963429306},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1566963429308},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1566963429309},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"919cc9aaf60b03c2bf00aca3748127f38a2026cf","modified":1566963429312},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1566963429313},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1568534925551},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"db718eee14347f30ccabaa33bf6f9fbdea8b9462","modified":1566963429317},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"ac2105c5a7f581b1c0f2b59f2c0c3e87a7c28383","modified":1566963429319},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"3abf46c513e92f3f36c14d90f032983b94f36488","modified":1568534925551},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"caa9a78993d549117cdc8fa7a76c473a5e7f0f67","modified":1566963429325},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"602a3c3d2785965b23412b5c219dfe74b5fb0844","modified":1566963429323},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"c60afb603d58cad3ad13e1a16c66832538510063","modified":1566963429327},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"541d6257023915a7caca7540f12cdf283ce025f3","modified":1566963429330},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"469d5e4e188f484abff24eddd5640fa4d4d77ed1","modified":1566963429333},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2e2a09dddd2a394a635bcefb6207b6cddcb784c7","modified":1566963429328},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"5da763d541540586ccd13868a36e3da55549eb22","modified":1566963429335},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"e77986ca3b914348b5c3c6b34c94b49ad53e4b9c","modified":1566963429338},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2ef546b4cfa5038ebb050c592c5135bbeb51af41","modified":1566963429346},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"9b3ff4aa24069eab0e9771437013f45e450d4217","modified":1566963429348},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"41ccae779f918e6f9f5f625789a7360f1362454c","modified":1566963429351},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"d055f8420583c7a009818dcdfaada592308bd628","modified":1566963429353},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"95339b71ac90553fb1634c536c9749055e0c788a","modified":1566963429350},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"f3108a247549fbdf11071d023add3f1b34ad2b23","modified":1566963429357},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"782cf8847c9aca96f9194fcf1d910509e4073ce6","modified":1566963429362},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"514999bde116ef5cd5f7aedea80059b12a87a1ea","modified":1566963429370},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"db44ef2b99fc33d003010f38e64caad930c08ad0","modified":1566963429359},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"17c3f58fb84453603621d6a718fcc821c8d6bced","modified":1566963429364},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"0527bc64708a9446dc7bbb2c7e39ab3a61251c26","modified":1566963429368},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"78d309e22206a4addda3c393282518dae02250ed","modified":1566963429372},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"a1eed8fe7f97885a9234502a197abf2e90ba22b6","modified":1566963429374},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1566963429380},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"2dc2a5b7becb11de1d4bdab6b5195588ae878cfc","modified":1566963429376},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"02e5a998748a67fa885fb06fae242bcf3f2786fb","modified":1566963429366},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1566963429381},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1568534925553},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"85b8606763f4177d2f9a11c1909a21ab1ae2011c","modified":1566963429383},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"4525465f40f82bd66e5f34e986440c75a9e2d2b2","modified":1566963429387},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"38ce7d692b8bc6fde02e3271dfd50ad37e107e4e","modified":1568534925553},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1566963429331},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"8b6481a0ac60007cf3defa3c9d85a6e412c91d6e","modified":1566963429337},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"754f70161b7e810f582cc4755d177859dcbcfced","modified":1566963429379},{"_id":"themes/next/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1556692533844},{"_id":"themes/next/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1556692533842},{"_id":"themes/next/source/lib/fancybox/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1556692533846},{"_id":"themes/next/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1556692533849},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1556692533851},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1556692533853},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1556692533859},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1556692533857},{"_id":"themes/next/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1556692533867},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1556692533855},{"_id":"themes/next/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1556692533861},{"_id":"themes/next/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1556692533863},{"_id":"themes/next/source/lib/fancybox/.git/logs/HEAD","hash":"ccd5bbc94f804cdbded8154f298b4575aa4a7b30","modified":1556692538467},{"_id":"source/images/favicon/android-chrome-512x512.png","hash":"4ab5a0d5e1c71b2a4211cacfba868c208a7a404f","modified":1561392133706},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1556691994064},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"1151808c52451d1b39e74fb48283195adf40b9a1","modified":1556692538530},{"_id":"themes/next/source/lib/fancybox/.git/objects/00/c03f6be011e8878608eec12f68caf42b73f38e","hash":"8516bd35bc8f9223e13de5877778c8d14d49d6db","modified":1556692538152},{"_id":"themes/next/source/lib/fancybox/.git/objects/16/b01254a56610f4c6b7721c534ed4fc40ae51dd","hash":"88ca5fd99322d3a4067e0711af79f41c078f2ef5","modified":1556692538209},{"_id":"themes/next/source/lib/fancybox/.git/objects/19/3567a3107003507fafacd255c349857e417926","hash":"ef5eab75e8c6998cb223edb4eb8a26c4cfc9415c","modified":1556692538085},{"_id":"themes/next/source/lib/fancybox/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1556692537831},{"_id":"themes/next/source/lib/fancybox/.git/objects/1f/a2c5f332b7e304431213aec21012e53f8781d7","hash":"7632806182aa989d3b7029579d5c03c34b113ee3","modified":1556692537793},{"_id":"themes/next/source/lib/fancybox/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1556692537837},{"_id":"themes/next/source/lib/fancybox/.git/objects/3d/521bfc64755e348870094e85323dc1b9c96a6b","hash":"e9660fc4f89ecb176b0ab6e4860579c1bfe9f9cb","modified":1556692538190},{"_id":"themes/next/source/lib/fancybox/.git/objects/36/9bab09306448a2970d378b59bb21c059edad63","hash":"877e0c15623d0d6ff8f09bb627fc60a489f3c105","modified":1556692537884},{"_id":"themes/next/source/lib/fancybox/.git/objects/47/d427b6c52396bbab53a05f57aaa82b52c805b1","hash":"c5626bbb62f4d1d1e39034e7f44baf4c509410d6","modified":1556692538345},{"_id":"themes/next/source/lib/fancybox/.git/objects/54/0a7b36ee26decfc3f0f34bf73bc85c48899128","hash":"2e5447a9dd879d71368e9dddd34d93849d00b934","modified":1556692538152},{"_id":"themes/next/source/lib/fancybox/.git/objects/53/ceaabe0f8677333c5be196778b3e40840a1869","hash":"7bc1c1c42059d5402335b5293bfb5e54bee22557","modified":1556692537815},{"_id":"themes/next/source/lib/fancybox/.git/objects/63/c555caede30ab06d6dba16644a827e9574c8cb","hash":"846603220288272ad5d35ebdc3c917cc4adce424","modified":1556692538167},{"_id":"themes/next/source/lib/fancybox/.git/objects/64/c47e893a0fef71c8c0930975ef114d9812da56","hash":"eaad75fab15724f9c2b069fc1ce9b8216be149d7","modified":1556692538196},{"_id":"themes/next/source/lib/fancybox/.git/objects/78/068b93f813cecbbd50c8247de547035009d512","hash":"4bc2bee779bd7e3cca13ee34801cf1e12585e5ae","modified":1556692537889},{"_id":"themes/next/source/lib/fancybox/.git/objects/7b/15d3cb03fda86241f8b2b335f04e9b9de0e1c4","hash":"d1fe3bd82c90f7d93874798a8ee8ebf1391d7207","modified":1556692537894},{"_id":"themes/next/source/lib/fancybox/.git/objects/7c/00ef8195b73793d477d22e723ecdac9553ebf3","hash":"fd8c4fd143b32fb3e86367f123feb7c35b305262","modified":1556692538327},{"_id":"themes/next/source/lib/fancybox/.git/objects/89/9d7a75b543fbed2a785f67d995bc77e06eb2e9","hash":"5651e2b80703225f642625c0fb2646543096d2cf","modified":1556692537804},{"_id":"themes/next/source/lib/fancybox/.git/objects/80/6b27034bd69d563e4243c2f12b43c7064b32dd","hash":"b7d3e8020767ae60a2029da8eccb0068623dc618","modified":1556692538339},{"_id":"themes/next/source/lib/fancybox/.git/objects/7c/c60b295fa2dcb82537a63792c9b3b3c2e74c33","hash":"b2dc23c71b13726c391aaefaa5312227a9b6ab7e","modified":1556692538214},{"_id":"themes/next/source/lib/fancybox/.git/objects/92/4369c371444afb18fb86309229f5b4c24c6cf4","hash":"9eb6fa8ff9081e6650f6bee350d21567df105737","modified":1556692537909},{"_id":"themes/next/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1556692537879},{"_id":"themes/next/source/lib/fancybox/.git/objects/9b/fe9361836240600c1bcc3cab9d42b35e731fad","hash":"3d38ffc7ac1ae85224691ef15d7f32e40c40b3a2","modified":1556692538203},{"_id":"themes/next/source/lib/fancybox/.git/objects/aa/654e17af8c354994f706c4e33bba6b5b70caeb","hash":"22b1bdf0b0974bf5e9022953ac26066056c235ff","modified":1556692538152},{"_id":"themes/next/source/lib/fancybox/.git/objects/ad/569256343419017e8832a38faaa1c786716a1d","hash":"0538e4abd112b0a843035f28a511edabbe73f2ce","modified":1556692538177},{"_id":"themes/next/source/lib/fancybox/.git/objects/ac/97c2cc9f61c52753abe4174a4a74b2064e5af0","hash":"272e74036b0612de83d9d0aa9604d3edf888b249","modified":1556692538074},{"_id":"themes/next/source/lib/fancybox/.git/objects/b3/b3098638624b56be968573e2dab1684f8a7f06","hash":"6fa11a2d904dff2b8f4ae1bd88bdbb66736438a1","modified":1556692538235},{"_id":"themes/next/source/lib/fancybox/.git/objects/bd/e1f741357b44b49290d43fdd193125202fef81","hash":"9beefc75cc0c37d04e98dd13b51ad85df40e77b9","modified":1556692537820},{"_id":"themes/next/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1556692537825},{"_id":"themes/next/source/lib/fancybox/.git/refs/heads/master","hash":"d1840ae4717ac8eb10df2e61a7851f5542f70f90","modified":1556692538466},{"_id":"themes/next/source/lib/fancybox/.git/objects/d5/d10f6be62acc10fec6e11e8dc4affe1184a17b","hash":"cec51b2539349d2aba1ec5d11eaded3815eccdc5","modified":1556692538243},{"_id":"themes/next/source/lib/fancybox/.git/objects/51/cf05811ed7d35e92551db1ba5a6e267ce781a5","hash":"99c009035ea86e3876b586577677d4d62ae12379","modified":1556692538182},{"_id":"themes/next/source/lib/fancybox/.git/objects/c2/fc5def1b6c38369e5e8b849adb956bd79b549e","hash":"27f03b9616e615b2724bac0fa4507d152697f3f1","modified":1556692537810},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/heads/master","hash":"ccd5bbc94f804cdbded8154f298b4575aa4a7b30","modified":1556692538473},{"_id":"themes/next/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1556692538453},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"ccd5bbc94f804cdbded8154f298b4575aa4a7b30","modified":1556692538452},{"_id":"themes/next/.git/objects/pack/pack-302eeb700346d96adad31169c5a1dc07786e709a.pack","hash":"9c1714e310f328cf0882647c1af83a7e8d6d1903","modified":1566963382776},{"_id":"themes/next/.git/objects/pack/pack-9bad527ba3e800d6e20c36a6393232e73771e446.pack","hash":"7d434748a0c165331e9d3d93123a4f989eb94ab5","modified":1556691992882},{"_id":"source/_posts/hackintosh-of-yoga710/error1.jpg","hash":"48898986ca54d3febb5f35aef9e8ffdcaac4fda7","modified":1561392133675},{"_id":"source/_posts/hackintosh-of-yoga710/CLOVER.zip","hash":"75f9f1e8ff977b9109aa8eb4053be9ffb295df3b","modified":1561392133519},{"_id":"themes/next/source/_data/styles.styl","hash":"5c7c71fd04c7b0562574888f96fa011d16a3775f","modified":1566967372760},{"_id":"themes/next/source/lib/fastclick/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1566968150951},{"_id":"themes/next/source/lib/fastclick/index.js","hash":"264360099126a6b1b6958ee1d380f7a691d7ac45","modified":1566968150955},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"c1a8dcf9a5ca45afd6fc0a0baeae59fc6d8d48b2","modified":1566968150954},{"_id":"themes/next/source/lib/fastclick/utils.js","hash":"3aaad386b2ae1deca5f1fd56f315da5a34dd2987","modified":1566968150960},{"_id":"themes/next/source/lib/fastclick/package.json","hash":"30509bcb57d1966c94494e6f24d8d0c1037fbaf3","modified":1566968150959},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1566968141809},{"_id":"themes/next/source/lib/fastclick/default.yaml","hash":"dca6a6750964f56be22eadd776c0061e968f3968","modified":1566968150955},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1566968141813},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"4d80ae239b597668665451a9515fba20543ac673","modified":1566968141812},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1566968141814},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1566968141815},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1566968141811},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"78d636bebe5b99f30e0e0676ef71805ebf00c9b9","modified":1566968150953},{"_id":"themes/next/source/lib/fastclick/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1566968150924},{"_id":"themes/next/source/lib/fastclick/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1566968146877},{"_id":"themes/next/source/lib/fastclick/lib/likely.js","hash":"b79227e8841c277fa1ccd1926e2c0229539ebb24","modified":1566968150956},{"_id":"themes/next/source/lib/fastclick/lib/needmoreshare.js","hash":"34a28768ff0d13c4080db4739db190ce3fc0790f","modified":1566968150957},{"_id":"themes/next/source/lib/fastclick/lib/sharejs.js","hash":"4445609d002327cb70fa020acb6c3f5c8933ed6a","modified":1566968150958},{"_id":"themes/next/source/lib/fastclick/.git/config","hash":"64d5e323b8ede11d4006f3c28fadf9d0a2987c1c","modified":1566968150936},{"_id":"themes/next/source/lib/fastclick/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1566968150952},{"_id":"themes/next/source/lib/fastclick/.git/index","hash":"e5c3f9746acabdc0a09b4a80c9a648a054f3d690","modified":1566968150962},{"_id":"themes/next/source/lib/jquery_lazyload/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1566968141811},{"_id":"themes/next/source/lib/jquery_lazyload/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1566968141784},{"_id":"themes/next/source/lib/fastclick/.git/packed-refs","hash":"158efbc3ea0d250b76a3b364836d8d14f39edf4c","modified":1566968150916},{"_id":"themes/next/source/lib/jquery_lazyload/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1566968137855},{"_id":"themes/next/source/lib/jquery_lazyload/.git/config","hash":"bb73009838c528b7e04764bc8db9d37aed4c7ec4","modified":1566968141795},{"_id":"themes/next/source/lib/jquery_lazyload/.git/index","hash":"148698649fd5adc5bd414c80f55d177a4961e72c","modified":1566968141816},{"_id":"themes/next/source/lib/jquery_lazyload/.git/packed-refs","hash":"83ee2ab10ad076007e0c6c5896841c2e95de64ec","modified":1566968141775},{"_id":"themes/next/.git/objects/pack/pack-f1083f27b14aa521de44459aca1149e93a10c33a.idx","hash":"e8246cb22eb4ddc8eaee02b79f1daa837dd5a06d","modified":1566968091181},{"_id":"themes/next/source/lib/fastclick/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1566968146878},{"_id":"themes/next/source/lib/fastclick/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1566968146879},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1566968146882},{"_id":"themes/next/source/lib/fastclick/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1566968146880},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1566968146883},{"_id":"themes/next/source/lib/fastclick/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1566968146881},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1566968146886},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1566968146885},{"_id":"themes/next/source/lib/fastclick/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1566968146884},{"_id":"themes/next/source/lib/fastclick/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1566968146887},{"_id":"themes/next/source/lib/fastclick/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1566968146888},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1566968137857},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1566968137857},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1566968137858},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1566968137859},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1566968137860},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1566968137861},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1566968137862},{"_id":"themes/next/source/lib/fastclick/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1566968146889},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1566968137863},{"_id":"themes/next/source/lib/fastclick/.git/logs/HEAD","hash":"5cfd5e77ed75d41f5ebe8c6d88da35d2a8f3d3d1","modified":1566968150929},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1566968137865},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1566968137866},{"_id":"themes/next/source/lib/jquery_lazyload/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1566968137868},{"_id":"themes/next/source/lib/jquery_lazyload/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1566968137867},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/HEAD","hash":"60b5c48b3962912e8394eb45a915d39779364697","modified":1566968141789},{"_id":"themes/next/source/lib/fancybox/.git/objects/40/9607f1ba381a64c3ccb8d5440299e8ef868ef8","hash":"a462f7a9efebb70c4051f92c09ccbd9885132c77","modified":1566968135893},{"_id":"themes/next/source/lib/fancybox/.git/objects/b6/c361c8dcf2f5a7572e81b956272e4cfe1198c1","hash":"3e160c605dbd94dcef2b9692a4a5a82bddb76264","modified":1566968135908},{"_id":"themes/next/source/lib/fancybox/.git/objects/ce/c0e316bee5d497ee834dbd29e0c5aad8331052","hash":"3d769fa5f55014841d10bb3bdf1b9725c43e9043","modified":1566968135901},{"_id":"themes/next/source/lib/fastclick/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1566968150684},{"_id":"themes/next/source/lib/fastclick/.git/objects/0a/041280bd00a9d068f503b8ee7ce35214bd24a1","hash":"2af3b23208162ae85f2c996375ae27e8402cb499","modified":1566968150755},{"_id":"themes/next/source/lib/fastclick/.git/objects/0d/66973f880e493956483a1472fe60dfb855339f","hash":"cff8b911bd70abe331e0450866b2403c9b8f6e74","modified":1566968150710},{"_id":"themes/next/source/lib/fastclick/.git/objects/14/70ec550667269b2b28104dee3f92b4e14a66bb","hash":"04e58a410ff49d08d35b3e68efa2e8607451f4c1","modified":1566968150728},{"_id":"themes/next/source/lib/fastclick/.git/objects/39/eecac957740db2155785ff231e1868f1464f5c","hash":"b571de4112f8f4a93933e9c38d994cf52cc87236","modified":1566968150831},{"_id":"themes/next/source/lib/fastclick/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1566968150695},{"_id":"themes/next/source/lib/fastclick/.git/objects/53/3f84c565dbfa38acd9af674c32efc475560678","hash":"927f8037427ab0dd6494a2af35b9d64813f6103d","modified":1566968150716},{"_id":"themes/next/source/lib/fastclick/.git/objects/54/c1fbfeaf41ede10230c96df98de315c5491ed7","hash":"812f45cea4d0b49b2c94b91916b71bb04f3ae6db","modified":1566968150734},{"_id":"themes/next/source/lib/fastclick/.git/objects/42/c4fe3083d5eeaac86dbc81dbcea98d71f97a78","hash":"9ad2acaf712ceb77f38e43fb0d70782f096550a8","modified":1566968150782},{"_id":"themes/next/source/lib/fastclick/.git/objects/74/0748c6e3bb5550063f207afe6f711ec549461b","hash":"da8891e7ecc82d300afcc8b7ab4de10e8758ef00","modified":1566968150851},{"_id":"themes/next/source/lib/fastclick/.git/objects/71/5c9e3f2c7bf89048b1b16ecb9b7d15609d65d5","hash":"ce326db17f251e0078d07a050a583bf0cfd3ac45","modified":1566968150858},{"_id":"themes/next/source/lib/fastclick/.git/objects/8c/f591c468d5a80a9c25ffe092f3359bdd311d7c","hash":"3b32a623aa2e5a7fd5640f6b238882df4c0b6c4e","modified":1566968150703},{"_id":"themes/next/source/lib/fastclick/.git/objects/7d/9e6fc08a9544ff57174c67757ff98d12913d90","hash":"5461ca6b5299b05382c8e5c948613622a0f0a5ea","modified":1566968150806},{"_id":"themes/next/source/lib/fastclick/.git/objects/a1/a4ef0b4cb975a87af657cddf929fb303c24e03","hash":"717ab6517b8cf0d4c841eae0b72d03840e1294ce","modified":1566968150773},{"_id":"themes/next/source/lib/fastclick/.git/objects/ae/5f7548b6de31e555b62d5929943270cdf70882","hash":"16028a233e7fd61d549b323e39948cb98dd8826f","modified":1566968150867},{"_id":"themes/next/source/lib/fastclick/.git/objects/a8/ac4146417080f9a79f70b679300f4495228cf0","hash":"1bb57653a607a267f64188a90a73824fed46e6de","modified":1566968150748},{"_id":"themes/next/source/lib/fastclick/.git/objects/c0/0bbbce1e0ed7a9d53c3860ea6c934f775769af","hash":"5c25c88f047e3d870e3f6b1370c458ad59505af9","modified":1566968150811},{"_id":"themes/next/source/lib/fastclick/.git/objects/cb/964303a9a8daf73aafed7f21bc910074874950","hash":"de06ae549cb5059c2beabe6194fd09e0b662a4bd","modified":1566968150840},{"_id":"themes/next/source/lib/fastclick/.git/objects/b7/756f84efa37a6af1a8d63495e595dae69dc59c","hash":"e6d349fe6b83dd9b3ab402b4a9c958f961a2c562","modified":1566968150789},{"_id":"themes/next/source/lib/fastclick/.git/objects/e3/738a2ffd7d5082bfceabe50f4ce8ac88af41c9","hash":"24570a86d04ea9a63e1b8ae146d20ee812c2af76","modified":1566968150797},{"_id":"themes/next/source/lib/fastclick/.git/objects/e8/e681d7034be8b0aaecdcb07e58275fb955a51c","hash":"846fa78e06044efd10dd58f8c510b6d360af14d8","modified":1566968150817},{"_id":"themes/next/source/lib/fastclick/.git/objects/e5/2ecdba00cb9b2083bb3491508d10db30aef805","hash":"5e41e47a592bee16139fd948e666132d6d339668","modified":1566968150763},{"_id":"themes/next/source/lib/fastclick/.git/objects/d5/8fb7058713729b8a2d573110b22bd4f0e641f9","hash":"096db64afd1ae351983eb54924347e29b839ab3d","modified":1566968150823},{"_id":"themes/next/source/lib/fastclick/.git/objects/f7/1b1e3be02f49fe52bf28afa7749410c3a8c830","hash":"5e43bd39b7e28c90282f334a54cc71873d11ffcf","modified":1566968150741},{"_id":"themes/next/source/lib/fastclick/.git/refs/heads/master","hash":"d551ddb36f0123c15af97ee78c0e32826cb124fa","modified":1566968150929},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1566968141661},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/heads/master","hash":"ffca309262e3481ddc8a642c00d96ba47da8dca4","modified":1566968141788},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1566968141671},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/0d/fe01dbfc3817db9740f7d9593e6c0d0ce4bcfe","hash":"40d7c408638a545f5d206dacc7a666562ae863b6","modified":1566968141717},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/08/d4d5ef639d45881e2c31089252871109b3cb0e","hash":"e1d5e486a1d20a1cb219a6998fcb9549f84ca0a7","modified":1566968141636},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/3a/9ca03dafb2e0a3ee0132e998e1f95146a1187b","hash":"b2a3ed46595b48486b9ba48cc3718cb981f62533","modified":1566968141725},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/49/94fde5a528c6dcf575d1300c9feb7a790580dd","hash":"849400735df951aba8ed44ba0a66b4d7c13c09a8","modified":1566968141731},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1566968141679},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/92/9d3c446aba8ac3a7854bca3fa99071ec0f1b0a","hash":"324298d9a7b50c2a0640053f01aeaa53e8d1a7ca","modified":1566968141689},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/1e/6843316b3b3be83c6296e38edbcf7a1a389eaa","hash":"b85a7e69e5655a3e37e9fc6d0f7e2bacdbff58fc","modified":1566968141702},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/7e/6c9d90608b7b346b87da90c2aa3389822a5872","hash":"5a939a822a36748559b6b67651f48b82d6d9a209","modified":1566968141648},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/99/99f3981a0f624ec98a63f2bef6b59ab5a4a130","hash":"e3318de2933bd40a6b707e06d63d97a72d2a41b6","modified":1566968141654},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/a0/bb6371002f36c275d90ef0a78f4e951c1b36a4","hash":"e73b2d57d9528243fa4163d4078ff74f274aa159","modified":1566968141709},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/fe/a9333a5d0d257dd748e4348bd97a5b71075026","hash":"a093eb542e88824fac9dda1103bb8def2c565ec6","modified":1566968141629},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/b8/7cfcee7b6c989840000d9f5e3bfe75287e7450","hash":"51ead0dc580f672ab9fab6ae4b4b49918b813574","modified":1566968141641},{"_id":"themes/next/source/lib/jquery_lazyload/.git/objects/cb/5cc9434249607fc442175e3e6c31f3a8cb7a04","hash":"ee1bd67de46a7e6c3a47a1abe0487a2b741d6be4","modified":1566968141683},{"_id":"themes/next/source/lib/fastclick/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1566968150922},{"_id":"themes/next/source/lib/fastclick/.git/logs/refs/heads/master","hash":"5cfd5e77ed75d41f5ebe8c6d88da35d2a8f3d3d1","modified":1566968150931},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/heads/master","hash":"60b5c48b3962912e8394eb45a915d39779364697","modified":1566968141790},{"_id":"themes/next/source/lib/jquery_lazyload/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1566968141781},{"_id":"themes/next/source/lib/jquery_lazyload/.git/logs/refs/remotes/origin/HEAD","hash":"60b5c48b3962912e8394eb45a915d39779364697","modified":1566968141781},{"_id":"themes/next/source/lib/fastclick/.git/logs/refs/remotes/origin/HEAD","hash":"5cfd5e77ed75d41f5ebe8c6d88da35d2a8f3d3d1","modified":1566968150922},{"_id":"themes/next/.git/objects/pack/pack-f1083f27b14aa521de44459aca1149e93a10c33a.pack","hash":"18233625525d4fcc37f454828dc9c9ac3a9d6b82","modified":1566968091176},{"_id":"themes/next/scripts/events/index.js","hash":"a25690d8b03779f7e318108c8eace9baf6d4283a","modified":1568534925548},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1568534925558},{"_id":"themes/next/.git/objects/pack/pack-5f363614d976f0f4c0825f1305641ca3db296a5f.idx","hash":"ff89028a9740f5ed3391a471d7c76ee671e01a05","modified":1568534925410},{"_id":"themes/next/.git/objects/pack/pack-5f363614d976f0f4c0825f1305641ca3db296a5f.pack","hash":"687f6d435e02fb7765f212ccdf0f1b304ae2ba37","modified":1568534925406}],"Category":[],"Data":[{"_id":"styles","data":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}],"Page":[{"title":"关于卢俊鹏","date":"2018-10-19T07:02:51.000Z","comments":0,"_content":"普通大学生\n喜欢航拍，还喜欢钢琴，学一个技能最重要的其实不是坚持而是兴趣啊","source":"about/index.md","raw":"---\ntitle: 关于卢俊鹏\ndate: 2018-10-19 15:02:51\ncomments: false\n---\n普通大学生\n喜欢航拍，还喜欢钢琴，学一个技能最重要的其实不是坚持而是兴趣啊","updated":"2019-09-15T08:07:22.909Z","path":"about/index.html","_id":"ck023se6u000k0guy06ocnvs2","layout":"page","content":"<p>普通大学生<br>喜欢航拍，还喜欢钢琴，学一个技能最重要的其实不是坚持而是兴趣啊</p>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"","more":"<p>普通大学生<br>喜欢航拍，还喜欢钢琴，学一个技能最重要的其实不是坚持而是兴趣啊</p>\n"},{"title":"标签","date":"2018-10-17T13:46:11.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-10-17 21:46:11\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-09-15T08:07:22.911Z","path":"tags/index.html","_id":"ck023se7f000m0guyqkpcjbic","layout":"page","content":"","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"","more":""}],"Post":[{"title":"用JS脚本实现微信公众号后台会员卡信息导出","date":"2019-07-06T03:36:41.000Z","_content":"GitHub页面：[wechat_vip_info_export](https://github.com/xiaoxx970/wechat_vip_info_export)\n> 交代背景：微信公众号认证快到期了，没有需求就不想再继续认证，一年300有点贵。但是顾客的会员卡是用微信的卡券功能办理的，就需要导出所有会员的信息并且导入到另一个会员管理系统里面。\n\n查了几遍微信公众号开发者的文档，发现只可以用API得到关注列表，或者创建会员卡，就是不可以得到会员信息。看来是故意的不想让我轻易导出会员信息。\n\n想了几种思路：Python？手动导出？javascript？\n会员两百多个，手动也不是不可以，但是作为程序员，能让电脑自己动我就绝不动。\n<!--more-->\n至于为什么没用Python，主要是公众号后台的登录认证有点复杂，又是输密码又是扫码，还认浏览器，对python相当不友好。\n\n于是面对着这个页面，想了很久的我想到用Javascript。\n![](会员详情页面.png)\n\n不是有`document.getElementsByClassName`嘛，我只要找到放信息的标签的class就好了。\n```js\nvar info = document.getElementsByClassName(\"msg_pre_view\")[0].innerText\n```\n![](console1.png)\n这样得到的就是以回车为分隔的会员信息，很好的第一步。\n\n下一句就是把它转换成数组：\n```js\nvar info_array = info.split(\"\\n\")\n```\n\n然后把会员名后面的方框去掉，因为那里是一只小笔，也被抓进来了：\n```js\ninfo_array[1] = info_array[1].replace(\" \",\"\")\n```\n现在info_array就长这个样子\n![](info_array.png)\n\n如你所见，表头和内容需要分离，现在在同一行。\n```js\nvar info_es = []\nvar info_head = []\nfor (var i=0;i<8;i++){\n    info_head[i]=info_array.splice(0,1)[0];//偶数行为head\n    info_es[i]=info_array.splice(0,1)[0]; //奇数行为内容\n}\n```\n这样`info_es`里存的才是我需要的信息。\n\n接下来还有会员号和积分，没有和上面的信息在同一个class里面，就另外获取一下：\n```js\nvar card_no = document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[1].innerText\nvar card_point = parseInt(document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[2].innerText)\ninfo_head.push(\"会员号\",\"积分\")\ninfo_es.push(card_no,card_point)\n```\n在后面就把会员号和积分添加进刚才数组的末尾。\n\n现在，info_es就长这个样子\n![](info_es.png)\n那为了保存我现在得到的数据，我试过用cookie，但是有空间限制，并存不下我两百多个会员的信息，所以后来是使用了localstorage，更健壮也比cookie大很多，而且存取只要两句话：\n\n```js\nlocalStorage.setItem(\"csv\",csv);//存\nlocalStorage.getItem(\"csv\");//取\n```\n\n就喜欢这么简单的\n\n不过在存之前先把我们数组转换成csv的格式\n```js\nvar csv = info_es.join(\",\")\n```\n![csv](csv.png)\n所谓csv格式就是，逗号分隔数据，以`\\n`换行符来分隔行，这里是一行的数据，所以还没看到`\\n`。\n\n接下来就是，把csv变量存进localStorage里\n```js\nlocalStorage.setItem(\"csv\",csv);\n```\n\n已经很完美了，但这还只是一行，我们的目标是星辰和大海。\n\n为了实现页内跳转，我用`window.location.href`这个值来定义当前的URL，这样就不必打开新窗口再关闭。\n\n下面讲讲主要思路：在会员列表页开始，计数器写1，点第一个会员的详情，把数据弄好存进localstorage，返回会员列表页，计数器加一，点第二个， 读取localstorage里的csv，把当前会员数据追加进csv，存csv，以此类推，计数器加到大于10的时候点下一页的按钮，然后计数器写1。\n\n还有一个问题就是列表页的js代码不能马上就运行，列表还没加载出来，会报错。要用`window.addEventListener('load', function() {}`来判断页面加载完成，完成后就执行{}里的语句。\n\n总的代码：\n\n```js\nfunction read_info(){\n        var info = document.getElementsByClassName(\"msg_pre_view\")[0].innerText\n        var info_array = info.split(\"\\n\")//转换信息为数组\n        info_array[1] = info_array[1].replace(\" \",\"\")//删掉会员名后面小笔的图标\n        var info_es = []\n        var info_head = []\n        for (var i=0;i<8;i++){\n            info_head[i]=info_array.splice(0,1)[0];//偶数行为head\n            info_es[i]=info_array.splice(0,1)[0]; //奇数行为内容\n        }\n        var card_no = document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[1].innerText\n        var card_point = parseInt(document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[2].innerText)\n        info_head.push(\"会员号\",\"积分\")\n        info_es.push(card_no,card_point)\n        var csv = info_es.join(\",\")\n        return csv\n    }\n    window.addEventListener('load', function() {\n        var step = parseInt(getCookie(\"step\"))//这个就是计数器\n        if(window.location.search.has(\"action=user_list\")){//分支1：在会员列表页\n            if (getCookie(\"step\")==\"\"){//如果第一次运行脚本，计数器写1\n                setCookie(\"step\",\"1\");\n                step = 1;\n            }\n            if(step>10){//计数器大于10的时候把自己写1，点下一页按钮\n                step=1\n                setCookie(\"step\",step)\n                try {\n                    document.getElementById(\"js_next_page\").click()//去往下一页\n                }\n                catch(err) {//如果没有下一页可以去了就提示完成，下载csv文件\n                    alert(\"导出完成，下载csv文件\")\n                    var csv = localStorage.getItem(\"csv\")\n                    csv = \"会员,地区,姓名,手机,生日,状态,是否关注,标签,会员号,积分\\n\"+csv\n                    window.open(\"data:text/csv;charset=utf-8,\"+csv)\n                }\n                console.log(\"next page\")\n                return//这个return必须要否则下一页的点击速度赶不上去详情页的速度\n            }\n            console.log(\"step:\"+step)\n            setCookie(\"back_url\",window.location.href)//把列表页的URL存进cookie\n            window.location.href=document.getElementsByClassName(\"tbody\")[0].getElementsByTagName(\"a\")[step*2-1].href//去往详情页\n            return\n        }\n        if(window.location.search.has(\"action=user_detail\")){//分支2：在会员详情页\n            step++;\n            setCookie(\"step\",step)\n            /*在这里做事情*/\n            var csv = localStorage.getItem(\"csv\")//拿出存在localstorage里的csv变量\n            if (csv == null){//如果是第一次运行脚本，csv的值就是null\n                csv = \"\"\n                localStorage.setItem(\"csv\",csv)\n            }\n            csv = csv+\"\\n\"+read_info()//用换行符分隔已有的数据和这次读来的数据\n            localStorage.setItem(\"csv\",csv)//用localstorage存储csv\n            console.log(\"back\")\n            window.location.href=getCookie(\"back_url\")//回到列表页，比用下面这行更有鲁棒性\n            //window.history.back();//后退\n            //return\n        }\n    }, false);\n```\n\n最后，它需要一个运行的载体，那就是tampermonkey没错了，完整的脚本我还上传到了GreasyFork，在这里：[微信公众号会员信息导出]([https://greasyfork.org/en/scripts/387221-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BC%9A%E5%91%98%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA-wechat-offical-account-vip-info-export](https://greasyfork.org/en/scripts/387221-微信公众号会员信息导出-wechat-offical-account-vip-info-export))\n\n需要的尽管拿去用吧。","source":"_posts/Wechat-vip-info-export.md","raw":"---\ntitle: 用JS脚本实现微信公众号后台会员卡信息导出\ndate: 2019-07-06 11:36:41\ntags: Javascript\n---\nGitHub页面：[wechat_vip_info_export](https://github.com/xiaoxx970/wechat_vip_info_export)\n> 交代背景：微信公众号认证快到期了，没有需求就不想再继续认证，一年300有点贵。但是顾客的会员卡是用微信的卡券功能办理的，就需要导出所有会员的信息并且导入到另一个会员管理系统里面。\n\n查了几遍微信公众号开发者的文档，发现只可以用API得到关注列表，或者创建会员卡，就是不可以得到会员信息。看来是故意的不想让我轻易导出会员信息。\n\n想了几种思路：Python？手动导出？javascript？\n会员两百多个，手动也不是不可以，但是作为程序员，能让电脑自己动我就绝不动。\n<!--more-->\n至于为什么没用Python，主要是公众号后台的登录认证有点复杂，又是输密码又是扫码，还认浏览器，对python相当不友好。\n\n于是面对着这个页面，想了很久的我想到用Javascript。\n![](会员详情页面.png)\n\n不是有`document.getElementsByClassName`嘛，我只要找到放信息的标签的class就好了。\n```js\nvar info = document.getElementsByClassName(\"msg_pre_view\")[0].innerText\n```\n![](console1.png)\n这样得到的就是以回车为分隔的会员信息，很好的第一步。\n\n下一句就是把它转换成数组：\n```js\nvar info_array = info.split(\"\\n\")\n```\n\n然后把会员名后面的方框去掉，因为那里是一只小笔，也被抓进来了：\n```js\ninfo_array[1] = info_array[1].replace(\" \",\"\")\n```\n现在info_array就长这个样子\n![](info_array.png)\n\n如你所见，表头和内容需要分离，现在在同一行。\n```js\nvar info_es = []\nvar info_head = []\nfor (var i=0;i<8;i++){\n    info_head[i]=info_array.splice(0,1)[0];//偶数行为head\n    info_es[i]=info_array.splice(0,1)[0]; //奇数行为内容\n}\n```\n这样`info_es`里存的才是我需要的信息。\n\n接下来还有会员号和积分，没有和上面的信息在同一个class里面，就另外获取一下：\n```js\nvar card_no = document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[1].innerText\nvar card_point = parseInt(document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[2].innerText)\ninfo_head.push(\"会员号\",\"积分\")\ninfo_es.push(card_no,card_point)\n```\n在后面就把会员号和积分添加进刚才数组的末尾。\n\n现在，info_es就长这个样子\n![](info_es.png)\n那为了保存我现在得到的数据，我试过用cookie，但是有空间限制，并存不下我两百多个会员的信息，所以后来是使用了localstorage，更健壮也比cookie大很多，而且存取只要两句话：\n\n```js\nlocalStorage.setItem(\"csv\",csv);//存\nlocalStorage.getItem(\"csv\");//取\n```\n\n就喜欢这么简单的\n\n不过在存之前先把我们数组转换成csv的格式\n```js\nvar csv = info_es.join(\",\")\n```\n![csv](csv.png)\n所谓csv格式就是，逗号分隔数据，以`\\n`换行符来分隔行，这里是一行的数据，所以还没看到`\\n`。\n\n接下来就是，把csv变量存进localStorage里\n```js\nlocalStorage.setItem(\"csv\",csv);\n```\n\n已经很完美了，但这还只是一行，我们的目标是星辰和大海。\n\n为了实现页内跳转，我用`window.location.href`这个值来定义当前的URL，这样就不必打开新窗口再关闭。\n\n下面讲讲主要思路：在会员列表页开始，计数器写1，点第一个会员的详情，把数据弄好存进localstorage，返回会员列表页，计数器加一，点第二个， 读取localstorage里的csv，把当前会员数据追加进csv，存csv，以此类推，计数器加到大于10的时候点下一页的按钮，然后计数器写1。\n\n还有一个问题就是列表页的js代码不能马上就运行，列表还没加载出来，会报错。要用`window.addEventListener('load', function() {}`来判断页面加载完成，完成后就执行{}里的语句。\n\n总的代码：\n\n```js\nfunction read_info(){\n        var info = document.getElementsByClassName(\"msg_pre_view\")[0].innerText\n        var info_array = info.split(\"\\n\")//转换信息为数组\n        info_array[1] = info_array[1].replace(\" \",\"\")//删掉会员名后面小笔的图标\n        var info_es = []\n        var info_head = []\n        for (var i=0;i<8;i++){\n            info_head[i]=info_array.splice(0,1)[0];//偶数行为head\n            info_es[i]=info_array.splice(0,1)[0]; //奇数行为内容\n        }\n        var card_no = document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[1].innerText\n        var card_point = parseInt(document.getElementsByClassName(\"msg_pre_view\")[1].getElementsByTagName(\"span\")[2].innerText)\n        info_head.push(\"会员号\",\"积分\")\n        info_es.push(card_no,card_point)\n        var csv = info_es.join(\",\")\n        return csv\n    }\n    window.addEventListener('load', function() {\n        var step = parseInt(getCookie(\"step\"))//这个就是计数器\n        if(window.location.search.has(\"action=user_list\")){//分支1：在会员列表页\n            if (getCookie(\"step\")==\"\"){//如果第一次运行脚本，计数器写1\n                setCookie(\"step\",\"1\");\n                step = 1;\n            }\n            if(step>10){//计数器大于10的时候把自己写1，点下一页按钮\n                step=1\n                setCookie(\"step\",step)\n                try {\n                    document.getElementById(\"js_next_page\").click()//去往下一页\n                }\n                catch(err) {//如果没有下一页可以去了就提示完成，下载csv文件\n                    alert(\"导出完成，下载csv文件\")\n                    var csv = localStorage.getItem(\"csv\")\n                    csv = \"会员,地区,姓名,手机,生日,状态,是否关注,标签,会员号,积分\\n\"+csv\n                    window.open(\"data:text/csv;charset=utf-8,\"+csv)\n                }\n                console.log(\"next page\")\n                return//这个return必须要否则下一页的点击速度赶不上去详情页的速度\n            }\n            console.log(\"step:\"+step)\n            setCookie(\"back_url\",window.location.href)//把列表页的URL存进cookie\n            window.location.href=document.getElementsByClassName(\"tbody\")[0].getElementsByTagName(\"a\")[step*2-1].href//去往详情页\n            return\n        }\n        if(window.location.search.has(\"action=user_detail\")){//分支2：在会员详情页\n            step++;\n            setCookie(\"step\",step)\n            /*在这里做事情*/\n            var csv = localStorage.getItem(\"csv\")//拿出存在localstorage里的csv变量\n            if (csv == null){//如果是第一次运行脚本，csv的值就是null\n                csv = \"\"\n                localStorage.setItem(\"csv\",csv)\n            }\n            csv = csv+\"\\n\"+read_info()//用换行符分隔已有的数据和这次读来的数据\n            localStorage.setItem(\"csv\",csv)//用localstorage存储csv\n            console.log(\"back\")\n            window.location.href=getCookie(\"back_url\")//回到列表页，比用下面这行更有鲁棒性\n            //window.history.back();//后退\n            //return\n        }\n    }, false);\n```\n\n最后，它需要一个运行的载体，那就是tampermonkey没错了，完整的脚本我还上传到了GreasyFork，在这里：[微信公众号会员信息导出]([https://greasyfork.org/en/scripts/387221-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BC%9A%E5%91%98%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA-wechat-offical-account-vip-info-export](https://greasyfork.org/en/scripts/387221-微信公众号会员信息导出-wechat-offical-account-vip-info-export))\n\n需要的尽管拿去用吧。","slug":"Wechat-vip-info-export","published":1,"updated":"2019-09-15T08:07:22.759Z","_id":"ck023sdlb00000guy2ng7qucu","comments":1,"layout":"post","photos":[],"link":"","content":"<p>GitHub页面：<a href=\"https://github.com/xiaoxx970/wechat_vip_info_export\" target=\"_blank\" rel=\"noopener\">wechat_vip_info_export</a></p>\n<blockquote>\n<p>交代背景：微信公众号认证快到期了，没有需求就不想再继续认证，一年300有点贵。但是顾客的会员卡是用微信的卡券功能办理的，就需要导出所有会员的信息并且导入到另一个会员管理系统里面。</p>\n</blockquote>\n<p>查了几遍微信公众号开发者的文档，发现只可以用API得到关注列表，或者创建会员卡，就是不可以得到会员信息。看来是故意的不想让我轻易导出会员信息。</p>\n<p>想了几种思路：Python？手动导出？javascript？<br>会员两百多个，手动也不是不可以，但是作为程序员，能让电脑自己动我就绝不动。<br><a id=\"more\"></a><br>至于为什么没用Python，主要是公众号后台的登录认证有点复杂，又是输密码又是扫码，还认浏览器，对python相当不友好。</p>\n<p>于是面对着这个页面，想了很久的我想到用Javascript。<br><img src=\"会员详情页面.png\" alt></p>\n<p>不是有<code>document.getElementsByClassName</code>嘛，我只要找到放信息的标签的class就好了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> info = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">0</span>].innerText</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"console1.png\" alt><br>这样得到的就是以回车为分隔的会员信息，很好的第一步。</p>\n<p>下一句就是把它转换成数组：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> info_array = info.split(<span class=\"string\">\"\\n\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>然后把会员名后面的方框去掉，因为那里是一只小笔，也被抓进来了：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info_array[<span class=\"number\">1</span>] = info_array[<span class=\"number\">1</span>].replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>现在info_array就长这个样子<br><img src=\"info_array.png\" alt></p>\n<p>如你所见，表头和内容需要分离，现在在同一行。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> info_es = []</span><br><span class=\"line\"><span class=\"keyword\">var</span> info_head = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)&#123;</span><br><span class=\"line\">    info_head[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>];<span class=\"comment\">//偶数行为head</span></span><br><span class=\"line\">    info_es[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]; <span class=\"comment\">//奇数行为内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样<code>info_es</code>里存的才是我需要的信息。</p>\n<p>接下来还有会员号和积分，没有和上面的信息在同一个class里面，就另外获取一下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> card_no = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">1</span>].innerText</span><br><span class=\"line\"><span class=\"keyword\">var</span> card_point = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">2</span>].innerText)</span><br><span class=\"line\">info_head.push(<span class=\"string\">\"会员号\"</span>,<span class=\"string\">\"积分\"</span>)</span><br><span class=\"line\">info_es.push(card_no,card_point)</span><br></pre></td></tr></table></figure></p>\n<p>在后面就把会员号和积分添加进刚才数组的末尾。</p>\n<p>现在，info_es就长这个样子<br><img src=\"info_es.png\" alt><br>那为了保存我现在得到的数据，我试过用cookie，但是有空间限制，并存不下我两百多个会员的信息，所以后来是使用了localstorage，更健壮也比cookie大很多，而且存取只要两句话：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv);<span class=\"comment\">//存</span></span><br><span class=\"line\">localStorage.getItem(<span class=\"string\">\"csv\"</span>);<span class=\"comment\">//取</span></span><br></pre></td></tr></table></figure>\n<p>就喜欢这么简单的</p>\n<p>不过在存之前先把我们数组转换成csv的格式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> csv = info_es.join(<span class=\"string\">\",\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"csv.png\" alt=\"csv\"><br>所谓csv格式就是，逗号分隔数据，以<code>\\n</code>换行符来分隔行，这里是一行的数据，所以还没看到<code>\\n</code>。</p>\n<p>接下来就是，把csv变量存进localStorage里<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv);</span><br></pre></td></tr></table></figure></p>\n<p>已经很完美了，但这还只是一行，我们的目标是星辰和大海。</p>\n<p>为了实现页内跳转，我用<code>window.location.href</code>这个值来定义当前的URL，这样就不必打开新窗口再关闭。</p>\n<p>下面讲讲主要思路：在会员列表页开始，计数器写1，点第一个会员的详情，把数据弄好存进localstorage，返回会员列表页，计数器加一，点第二个， 读取localstorage里的csv，把当前会员数据追加进csv，存csv，以此类推，计数器加到大于10的时候点下一页的按钮，然后计数器写1。</p>\n<p>还有一个问题就是列表页的js代码不能马上就运行，列表还没加载出来，会报错。要用<code>window.addEventListener(&#39;load&#39;, function() {}</code>来判断页面加载完成，完成后就执行{}里的语句。</p>\n<p>总的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read_info</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> info = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">0</span>].innerText</span><br><span class=\"line\">        <span class=\"keyword\">var</span> info_array = info.split(<span class=\"string\">\"\\n\"</span>)<span class=\"comment\">//转换信息为数组</span></span><br><span class=\"line\">        info_array[<span class=\"number\">1</span>] = info_array[<span class=\"number\">1</span>].replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>)<span class=\"comment\">//删掉会员名后面小笔的图标</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> info_es = []</span><br><span class=\"line\">        <span class=\"keyword\">var</span> info_head = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)&#123;</span><br><span class=\"line\">            info_head[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>];<span class=\"comment\">//偶数行为head</span></span><br><span class=\"line\">            info_es[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]; <span class=\"comment\">//奇数行为内容</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> card_no = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">1</span>].innerText</span><br><span class=\"line\">        <span class=\"keyword\">var</span> card_point = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">2</span>].innerText)</span><br><span class=\"line\">        info_head.push(<span class=\"string\">\"会员号\"</span>,<span class=\"string\">\"积分\"</span>)</span><br><span class=\"line\">        info_es.push(card_no,card_point)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> csv = info_es.join(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> csv</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'load'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> step = <span class=\"built_in\">parseInt</span>(getCookie(<span class=\"string\">\"step\"</span>))<span class=\"comment\">//这个就是计数器</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.location.search.has(<span class=\"string\">\"action=user_list\"</span>))&#123;<span class=\"comment\">//分支1：在会员列表页</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (getCookie(<span class=\"string\">\"step\"</span>)==<span class=\"string\">\"\"</span>)&#123;<span class=\"comment\">//如果第一次运行脚本，计数器写1</span></span><br><span class=\"line\">                setCookie(<span class=\"string\">\"step\"</span>,<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">                step = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(step&gt;<span class=\"number\">10</span>)&#123;<span class=\"comment\">//计数器大于10的时候把自己写1，点下一页按钮</span></span><br><span class=\"line\">                step=<span class=\"number\">1</span></span><br><span class=\"line\">                setCookie(<span class=\"string\">\"step\"</span>,step)</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"js_next_page\"</span>).click()<span class=\"comment\">//去往下一页</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span>(err) &#123;<span class=\"comment\">//如果没有下一页可以去了就提示完成，下载csv文件</span></span><br><span class=\"line\">                    alert(<span class=\"string\">\"导出完成，下载csv文件\"</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> csv = localStorage.getItem(<span class=\"string\">\"csv\"</span>)</span><br><span class=\"line\">                    csv = <span class=\"string\">\"会员,地区,姓名,手机,生日,状态,是否关注,标签,会员号,积分\\n\"</span>+csv</span><br><span class=\"line\">                    <span class=\"built_in\">window</span>.open(<span class=\"string\">\"data:text/csv;charset=utf-8,\"</span>+csv)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"next page\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span><span class=\"comment\">//这个return必须要否则下一页的点击速度赶不上去详情页的速度</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"step:\"</span>+step)</span><br><span class=\"line\">            setCookie(<span class=\"string\">\"back_url\"</span>,<span class=\"built_in\">window</span>.location.href)<span class=\"comment\">//把列表页的URL存进cookie</span></span><br><span class=\"line\">            <span class=\"built_in\">window</span>.location.href=<span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"tbody\"</span>)[<span class=\"number\">0</span>].getElementsByTagName(<span class=\"string\">\"a\"</span>)[step*<span class=\"number\">2</span><span class=\"number\">-1</span>].href<span class=\"comment\">//去往详情页</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.location.search.has(<span class=\"string\">\"action=user_detail\"</span>))&#123;<span class=\"comment\">//分支2：在会员详情页</span></span><br><span class=\"line\">            step++;</span><br><span class=\"line\">            setCookie(<span class=\"string\">\"step\"</span>,step)</span><br><span class=\"line\">            <span class=\"comment\">/*在这里做事情*/</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> csv = localStorage.getItem(<span class=\"string\">\"csv\"</span>)<span class=\"comment\">//拿出存在localstorage里的csv变量</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (csv == <span class=\"literal\">null</span>)&#123;<span class=\"comment\">//如果是第一次运行脚本，csv的值就是null</span></span><br><span class=\"line\">                csv = <span class=\"string\">\"\"</span></span><br><span class=\"line\">                localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            csv = csv+<span class=\"string\">\"\\n\"</span>+read_info()<span class=\"comment\">//用换行符分隔已有的数据和这次读来的数据</span></span><br><span class=\"line\">            localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv)<span class=\"comment\">//用localstorage存储csv</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"back\"</span>)</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.location.href=getCookie(<span class=\"string\">\"back_url\"</span>)<span class=\"comment\">//回到列表页，比用下面这行更有鲁棒性</span></span><br><span class=\"line\">            <span class=\"comment\">//window.history.back();//后退</span></span><br><span class=\"line\">            <span class=\"comment\">//return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n<p>最后，它需要一个运行的载体，那就是tampermonkey没错了，完整的脚本我还上传到了GreasyFork，在这里：<a href=\"[https://greasyfork.org/en/scripts/387221-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BC%9A%E5%91%98%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA-wechat-offical-account-vip-info-export](https://greasyfork.org/en/scripts/387221-微信公众号会员信息导出-wechat-offical-account-vip-info-export\">微信公众号会员信息导出</a>)</p>\n<p>需要的尽管拿去用吧。</p>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"<p>GitHub页面：<a href=\"https://github.com/xiaoxx970/wechat_vip_info_export\" target=\"_blank\" rel=\"noopener\">wechat_vip_info_export</a></p>\n<blockquote>\n<p>交代背景：微信公众号认证快到期了，没有需求就不想再继续认证，一年300有点贵。但是顾客的会员卡是用微信的卡券功能办理的，就需要导出所有会员的信息并且导入到另一个会员管理系统里面。</p>\n</blockquote>\n<p>查了几遍微信公众号开发者的文档，发现只可以用API得到关注列表，或者创建会员卡，就是不可以得到会员信息。看来是故意的不想让我轻易导出会员信息。</p>\n<p>想了几种思路：Python？手动导出？javascript？<br>会员两百多个，手动也不是不可以，但是作为程序员，能让电脑自己动我就绝不动。<br>","more":"<br>至于为什么没用Python，主要是公众号后台的登录认证有点复杂，又是输密码又是扫码，还认浏览器，对python相当不友好。</p>\n<p>于是面对着这个页面，想了很久的我想到用Javascript。<br><img src=\"会员详情页面.png\" alt></p>\n<p>不是有<code>document.getElementsByClassName</code>嘛，我只要找到放信息的标签的class就好了。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> info = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">0</span>].innerText</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"console1.png\" alt><br>这样得到的就是以回车为分隔的会员信息，很好的第一步。</p>\n<p>下一句就是把它转换成数组：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> info_array = info.split(<span class=\"string\">\"\\n\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>然后把会员名后面的方框去掉，因为那里是一只小笔，也被抓进来了：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">info_array[<span class=\"number\">1</span>] = info_array[<span class=\"number\">1</span>].replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p>现在info_array就长这个样子<br><img src=\"info_array.png\" alt></p>\n<p>如你所见，表头和内容需要分离，现在在同一行。<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> info_es = []</span><br><span class=\"line\"><span class=\"keyword\">var</span> info_head = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)&#123;</span><br><span class=\"line\">    info_head[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>];<span class=\"comment\">//偶数行为head</span></span><br><span class=\"line\">    info_es[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]; <span class=\"comment\">//奇数行为内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样<code>info_es</code>里存的才是我需要的信息。</p>\n<p>接下来还有会员号和积分，没有和上面的信息在同一个class里面，就另外获取一下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> card_no = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">1</span>].innerText</span><br><span class=\"line\"><span class=\"keyword\">var</span> card_point = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">2</span>].innerText)</span><br><span class=\"line\">info_head.push(<span class=\"string\">\"会员号\"</span>,<span class=\"string\">\"积分\"</span>)</span><br><span class=\"line\">info_es.push(card_no,card_point)</span><br></pre></td></tr></table></figure></p>\n<p>在后面就把会员号和积分添加进刚才数组的末尾。</p>\n<p>现在，info_es就长这个样子<br><img src=\"info_es.png\" alt><br>那为了保存我现在得到的数据，我试过用cookie，但是有空间限制，并存不下我两百多个会员的信息，所以后来是使用了localstorage，更健壮也比cookie大很多，而且存取只要两句话：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv);<span class=\"comment\">//存</span></span><br><span class=\"line\">localStorage.getItem(<span class=\"string\">\"csv\"</span>);<span class=\"comment\">//取</span></span><br></pre></td></tr></table></figure>\n<p>就喜欢这么简单的</p>\n<p>不过在存之前先把我们数组转换成csv的格式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> csv = info_es.join(<span class=\"string\">\",\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"csv.png\" alt=\"csv\"><br>所谓csv格式就是，逗号分隔数据，以<code>\\n</code>换行符来分隔行，这里是一行的数据，所以还没看到<code>\\n</code>。</p>\n<p>接下来就是，把csv变量存进localStorage里<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv);</span><br></pre></td></tr></table></figure></p>\n<p>已经很完美了，但这还只是一行，我们的目标是星辰和大海。</p>\n<p>为了实现页内跳转，我用<code>window.location.href</code>这个值来定义当前的URL，这样就不必打开新窗口再关闭。</p>\n<p>下面讲讲主要思路：在会员列表页开始，计数器写1，点第一个会员的详情，把数据弄好存进localstorage，返回会员列表页，计数器加一，点第二个， 读取localstorage里的csv，把当前会员数据追加进csv，存csv，以此类推，计数器加到大于10的时候点下一页的按钮，然后计数器写1。</p>\n<p>还有一个问题就是列表页的js代码不能马上就运行，列表还没加载出来，会报错。要用<code>window.addEventListener(&#39;load&#39;, function() {}</code>来判断页面加载完成，完成后就执行{}里的语句。</p>\n<p>总的代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">read_info</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> info = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">0</span>].innerText</span><br><span class=\"line\">        <span class=\"keyword\">var</span> info_array = info.split(<span class=\"string\">\"\\n\"</span>)<span class=\"comment\">//转换信息为数组</span></span><br><span class=\"line\">        info_array[<span class=\"number\">1</span>] = info_array[<span class=\"number\">1</span>].replace(<span class=\"string\">\" \"</span>,<span class=\"string\">\"\"</span>)<span class=\"comment\">//删掉会员名后面小笔的图标</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> info_es = []</span><br><span class=\"line\">        <span class=\"keyword\">var</span> info_head = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)&#123;</span><br><span class=\"line\">            info_head[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>];<span class=\"comment\">//偶数行为head</span></span><br><span class=\"line\">            info_es[i]=info_array.splice(<span class=\"number\">0</span>,<span class=\"number\">1</span>)[<span class=\"number\">0</span>]; <span class=\"comment\">//奇数行为内容</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> card_no = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">1</span>].innerText</span><br><span class=\"line\">        <span class=\"keyword\">var</span> card_point = <span class=\"built_in\">parseInt</span>(<span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"msg_pre_view\"</span>)[<span class=\"number\">1</span>].getElementsByTagName(<span class=\"string\">\"span\"</span>)[<span class=\"number\">2</span>].innerText)</span><br><span class=\"line\">        info_head.push(<span class=\"string\">\"会员号\"</span>,<span class=\"string\">\"积分\"</span>)</span><br><span class=\"line\">        info_es.push(card_no,card_point)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> csv = info_es.join(<span class=\"string\">\",\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> csv</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.addEventListener(<span class=\"string\">'load'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> step = <span class=\"built_in\">parseInt</span>(getCookie(<span class=\"string\">\"step\"</span>))<span class=\"comment\">//这个就是计数器</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.location.search.has(<span class=\"string\">\"action=user_list\"</span>))&#123;<span class=\"comment\">//分支1：在会员列表页</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (getCookie(<span class=\"string\">\"step\"</span>)==<span class=\"string\">\"\"</span>)&#123;<span class=\"comment\">//如果第一次运行脚本，计数器写1</span></span><br><span class=\"line\">                setCookie(<span class=\"string\">\"step\"</span>,<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">                step = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(step&gt;<span class=\"number\">10</span>)&#123;<span class=\"comment\">//计数器大于10的时候把自己写1，点下一页按钮</span></span><br><span class=\"line\">                step=<span class=\"number\">1</span></span><br><span class=\"line\">                setCookie(<span class=\"string\">\"step\"</span>,step)</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"js_next_page\"</span>).click()<span class=\"comment\">//去往下一页</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">catch</span>(err) &#123;<span class=\"comment\">//如果没有下一页可以去了就提示完成，下载csv文件</span></span><br><span class=\"line\">                    alert(<span class=\"string\">\"导出完成，下载csv文件\"</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> csv = localStorage.getItem(<span class=\"string\">\"csv\"</span>)</span><br><span class=\"line\">                    csv = <span class=\"string\">\"会员,地区,姓名,手机,生日,状态,是否关注,标签,会员号,积分\\n\"</span>+csv</span><br><span class=\"line\">                    <span class=\"built_in\">window</span>.open(<span class=\"string\">\"data:text/csv;charset=utf-8,\"</span>+csv)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"next page\"</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span><span class=\"comment\">//这个return必须要否则下一页的点击速度赶不上去详情页的速度</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"step:\"</span>+step)</span><br><span class=\"line\">            setCookie(<span class=\"string\">\"back_url\"</span>,<span class=\"built_in\">window</span>.location.href)<span class=\"comment\">//把列表页的URL存进cookie</span></span><br><span class=\"line\">            <span class=\"built_in\">window</span>.location.href=<span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">\"tbody\"</span>)[<span class=\"number\">0</span>].getElementsByTagName(<span class=\"string\">\"a\"</span>)[step*<span class=\"number\">2</span><span class=\"number\">-1</span>].href<span class=\"comment\">//去往详情页</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.location.search.has(<span class=\"string\">\"action=user_detail\"</span>))&#123;<span class=\"comment\">//分支2：在会员详情页</span></span><br><span class=\"line\">            step++;</span><br><span class=\"line\">            setCookie(<span class=\"string\">\"step\"</span>,step)</span><br><span class=\"line\">            <span class=\"comment\">/*在这里做事情*/</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> csv = localStorage.getItem(<span class=\"string\">\"csv\"</span>)<span class=\"comment\">//拿出存在localstorage里的csv变量</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (csv == <span class=\"literal\">null</span>)&#123;<span class=\"comment\">//如果是第一次运行脚本，csv的值就是null</span></span><br><span class=\"line\">                csv = <span class=\"string\">\"\"</span></span><br><span class=\"line\">                localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            csv = csv+<span class=\"string\">\"\\n\"</span>+read_info()<span class=\"comment\">//用换行符分隔已有的数据和这次读来的数据</span></span><br><span class=\"line\">            localStorage.setItem(<span class=\"string\">\"csv\"</span>,csv)<span class=\"comment\">//用localstorage存储csv</span></span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"back\"</span>)</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.location.href=getCookie(<span class=\"string\">\"back_url\"</span>)<span class=\"comment\">//回到列表页，比用下面这行更有鲁棒性</span></span><br><span class=\"line\">            <span class=\"comment\">//window.history.back();//后退</span></span><br><span class=\"line\">            <span class=\"comment\">//return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, <span class=\"literal\">false</span>);</span><br></pre></td></tr></table></figure>\n<p>最后，它需要一个运行的载体，那就是tampermonkey没错了，完整的脚本我还上传到了GreasyFork，在这里：<a href=\"[https://greasyfork.org/en/scripts/387221-%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E4%BC%9A%E5%91%98%E4%BF%A1%E6%81%AF%E5%AF%BC%E5%87%BA-wechat-offical-account-vip-info-export](https://greasyfork.org/en/scripts/387221-微信公众号会员信息导出-wechat-offical-account-vip-info-export\">微信公众号会员信息导出</a>)</p>\n<p>需要的尽管拿去用吧。</p>"},{"title":"Minecraft海外服务器加速后续：用frp更高效地转发流量（也适用于其他游戏的加速）","date":"2018-11-30T07:51:42.000Z","_content":">前情提要：之前用Nginx反向代理的功能来加速Minecraft，真的是太不稳定！了！\n经常出现玩着玩着掉线了，去看Minecraft服务器没有任何毛病，看用来加速的阿里云服务器，也没有任何异常，但是直连Minecraft服务器是可以的，所以问题绝壁出在加速服务器上\n重启Nginx，连不上，重启服务器，还是连不上，最后过了几分钟，自己连上了。很任性有没有，如此的情况出了几次实在是忍受不了了，于是在想别的办法，想到一个叫frp的软件，之前用过来做内网穿透，同样也是转发流量的道理嘛，就两边装了试试发现，是真的好用啊，甚至感觉延迟更低了，也没有掉线过\n\n安装过程来介绍一下\n<!---more--->\n其实也没什么新的东西，就是分别在服务器和加速服务器安装frp，然后配置运行就可以了\n\n# 在Minecraft服务器上安装和配置frp客户端(frpc)\n\n- 下载并解压frp\n  \n    可以去[release页面](\nhttps://github.com/fatedier/frp/releases/latest)找到最新版的下载链接然后替换下面的链接\n\n    ```bash\n    cd ~\n    wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz\n    tar -xvf frp.tar.gz\n    ```\n- 到frp目录下,复制文件到系统里（以管理员身份运行）\n    ```bash\n    cd frp\n    cp frpc /usr/local/bin/frpc\n    mkdir /etc/frp\n    cp frpc.ini /etc/frp/frpc.ini\n    ```\n- 编写frpc的配置文件：`frpc.ini`\n    ```bash\n    nano /etc/frp/frpc.ini\n    # 内容如下\n    [common]\n    server_addr = 加速服务器的IP或域名\n    server_port = 7000\n    login_fail_exit\t= false  #0.11新功能：登录远程服务器失败不退出，30s自动重试\n    #protocol = kcp\n\n    [mc]\n    type = tcp\n    local_ip = 127.0.0.1\n    local_port = 25565\n    remote_port = 25565\n\n    [mc-udp]\n    type = udp\n    local_ip = 127.0.0.1\n    local_port = 25565\n    remote_port = 25565\n    ```\n    我也不知道开启udp的必要性，但是经过实测只开tcp并登陆不进游戏\n\n- 编写 frp service 文件，把frpc加入系统服务，这样方便管理\n    ```bash\n    nano /usr/lib/systemd/system/frpc.service\n    # 内容如下\n    [Unit]\n    Description=frpc\n    After=network.target\n\n    [Service]\n    TimeoutStartSec=30\n    ExecStart=/usr/local/bin/frpc -c /etc/frp/frpc.ini\n    ExecStop=/bin/kill $MAINPID\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n- 设置文件权限，启动 frp 并设置开机启动\n    ```bash\n    chmod 754 /usr/lib/systemd/system/frpc.service\n    systemctl enable frpc\n    ```\n\n    好了frp客户端的操作先到这里，等下装好frp服务端并运行后再<a id=\"back\" />回来这里，开启客户端：\n    ```bash\n    systemctl start frpc\n    systemctl status frpc\n    ```\n\n# 在加速服务器上安装frp服务端\n\n- 还是一样，先下载frp，再解压\n    ```bash\n    cd ~\n    wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz\n    tar -xvf frp.tar.gz\n    ```\n- 到frp目录下,复制文件到系统里（这次是frps了）\n    ```bash\n    cd frp\n    cp frps /usr/local/bin/frps\n    mkdir /etc/frp\n    cp frps.ini /etc/frp/frps.ini\n    ```\n- 编写frps的配置文件：`frps.ini`\n    ```bash\n    nano /etc/frp/frps.ini\n    # 内容如下\n    [common]\n    bind_port = 7000\n    ```\n    就是这么简单，记得去防火墙允许7000端口\n- 加入系统服务\n    ```bash\n    nano /usr/lib/systemd/system/frps.service\n    # 内容如下\n    [Unit]\n    Description=frps\n    After=network.target\n\n    [Service]\n    TimeoutStartSec=30\n    ExecStart=/usr/local/bin/frps -c /etc/frp/frps.ini\n    ExecStop=/bin/kill $MAINPID\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n    保存退出，设置权限，开机启动\n    ```bash\n    chmod 754 /usr/lib/systemd/system/frps.service\n    systemctl enable frps\n    systemctl start frps\n    systemctl status frps\n    ```\n    现在可以[回去](#back)启动客户端了\n<br />\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完成了~最后一句话是显示服务运行状态的,当里面显示绿色的`active`就表示程序正常运行了\n客户端那边也是，如果出问题了显示红色的`dead`，那么认真看看系统日志,是不是配置文件不对什么的，然后再`systemctl restart frpc`(s),看`status`，多错几次还是就OK了。\n\n如果你照着我的教程做了，在任何一步出了问题都欢迎在评论里告诉我，看到了一定回复。\n>ftp项目地址：https://github.com/fatedier/frp\n它能做的不止转发端口流量这么简单，如果你愿意，看看它的中文文档，会有很多收获的","source":"_posts/frp-for-mc.md","raw":"---\ntitle: Minecraft海外服务器加速后续：用frp更高效地转发流量（也适用于其他游戏的加速）\ndate: 2018-11-30 15:51:42\ntags: 云服务\n---\n>前情提要：之前用Nginx反向代理的功能来加速Minecraft，真的是太不稳定！了！\n经常出现玩着玩着掉线了，去看Minecraft服务器没有任何毛病，看用来加速的阿里云服务器，也没有任何异常，但是直连Minecraft服务器是可以的，所以问题绝壁出在加速服务器上\n重启Nginx，连不上，重启服务器，还是连不上，最后过了几分钟，自己连上了。很任性有没有，如此的情况出了几次实在是忍受不了了，于是在想别的办法，想到一个叫frp的软件，之前用过来做内网穿透，同样也是转发流量的道理嘛，就两边装了试试发现，是真的好用啊，甚至感觉延迟更低了，也没有掉线过\n\n安装过程来介绍一下\n<!---more--->\n其实也没什么新的东西，就是分别在服务器和加速服务器安装frp，然后配置运行就可以了\n\n# 在Minecraft服务器上安装和配置frp客户端(frpc)\n\n- 下载并解压frp\n  \n    可以去[release页面](\nhttps://github.com/fatedier/frp/releases/latest)找到最新版的下载链接然后替换下面的链接\n\n    ```bash\n    cd ~\n    wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz\n    tar -xvf frp.tar.gz\n    ```\n- 到frp目录下,复制文件到系统里（以管理员身份运行）\n    ```bash\n    cd frp\n    cp frpc /usr/local/bin/frpc\n    mkdir /etc/frp\n    cp frpc.ini /etc/frp/frpc.ini\n    ```\n- 编写frpc的配置文件：`frpc.ini`\n    ```bash\n    nano /etc/frp/frpc.ini\n    # 内容如下\n    [common]\n    server_addr = 加速服务器的IP或域名\n    server_port = 7000\n    login_fail_exit\t= false  #0.11新功能：登录远程服务器失败不退出，30s自动重试\n    #protocol = kcp\n\n    [mc]\n    type = tcp\n    local_ip = 127.0.0.1\n    local_port = 25565\n    remote_port = 25565\n\n    [mc-udp]\n    type = udp\n    local_ip = 127.0.0.1\n    local_port = 25565\n    remote_port = 25565\n    ```\n    我也不知道开启udp的必要性，但是经过实测只开tcp并登陆不进游戏\n\n- 编写 frp service 文件，把frpc加入系统服务，这样方便管理\n    ```bash\n    nano /usr/lib/systemd/system/frpc.service\n    # 内容如下\n    [Unit]\n    Description=frpc\n    After=network.target\n\n    [Service]\n    TimeoutStartSec=30\n    ExecStart=/usr/local/bin/frpc -c /etc/frp/frpc.ini\n    ExecStop=/bin/kill $MAINPID\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n- 设置文件权限，启动 frp 并设置开机启动\n    ```bash\n    chmod 754 /usr/lib/systemd/system/frpc.service\n    systemctl enable frpc\n    ```\n\n    好了frp客户端的操作先到这里，等下装好frp服务端并运行后再<a id=\"back\" />回来这里，开启客户端：\n    ```bash\n    systemctl start frpc\n    systemctl status frpc\n    ```\n\n# 在加速服务器上安装frp服务端\n\n- 还是一样，先下载frp，再解压\n    ```bash\n    cd ~\n    wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz\n    tar -xvf frp.tar.gz\n    ```\n- 到frp目录下,复制文件到系统里（这次是frps了）\n    ```bash\n    cd frp\n    cp frps /usr/local/bin/frps\n    mkdir /etc/frp\n    cp frps.ini /etc/frp/frps.ini\n    ```\n- 编写frps的配置文件：`frps.ini`\n    ```bash\n    nano /etc/frp/frps.ini\n    # 内容如下\n    [common]\n    bind_port = 7000\n    ```\n    就是这么简单，记得去防火墙允许7000端口\n- 加入系统服务\n    ```bash\n    nano /usr/lib/systemd/system/frps.service\n    # 内容如下\n    [Unit]\n    Description=frps\n    After=network.target\n\n    [Service]\n    TimeoutStartSec=30\n    ExecStart=/usr/local/bin/frps -c /etc/frp/frps.ini\n    ExecStop=/bin/kill $MAINPID\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n    保存退出，设置权限，开机启动\n    ```bash\n    chmod 754 /usr/lib/systemd/system/frps.service\n    systemctl enable frps\n    systemctl start frps\n    systemctl status frps\n    ```\n    现在可以[回去](#back)启动客户端了\n<br />\n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完成了~最后一句话是显示服务运行状态的,当里面显示绿色的`active`就表示程序正常运行了\n客户端那边也是，如果出问题了显示红色的`dead`，那么认真看看系统日志,是不是配置文件不对什么的，然后再`systemctl restart frpc`(s),看`status`，多错几次还是就OK了。\n\n如果你照着我的教程做了，在任何一步出了问题都欢迎在评论里告诉我，看到了一定回复。\n>ftp项目地址：https://github.com/fatedier/frp\n它能做的不止转发端口流量这么简单，如果你愿意，看看它的中文文档，会有很多收获的","slug":"frp-for-mc","published":1,"updated":"2019-09-02T07:25:55.088Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck023sdlt00010guyosgsfdaw","content":"<blockquote>\n<p>前情提要：之前用Nginx反向代理的功能来加速Minecraft，真的是太不稳定！了！<br>经常出现玩着玩着掉线了，去看Minecraft服务器没有任何毛病，看用来加速的阿里云服务器，也没有任何异常，但是直连Minecraft服务器是可以的，所以问题绝壁出在加速服务器上<br>重启Nginx，连不上，重启服务器，还是连不上，最后过了几分钟，自己连上了。很任性有没有，如此的情况出了几次实在是忍受不了了，于是在想别的办法，想到一个叫frp的软件，之前用过来做内网穿透，同样也是转发流量的道理嘛，就两边装了试试发现，是真的好用啊，甚至感觉延迟更低了，也没有掉线过</p>\n</blockquote>\n<p>安装过程来介绍一下<br><a id=\"more\"></a><br>其实也没什么新的东西，就是分别在服务器和加速服务器安装frp，然后配置运行就可以了</p>\n<h1 id=\"在Minecraft服务器上安装和配置frp客户端-frpc\"><a href=\"#在Minecraft服务器上安装和配置frp客户端-frpc\" class=\"headerlink\" title=\"在Minecraft服务器上安装和配置frp客户端(frpc)\"></a>在Minecraft服务器上安装和配置frp客户端(frpc)</h1><ul>\n<li><p>下载并解压frp</p>\n<p>  可以去<a href=\"https://github.com/fatedier/frp/releases/latest\" target=\"_blank\" rel=\"noopener\">release页面</a>找到最新版的下载链接然后替换下面的链接</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz</span><br><span class=\"line\">tar -xvf frp.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到frp目录下,复制文件到系统里（以管理员身份运行）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> frp</span><br><span class=\"line\">cp frpc /usr/<span class=\"built_in\">local</span>/bin/frpc</span><br><span class=\"line\">mkdir /etc/frp</span><br><span class=\"line\">cp frpc.ini /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写frpc的配置文件：<code>frpc.ini</code></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/frp/frpc.ini</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = 加速服务器的IP或域名</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\">login_fail_exit\t= <span class=\"literal\">false</span>  <span class=\"comment\">#0.11新功能：登录远程服务器失败不退出，30s自动重试</span></span><br><span class=\"line\"><span class=\"comment\">#protocol = kcp</span></span><br><span class=\"line\"></span><br><span class=\"line\">[mc]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = tcp</span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 25565</span><br><span class=\"line\">remote_port = 25565</span><br><span class=\"line\"></span><br><span class=\"line\">[mc-udp]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = udp</span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 25565</span><br><span class=\"line\">remote_port = 25565</span><br></pre></td></tr></table></figure>\n<p>  我也不知道开启udp的必要性，但是经过实测只开tcp并登陆不进游戏</p>\n</li>\n<li><p>编写 frp service 文件，把frpc加入系统服务，这样方便管理</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /usr/lib/systemd/system/frpc.service</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=frpc</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">TimeoutStartSec=30</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/frpc -c /etc/frp/frpc.ini</span><br><span class=\"line\">ExecStop=/bin/<span class=\"built_in\">kill</span> <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置文件权限，启动 frp 并设置开机启动</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 754 /usr/lib/systemd/system/frpc.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> frpc</span><br></pre></td></tr></table></figure>\n<p>  好了frp客户端的操作先到这里，等下装好frp服务端并运行后再<a id=\"back\">回来这里，开启客户端：</a></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start frpc</span><br><span class=\"line\">systemctl status frpc</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"在加速服务器上安装frp服务端\"><a href=\"#在加速服务器上安装frp服务端\" class=\"headerlink\" title=\"在加速服务器上安装frp服务端\"></a>在加速服务器上安装frp服务端</h1><ul>\n<li><p>还是一样，先下载frp，再解压</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz</span><br><span class=\"line\">tar -xvf frp.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到frp目录下,复制文件到系统里（这次是frps了）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> frp</span><br><span class=\"line\">cp frps /usr/<span class=\"built_in\">local</span>/bin/frps</span><br><span class=\"line\">mkdir /etc/frp</span><br><span class=\"line\">cp frps.ini /etc/frp/frps.ini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写frps的配置文件：<code>frps.ini</code></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/frp/frps.ini</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[common]</span><br><span class=\"line\">bind_port = 7000</span><br></pre></td></tr></table></figure>\n<p>  就是这么简单，记得去防火墙允许7000端口</p>\n</li>\n<li><p>加入系统服务</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /usr/lib/systemd/system/frps.service</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=frps</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">TimeoutStartSec=30</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/frps -c /etc/frp/frps.ini</span><br><span class=\"line\">ExecStop=/bin/<span class=\"built_in\">kill</span> <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>  保存退出，设置权限，开机启动</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 754 /usr/lib/systemd/system/frps.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> frps</span><br><span class=\"line\">systemctl start frps</span><br><span class=\"line\">systemctl status frps</span><br></pre></td></tr></table></figure>\n<p>  现在可以<a href=\"#back\">回去</a>启动客户端了<br><br></p>\n</li>\n</ul>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完成了~最后一句话是显示服务运行状态的,当里面显示绿色的<code>active</code>就表示程序正常运行了<br>客户端那边也是，如果出问题了显示红色的<code>dead</code>，那么认真看看系统日志,是不是配置文件不对什么的，然后再<code>systemctl restart frpc</code>(s),看<code>status</code>，多错几次还是就OK了。</p>\n<p>如果你照着我的教程做了，在任何一步出了问题都欢迎在评论里告诉我，看到了一定回复。</p>\n<blockquote>\n<p>ftp项目地址：<a href=\"https://github.com/fatedier/frp\" target=\"_blank\" rel=\"noopener\">https://github.com/fatedier/frp</a><br>它能做的不止转发端口流量这么简单，如果你愿意，看看它的中文文档，会有很多收获的</p>\n</blockquote>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n"}},"excerpt":"<blockquote>\n<p>前情提要：之前用Nginx反向代理的功能来加速Minecraft，真的是太不稳定！了！<br>经常出现玩着玩着掉线了，去看Minecraft服务器没有任何毛病，看用来加速的阿里云服务器，也没有任何异常，但是直连Minecraft服务器是可以的，所以问题绝壁出在加速服务器上<br>重启Nginx，连不上，重启服务器，还是连不上，最后过了几分钟，自己连上了。很任性有没有，如此的情况出了几次实在是忍受不了了，于是在想别的办法，想到一个叫frp的软件，之前用过来做内网穿透，同样也是转发流量的道理嘛，就两边装了试试发现，是真的好用啊，甚至感觉延迟更低了，也没有掉线过</p>\n</blockquote>\n<p>安装过程来介绍一下<br>","more":"<br>其实也没什么新的东西，就是分别在服务器和加速服务器安装frp，然后配置运行就可以了</p>\n<h1 id=\"在Minecraft服务器上安装和配置frp客户端-frpc\"><a href=\"#在Minecraft服务器上安装和配置frp客户端-frpc\" class=\"headerlink\" title=\"在Minecraft服务器上安装和配置frp客户端(frpc)\"></a>在Minecraft服务器上安装和配置frp客户端(frpc)</h1><ul>\n<li><p>下载并解压frp</p>\n<p>  可以去<a href=\"https://github.com/fatedier/frp/releases/latest\" target=\"_blank\" rel=\"noopener\">release页面</a>找到最新版的下载链接然后替换下面的链接</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz</span><br><span class=\"line\">tar -xvf frp.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到frp目录下,复制文件到系统里（以管理员身份运行）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> frp</span><br><span class=\"line\">cp frpc /usr/<span class=\"built_in\">local</span>/bin/frpc</span><br><span class=\"line\">mkdir /etc/frp</span><br><span class=\"line\">cp frpc.ini /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写frpc的配置文件：<code>frpc.ini</code></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/frp/frpc.ini</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = 加速服务器的IP或域名</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\">login_fail_exit\t= <span class=\"literal\">false</span>  <span class=\"comment\">#0.11新功能：登录远程服务器失败不退出，30s自动重试</span></span><br><span class=\"line\"><span class=\"comment\">#protocol = kcp</span></span><br><span class=\"line\"></span><br><span class=\"line\">[mc]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = tcp</span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 25565</span><br><span class=\"line\">remote_port = 25565</span><br><span class=\"line\"></span><br><span class=\"line\">[mc-udp]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = udp</span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">local_port = 25565</span><br><span class=\"line\">remote_port = 25565</span><br></pre></td></tr></table></figure>\n<p>  我也不知道开启udp的必要性，但是经过实测只开tcp并登陆不进游戏</p>\n</li>\n<li><p>编写 frp service 文件，把frpc加入系统服务，这样方便管理</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /usr/lib/systemd/system/frpc.service</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=frpc</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">TimeoutStartSec=30</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/frpc -c /etc/frp/frpc.ini</span><br><span class=\"line\">ExecStop=/bin/<span class=\"built_in\">kill</span> <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置文件权限，启动 frp 并设置开机启动</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 754 /usr/lib/systemd/system/frpc.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> frpc</span><br></pre></td></tr></table></figure>\n<p>  好了frp客户端的操作先到这里，等下装好frp服务端并运行后再<a id=\"back\">回来这里，开启客户端：</a></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start frpc</span><br><span class=\"line\">systemctl status frpc</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h1 id=\"在加速服务器上安装frp服务端\"><a href=\"#在加速服务器上安装frp服务端\" class=\"headerlink\" title=\"在加速服务器上安装frp服务端\"></a>在加速服务器上安装frp服务端</h1><ul>\n<li><p>还是一样，先下载frp，再解压</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gz -O frp.tar.gz</span><br><span class=\"line\">tar -xvf frp.tar.gz</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>到frp目录下,复制文件到系统里（这次是frps了）</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> frp</span><br><span class=\"line\">cp frps /usr/<span class=\"built_in\">local</span>/bin/frps</span><br><span class=\"line\">mkdir /etc/frp</span><br><span class=\"line\">cp frps.ini /etc/frp/frps.ini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写frps的配置文件：<code>frps.ini</code></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/frp/frps.ini</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[common]</span><br><span class=\"line\">bind_port = 7000</span><br></pre></td></tr></table></figure>\n<p>  就是这么简单，记得去防火墙允许7000端口</p>\n</li>\n<li><p>加入系统服务</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /usr/lib/systemd/system/frps.service</span><br><span class=\"line\"><span class=\"comment\"># 内容如下</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=frps</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">TimeoutStartSec=30</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/frps -c /etc/frp/frps.ini</span><br><span class=\"line\">ExecStop=/bin/<span class=\"built_in\">kill</span> <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>  保存退出，设置权限，开机启动</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 754 /usr/lib/systemd/system/frps.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> frps</span><br><span class=\"line\">systemctl start frps</span><br><span class=\"line\">systemctl status frps</span><br></pre></td></tr></table></figure>\n<p>  现在可以<a href=\"#back\">回去</a>启动客户端了<br><br></p>\n</li>\n</ul>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;完成了~最后一句话是显示服务运行状态的,当里面显示绿色的<code>active</code>就表示程序正常运行了<br>客户端那边也是，如果出问题了显示红色的<code>dead</code>，那么认真看看系统日志,是不是配置文件不对什么的，然后再<code>systemctl restart frpc</code>(s),看<code>status</code>，多错几次还是就OK了。</p>\n<p>如果你照着我的教程做了，在任何一步出了问题都欢迎在评论里告诉我，看到了一定回复。</p>\n<blockquote>\n<p>ftp项目地址：<a href=\"https://github.com/fatedier/frp\" target=\"_blank\" rel=\"noopener\">https://github.com/fatedier/frp</a><br>它能做的不止转发端口流量这么简单，如果你愿意，看看它的中文文档，会有很多收获的</p>\n</blockquote>"},{"title":"MacOS Mojave Hackintosh for Lenovo Yoga710 [clover]","date":"2019-03-02T13:09:51.000Z","_content":"I've been attempt making my laptop work with mojave for like one month, and bought a DW1820 wireless card to fix network problem.  Also there's a lot of problem like brightness, bluetooth, app store, etc. It's all work now.\n<!--more-->\nThe most tricky part is to drive DW1820(What? I bought it for hackintosh!), I do found kext driver for my card from RehabMan, but seems not work at all. Every time I boot up I see this![](error1.jpg)\nMaybe something wrong with Bluetooth since it's connected via USB. But I fixed it by just delete `BrcmPatchRAM2.kext` and `BrcmFirmwareData.kext`, and add the address of bluetooth's USB port to `FakePCIID.kext`, it workd fine then. no  need of other kext driver.\n\nHere's my hardware:\n> Processor: Intel Core i5-7200U\n> Graphics: Intel HD Graphics 620, NVDIA Geforce 940MX\n> Memory: 4096 MB, 2133 MHz, DDR4, 1/1 slots occupied, Single-Channel\n> Display: 14 inch 16:9, 1920 x 1080 pixel 157 PPI, Multitouch\n> Mainboard: Intel Kaby Lake-U Premium PCH\n\nWhat works well:\n> Graphics, Brightness(and save brightness)\n> Keyboard & Trackpad\n> Audio\n> Battery\n> Airprot\n> Bluetooth\n> HDMI output with audio\n> Headphone jack include microphone\n\nWhat is not working:\n> NVDIA Geforce 940MX\n> Touch screen\n> Sleep function(just about work, it wake immediately after sleep)\n> SD card reader\n\nSomething you need attention:\n> brightness can be adjust at setting, you can add a key map yourself.\n> You can enable HIDPI https://github.com/xzhih/one-key-hidpi\n\nI'm jus put the clover file of myself, hope there's help for you. As for installing detals, it's alot outside.\n\nDownload link: [clover file of yoga 710](CLOVER.zip)","source":"_posts/hackintosh-of-yoga710.md","raw":"---\ntitle: MacOS Mojave Hackintosh for Lenovo Yoga710 [clover]\ndate: 2019-03-02 21:09:51\ntags:\n---\nI've been attempt making my laptop work with mojave for like one month, and bought a DW1820 wireless card to fix network problem.  Also there's a lot of problem like brightness, bluetooth, app store, etc. It's all work now.\n<!--more-->\nThe most tricky part is to drive DW1820(What? I bought it for hackintosh!), I do found kext driver for my card from RehabMan, but seems not work at all. Every time I boot up I see this![](error1.jpg)\nMaybe something wrong with Bluetooth since it's connected via USB. But I fixed it by just delete `BrcmPatchRAM2.kext` and `BrcmFirmwareData.kext`, and add the address of bluetooth's USB port to `FakePCIID.kext`, it workd fine then. no  need of other kext driver.\n\nHere's my hardware:\n> Processor: Intel Core i5-7200U\n> Graphics: Intel HD Graphics 620, NVDIA Geforce 940MX\n> Memory: 4096 MB, 2133 MHz, DDR4, 1/1 slots occupied, Single-Channel\n> Display: 14 inch 16:9, 1920 x 1080 pixel 157 PPI, Multitouch\n> Mainboard: Intel Kaby Lake-U Premium PCH\n\nWhat works well:\n> Graphics, Brightness(and save brightness)\n> Keyboard & Trackpad\n> Audio\n> Battery\n> Airprot\n> Bluetooth\n> HDMI output with audio\n> Headphone jack include microphone\n\nWhat is not working:\n> NVDIA Geforce 940MX\n> Touch screen\n> Sleep function(just about work, it wake immediately after sleep)\n> SD card reader\n\nSomething you need attention:\n> brightness can be adjust at setting, you can add a key map yourself.\n> You can enable HIDPI https://github.com/xzhih/one-key-hidpi\n\nI'm jus put the clover file of myself, hope there's help for you. As for installing detals, it's alot outside.\n\nDownload link: [clover file of yoga 710](CLOVER.zip)","slug":"hackintosh-of-yoga710","published":1,"updated":"2019-09-15T08:07:22.762Z","_id":"ck023sdm800030guy2r5inupc","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I’ve been attempt making my laptop work with mojave for like one month, and bought a DW1820 wireless card to fix network problem.  Also there’s a lot of problem like brightness, bluetooth, app store, etc. It’s all work now.<br><a id=\"more\"></a><br>The most tricky part is to drive DW1820(What? I bought it for hackintosh!), I do found kext driver for my card from RehabMan, but seems not work at all. Every time I boot up I see this<img src=\"error1.jpg\" alt><br>Maybe something wrong with Bluetooth since it’s connected via USB. But I fixed it by just delete <code>BrcmPatchRAM2.kext</code> and <code>BrcmFirmwareData.kext</code>, and add the address of bluetooth’s USB port to <code>FakePCIID.kext</code>, it workd fine then. no  need of other kext driver.</p>\n<p>Here’s my hardware:</p>\n<blockquote>\n<p>Processor: Intel Core i5-7200U<br>Graphics: Intel HD Graphics 620, NVDIA Geforce 940MX<br>Memory: 4096 MB, 2133 MHz, DDR4, 1/1 slots occupied, Single-Channel<br>Display: 14 inch 16:9, 1920 x 1080 pixel 157 PPI, Multitouch<br>Mainboard: Intel Kaby Lake-U Premium PCH</p>\n</blockquote>\n<p>What works well:</p>\n<blockquote>\n<p>Graphics, Brightness(and save brightness)<br>Keyboard &amp; Trackpad<br>Audio<br>Battery<br>Airprot<br>Bluetooth<br>HDMI output with audio<br>Headphone jack include microphone</p>\n</blockquote>\n<p>What is not working:</p>\n<blockquote>\n<p>NVDIA Geforce 940MX<br>Touch screen<br>Sleep function(just about work, it wake immediately after sleep)<br>SD card reader</p>\n</blockquote>\n<p>Something you need attention:</p>\n<blockquote>\n<p>brightness can be adjust at setting, you can add a key map yourself.<br>You can enable HIDPI <a href=\"https://github.com/xzhih/one-key-hidpi\" target=\"_blank\" rel=\"noopener\">https://github.com/xzhih/one-key-hidpi</a></p>\n</blockquote>\n<p>I’m jus put the clover file of myself, hope there’s help for you. As for installing detals, it’s alot outside.</p>\n<p>Download link: <a href=\"CLOVER.zip\">clover file of yoga 710</a></p>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"<p>I’ve been attempt making my laptop work with mojave for like one month, and bought a DW1820 wireless card to fix network problem.  Also there’s a lot of problem like brightness, bluetooth, app store, etc. It’s all work now.<br>","more":"<br>The most tricky part is to drive DW1820(What? I bought it for hackintosh!), I do found kext driver for my card from RehabMan, but seems not work at all. Every time I boot up I see this<img src=\"error1.jpg\" alt><br>Maybe something wrong with Bluetooth since it’s connected via USB. But I fixed it by just delete <code>BrcmPatchRAM2.kext</code> and <code>BrcmFirmwareData.kext</code>, and add the address of bluetooth’s USB port to <code>FakePCIID.kext</code>, it workd fine then. no  need of other kext driver.</p>\n<p>Here’s my hardware:</p>\n<blockquote>\n<p>Processor: Intel Core i5-7200U<br>Graphics: Intel HD Graphics 620, NVDIA Geforce 940MX<br>Memory: 4096 MB, 2133 MHz, DDR4, 1/1 slots occupied, Single-Channel<br>Display: 14 inch 16:9, 1920 x 1080 pixel 157 PPI, Multitouch<br>Mainboard: Intel Kaby Lake-U Premium PCH</p>\n</blockquote>\n<p>What works well:</p>\n<blockquote>\n<p>Graphics, Brightness(and save brightness)<br>Keyboard &amp; Trackpad<br>Audio<br>Battery<br>Airprot<br>Bluetooth<br>HDMI output with audio<br>Headphone jack include microphone</p>\n</blockquote>\n<p>What is not working:</p>\n<blockquote>\n<p>NVDIA Geforce 940MX<br>Touch screen<br>Sleep function(just about work, it wake immediately after sleep)<br>SD card reader</p>\n</blockquote>\n<p>Something you need attention:</p>\n<blockquote>\n<p>brightness can be adjust at setting, you can add a key map yourself.<br>You can enable HIDPI <a href=\"https://github.com/xzhih/one-key-hidpi\" target=\"_blank\" rel=\"noopener\">https://github.com/xzhih/one-key-hidpi</a></p>\n</blockquote>\n<p>I’m jus put the clover file of myself, hope there’s help for you. As for installing detals, it’s alot outside.</p>\n<p>Download link: <a href=\"CLOVER.zip\">clover file of yoga 710</a></p>"},{"title":"hexo new后自动打开你喜爱的编辑器","date":"2019-09-02T07:16:44.000Z","_content":"\n> 作为一个用hexo写博客的bloger，每次写文章都是件麻烦事：对我来说，要先用Code打开Hexo工作区，然后`Ctrl+``打开终端先pull一下，再开始`hexo new post something`，接下来去目录找到_posts，点进去打开刚创建的md，然后，才开始写文章。\n\n这篇post就是解决众多繁杂步骤中的一环：找md文件然后打开的过程。\n\n<!---more---->\n\n很简单，要做的就是写个脚本让`NodeJS`知道我什么时候新建了post，然后脚本帮我打开刚新建好的post.md，最主要的是，可以用自己喜爱的编辑器，比如说我用的是[Typora](https://typora.io/)。\n\n1. 在你的hexo目录下新建一个文件夹名叫`scripts`（你的hexo目录就是你执行hexo命令的目录）\n\n\t```bash\n\tmkdir scripts\n\tcd scripts\n\t```\n\n2. 在`scripts`文件夹里新建一个脚本文件叫做`AutoOpenEditor.js`（也可以是其他名字），内容如下：\n\n   ```js\n   let spawn = require('hexo-util/lib/spawn');\n   \n   hexo.on('new', (data) => {\n     spawn('C:/\\Program Files/\\Typora/\\Typora.exe', [data.path]);\n   });\n   ```\n\n   这几句话的大概意思就是，在检测到执行`hexo new`命令后，触发这个脚本，然后脚本执行`C:\\Program Files\\Typora\\Typora.exe [文件路径]`这个命令，`spawn()`里就是要执行的命令和参数，有斜杠的话需要用转义符。\n\n   这里我用的是Typora编辑器，你也可以让它用VScode来打开：\n\n   ```js\n   let spawn = require('hexo-util/lib/spawn');\n   \n   hexo.on('new', (data) => {\n     spawn('code','-r',[data.path]);\n   });\n   ```\n\n   这是针对在VScode里已经打开hexo目录工作区的情况，`-r`让code不打开新窗口，而是作为标签页打开。\n\n这样就可以了，以后每次`hexo new post`，都会在新建后帮你打开编辑器，虽然只是少了一小环，但是让你写博客更有动力了不是。","source":"_posts/open-your-farvorite-editor-after-new-hexo-post.md","raw":"---\ntitle: hexo new后自动打开你喜爱的编辑器\ndate: 2019-09-02 15:16:44\ntags: hexo_tricks\n---\n\n> 作为一个用hexo写博客的bloger，每次写文章都是件麻烦事：对我来说，要先用Code打开Hexo工作区，然后`Ctrl+``打开终端先pull一下，再开始`hexo new post something`，接下来去目录找到_posts，点进去打开刚创建的md，然后，才开始写文章。\n\n这篇post就是解决众多繁杂步骤中的一环：找md文件然后打开的过程。\n\n<!---more---->\n\n很简单，要做的就是写个脚本让`NodeJS`知道我什么时候新建了post，然后脚本帮我打开刚新建好的post.md，最主要的是，可以用自己喜爱的编辑器，比如说我用的是[Typora](https://typora.io/)。\n\n1. 在你的hexo目录下新建一个文件夹名叫`scripts`（你的hexo目录就是你执行hexo命令的目录）\n\n\t```bash\n\tmkdir scripts\n\tcd scripts\n\t```\n\n2. 在`scripts`文件夹里新建一个脚本文件叫做`AutoOpenEditor.js`（也可以是其他名字），内容如下：\n\n   ```js\n   let spawn = require('hexo-util/lib/spawn');\n   \n   hexo.on('new', (data) => {\n     spawn('C:/\\Program Files/\\Typora/\\Typora.exe', [data.path]);\n   });\n   ```\n\n   这几句话的大概意思就是，在检测到执行`hexo new`命令后，触发这个脚本，然后脚本执行`C:\\Program Files\\Typora\\Typora.exe [文件路径]`这个命令，`spawn()`里就是要执行的命令和参数，有斜杠的话需要用转义符。\n\n   这里我用的是Typora编辑器，你也可以让它用VScode来打开：\n\n   ```js\n   let spawn = require('hexo-util/lib/spawn');\n   \n   hexo.on('new', (data) => {\n     spawn('code','-r',[data.path]);\n   });\n   ```\n\n   这是针对在VScode里已经打开hexo目录工作区的情况，`-r`让code不打开新窗口，而是作为标签页打开。\n\n这样就可以了，以后每次`hexo new post`，都会在新建后帮你打开编辑器，虽然只是少了一小环，但是让你写博客更有动力了不是。","slug":"open-your-farvorite-editor-after-new-hexo-post","published":1,"updated":"2019-09-04T02:38:59.799Z","_id":"ck023sdml00040guyydj88gvv","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>作为一个用hexo写博客的bloger，每次写文章都是件麻烦事：对我来说，要先用Code打开Hexo工作区，然后<code>Ctrl+`</code>打开终端先pull一下，再开始<code>hexo new post something</code>，接下来去目录找到_posts，点进去打开刚创建的md，然后，才开始写文章。</p>\n</blockquote>\n<p>这篇post就是解决众多繁杂步骤中的一环：找md文件然后打开的过程。</p>\n<a id=\"more\"></a>\n<p>很简单，要做的就是写个脚本让<code>NodeJS</code>知道我什么时候新建了post，然后脚本帮我打开刚新建好的post.md，最主要的是，可以用自己喜爱的编辑器，比如说我用的是<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a>。</p>\n<ol>\n<li><p>在你的hexo目录下新建一个文件夹名叫<code>scripts</code>（你的hexo目录就是你执行hexo命令的目录）</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir scripts</span><br><span class=\"line\"><span class=\"built_in\">cd</span> scripts</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在<code>scripts</code>文件夹里新建一个脚本文件叫做<code>AutoOpenEditor.js</code>（也可以是其他名字），内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> spawn = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-util/lib/spawn'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, (data) =&gt; &#123;</span><br><span class=\"line\">  spawn(<span class=\"string\">'C:/\\Program Files/\\Typora/\\Typora.exe'</span>, [data.path]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这几句话的大概意思就是，在检测到执行<code>hexo new</code>命令后，触发这个脚本，然后脚本执行<code>C:\\Program Files\\Typora\\Typora.exe [文件路径]</code>这个命令，<code>spawn()</code>里就是要执行的命令和参数，有斜杠的话需要用转义符。</p>\n<p>这里我用的是Typora编辑器，你也可以让它用VScode来打开：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> spawn = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-util/lib/spawn'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, (data) =&gt; &#123;</span><br><span class=\"line\">  spawn(<span class=\"string\">'code'</span>,<span class=\"string\">'-r'</span>,[data.path]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这是针对在VScode里已经打开hexo目录工作区的情况，<code>-r</code>让code不打开新窗口，而是作为标签页打开。</p>\n</li>\n</ol>\n<p>这样就可以了，以后每次<code>hexo new post</code>，都会在新建后帮你打开编辑器，虽然只是少了一小环，但是让你写博客更有动力了不是。</p>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"<blockquote>\n<p>作为一个用hexo写博客的bloger，每次写文章都是件麻烦事：对我来说，要先用Code打开Hexo工作区，然后<code>Ctrl+`</code>打开终端先pull一下，再开始<code>hexo new post something</code>，接下来去目录找到_posts，点进去打开刚创建的md，然后，才开始写文章。</p>\n</blockquote>\n<p>这篇post就是解决众多繁杂步骤中的一环：找md文件然后打开的过程。</p>","more":"<p>很简单，要做的就是写个脚本让<code>NodeJS</code>知道我什么时候新建了post，然后脚本帮我打开刚新建好的post.md，最主要的是，可以用自己喜爱的编辑器，比如说我用的是<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">Typora</a>。</p>\n<ol>\n<li><p>在你的hexo目录下新建一个文件夹名叫<code>scripts</code>（你的hexo目录就是你执行hexo命令的目录）</p>\n <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir scripts</span><br><span class=\"line\"><span class=\"built_in\">cd</span> scripts</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在<code>scripts</code>文件夹里新建一个脚本文件叫做<code>AutoOpenEditor.js</code>（也可以是其他名字），内容如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> spawn = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-util/lib/spawn'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, (data) =&gt; &#123;</span><br><span class=\"line\">  spawn(<span class=\"string\">'C:/\\Program Files/\\Typora/\\Typora.exe'</span>, [data.path]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这几句话的大概意思就是，在检测到执行<code>hexo new</code>命令后，触发这个脚本，然后脚本执行<code>C:\\Program Files\\Typora\\Typora.exe [文件路径]</code>这个命令，<code>spawn()</code>里就是要执行的命令和参数，有斜杠的话需要用转义符。</p>\n<p>这里我用的是Typora编辑器，你也可以让它用VScode来打开：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> spawn = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-util/lib/spawn'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.on(<span class=\"string\">'new'</span>, (data) =&gt; &#123;</span><br><span class=\"line\">  spawn(<span class=\"string\">'code'</span>,<span class=\"string\">'-r'</span>,[data.path]);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这是针对在VScode里已经打开hexo目录工作区的情况，<code>-r</code>让code不打开新窗口，而是作为标签页打开。</p>\n</li>\n</ol>\n<p>这样就可以了，以后每次<code>hexo new post</code>，都会在新建后帮你打开编辑器，虽然只是少了一小环，但是让你写博客更有动力了不是。</p>"},{"title":"装了armbian的Orange pi折腾记录(外接HDMI屏幕分辨率调节及屏幕旋转)","date":"2018-10-08T15:26:00.000Z","_content":"\n* ### Armbian orange pi 调节分辨率\n\n    ```bash\n    h3disp -m 1080p60 -c 1\n    ```\n\n* ### 动态开启/关闭HDMI输出\n    ```bash\n    sudo su\n    cd /sys/kernel/debug/dispdbg/\n    echo \"switch\" > command\n    echo \"disp\" > name\n    echo \"0 10\" > param\n    echo \"1\" > start\n    ```\n    把parm部分的0改成4就是打开HDMI输出，第二个数字10代表输出分辨率为1080p60，换成5则代表720p60。\n<!--more-->\n    全部模式列表：\n    ```bash\n    0 480i\n    1 576i\n    2 480p\n    3 576p\n    4 720p 50Hz\n    5 720p 60Hz\n    6 1080i 50 Hz\n    7 1080i 60 Hz\n    8 1080p 24 Hz\n    9 1080p 50 Hz\n    10 1080p 60 Hz\n    ```\n    各种详细设置:[Fine-Tuning](https://docs.armbian.com/User-Guide_Fine-Tuning/)\n\n* ### 屏幕旋转\n    编辑配置文件：\n    ```bash\n    sudo nano /etc/X11/xorg.conf.d/01-armbian-defaults.conf\n    ```\n    在末尾加入下面的代码:\n    ```bash\n    # Append\n    Section \"Device\"\n    Identifier \"default\"\n    Driver \"fbdev\"\n    Option \"Rotate\" \"CCW\"\n    EndSection\n    ```\n    保存后重启，重启后屏幕就旋转成竖的了。 你可以通过改变``CCW``到``CW``来改变旋转方向。\n___\n\n* ### python log用法\n    ```py\n    import logging\n    logging.basicConfig(filename='/root/screen.log', level=logging.INFO, format='%(asctime)s %(message)s', datefmt='[%Y-%m-%d %I:%M:%S %p]')\n    logging.info('hi')\n    ```\n    输出(文件：screen.log)：\n    ``[2018-10-08 09:36:36 PM] hi``\n    其他用法还有：\n    ```py\n    logging.debug(\"debug\") \n    logging.info(\"info\") \n    logging.warning(\"warning\") \n    logging.error(\"error\")\n    logging.critical(\"critical\")\n    ```\n    参照：https://docs.python.org/2/howto/logging.html\n\n    进程管理工具Supervisor:[管理Python](https://www.restran.net/2015/10/04/supervisord-tutorial/)\n\n> 习得以上知识所用的时间：230分钟","source":"_posts/orangepi折腾记录.md","raw":"---\ntitle: 装了armbian的Orange pi折腾记录(外接HDMI屏幕分辨率调节及屏幕旋转)\ndate: 2018-10-8 23:26:00\ntags: 各种Pi\n---\n\n* ### Armbian orange pi 调节分辨率\n\n    ```bash\n    h3disp -m 1080p60 -c 1\n    ```\n\n* ### 动态开启/关闭HDMI输出\n    ```bash\n    sudo su\n    cd /sys/kernel/debug/dispdbg/\n    echo \"switch\" > command\n    echo \"disp\" > name\n    echo \"0 10\" > param\n    echo \"1\" > start\n    ```\n    把parm部分的0改成4就是打开HDMI输出，第二个数字10代表输出分辨率为1080p60，换成5则代表720p60。\n<!--more-->\n    全部模式列表：\n    ```bash\n    0 480i\n    1 576i\n    2 480p\n    3 576p\n    4 720p 50Hz\n    5 720p 60Hz\n    6 1080i 50 Hz\n    7 1080i 60 Hz\n    8 1080p 24 Hz\n    9 1080p 50 Hz\n    10 1080p 60 Hz\n    ```\n    各种详细设置:[Fine-Tuning](https://docs.armbian.com/User-Guide_Fine-Tuning/)\n\n* ### 屏幕旋转\n    编辑配置文件：\n    ```bash\n    sudo nano /etc/X11/xorg.conf.d/01-armbian-defaults.conf\n    ```\n    在末尾加入下面的代码:\n    ```bash\n    # Append\n    Section \"Device\"\n    Identifier \"default\"\n    Driver \"fbdev\"\n    Option \"Rotate\" \"CCW\"\n    EndSection\n    ```\n    保存后重启，重启后屏幕就旋转成竖的了。 你可以通过改变``CCW``到``CW``来改变旋转方向。\n___\n\n* ### python log用法\n    ```py\n    import logging\n    logging.basicConfig(filename='/root/screen.log', level=logging.INFO, format='%(asctime)s %(message)s', datefmt='[%Y-%m-%d %I:%M:%S %p]')\n    logging.info('hi')\n    ```\n    输出(文件：screen.log)：\n    ``[2018-10-08 09:36:36 PM] hi``\n    其他用法还有：\n    ```py\n    logging.debug(\"debug\") \n    logging.info(\"info\") \n    logging.warning(\"warning\") \n    logging.error(\"error\")\n    logging.critical(\"critical\")\n    ```\n    参照：https://docs.python.org/2/howto/logging.html\n\n    进程管理工具Supervisor:[管理Python](https://www.restran.net/2015/10/04/supervisord-tutorial/)\n\n> 习得以上知识所用的时间：230分钟","slug":"orangepi折腾记录","published":1,"updated":"2019-06-24T16:02:13.675Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck023sdmq00050guyq93pvs5y","content":"<ul>\n<li><h3 id=\"Armbian-orange-pi-调节分辨率\"><a href=\"#Armbian-orange-pi-调节分辨率\" class=\"headerlink\" title=\"Armbian orange pi 调节分辨率\"></a>Armbian orange pi 调节分辨率</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h3disp -m 1080p60 -c 1</span><br></pre></td></tr></table></figure>\n</li>\n<li><h3 id=\"动态开启-关闭HDMI输出\"><a href=\"#动态开启-关闭HDMI输出\" class=\"headerlink\" title=\"动态开启/关闭HDMI输出\"></a>动态开启/关闭HDMI输出</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /sys/kernel/debug/dispdbg/</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"switch\"</span> &gt; <span class=\"built_in\">command</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"disp\"</span> &gt; name</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"0 10\"</span> &gt; param</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"1\"</span> &gt; start</span><br></pre></td></tr></table></figure>\n<p>  把parm部分的0改成4就是打开HDMI输出，第二个数字10代表输出分辨率为1080p60，换成5则代表720p60。</p>\n<a id=\"more\"></a>\n<p>  全部模式列表：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 480i</span><br><span class=\"line\">1 576i</span><br><span class=\"line\">2 480p</span><br><span class=\"line\">3 576p</span><br><span class=\"line\">4 720p 50Hz</span><br><span class=\"line\">5 720p 60Hz</span><br><span class=\"line\">6 1080i 50 Hz</span><br><span class=\"line\">7 1080i 60 Hz</span><br><span class=\"line\">8 1080p 24 Hz</span><br><span class=\"line\">9 1080p 50 Hz</span><br><span class=\"line\">10 1080p 60 Hz</span><br></pre></td></tr></table></figure>\n<p>  各种详细设置:<a href=\"https://docs.armbian.com/User-Guide_Fine-Tuning/\" target=\"_blank\" rel=\"noopener\">Fine-Tuning</a></p>\n</li>\n<li><h3 id=\"屏幕旋转\"><a href=\"#屏幕旋转\" class=\"headerlink\" title=\"屏幕旋转\"></a>屏幕旋转</h3><p>  编辑配置文件：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/X11/xorg.conf.d/01-armbian-defaults.conf</span><br></pre></td></tr></table></figure>\n<p>  在末尾加入下面的代码:</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Append</span></span><br><span class=\"line\">Section <span class=\"string\">\"Device\"</span></span><br><span class=\"line\">Identifier <span class=\"string\">\"default\"</span></span><br><span class=\"line\">Driver <span class=\"string\">\"fbdev\"</span></span><br><span class=\"line\">Option <span class=\"string\">\"Rotate\"</span> <span class=\"string\">\"CCW\"</span></span><br><span class=\"line\">EndSection</span><br></pre></td></tr></table></figure>\n<p>  保存后重启，重启后屏幕就旋转成竖的了。 你可以通过改变<code>CCW</code>到<code>CW</code>来改变旋转方向。</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><h3 id=\"python-log用法\"><a href=\"#python-log用法\" class=\"headerlink\" title=\"python log用法\"></a>python log用法</h3>  <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\">logging.basicConfig(filename=<span class=\"string\">'/root/screen.log'</span>, level=logging.INFO, format=<span class=\"string\">'%(asctime)s %(message)s'</span>, datefmt=<span class=\"string\">'[%Y-%m-%d %I:%M:%S %p]'</span>)</span><br><span class=\"line\">logging.info(<span class=\"string\">'hi'</span>)</span><br></pre></td></tr></table></figure>\n<p>  输出(文件：screen.log)：<br>  <code>[2018-10-08 09:36:36 PM] hi</code><br>  其他用法还有：</p>\n  <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logging.debug(<span class=\"string\">\"debug\"</span>) </span><br><span class=\"line\">logging.info(<span class=\"string\">\"info\"</span>) </span><br><span class=\"line\">logging.warning(<span class=\"string\">\"warning\"</span>) </span><br><span class=\"line\">logging.error(<span class=\"string\">\"error\"</span>)</span><br><span class=\"line\">logging.critical(<span class=\"string\">\"critical\"</span>)</span><br></pre></td></tr></table></figure>\n<p>  参照：<a href=\"https://docs.python.org/2/howto/logging.html\" target=\"_blank\" rel=\"noopener\">https://docs.python.org/2/howto/logging.html</a></p>\n<p>  进程管理工具Supervisor:<a href=\"https://www.restran.net/2015/10/04/supervisord-tutorial/\" target=\"_blank\" rel=\"noopener\">管理Python</a></p>\n</li>\n</ul>\n<blockquote>\n<p>习得以上知识所用的时间：230分钟</p>\n</blockquote>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n"}},"excerpt":"<ul>\n<li><h3 id=\"Armbian-orange-pi-调节分辨率\"><a href=\"#Armbian-orange-pi-调节分辨率\" class=\"headerlink\" title=\"Armbian orange pi 调节分辨率\"></a>Armbian orange pi 调节分辨率</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">h3disp -m 1080p60 -c 1</span><br></pre></td></tr></table></figure>\n</li>\n<li><h3 id=\"动态开启-关闭HDMI输出\"><a href=\"#动态开启-关闭HDMI输出\" class=\"headerlink\" title=\"动态开启/关闭HDMI输出\"></a>动态开启/关闭HDMI输出</h3>  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo su</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /sys/kernel/debug/dispdbg/</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"switch\"</span> &gt; <span class=\"built_in\">command</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"disp\"</span> &gt; name</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"0 10\"</span> &gt; param</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"1\"</span> &gt; start</span><br></pre></td></tr></table></figure>\n<p>  把parm部分的0改成4就是打开HDMI输出，第二个数字10代表输出分辨率为1080p60，换成5则代表720p60。</p>","more":"<p>  全部模式列表：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 480i</span><br><span class=\"line\">1 576i</span><br><span class=\"line\">2 480p</span><br><span class=\"line\">3 576p</span><br><span class=\"line\">4 720p 50Hz</span><br><span class=\"line\">5 720p 60Hz</span><br><span class=\"line\">6 1080i 50 Hz</span><br><span class=\"line\">7 1080i 60 Hz</span><br><span class=\"line\">8 1080p 24 Hz</span><br><span class=\"line\">9 1080p 50 Hz</span><br><span class=\"line\">10 1080p 60 Hz</span><br></pre></td></tr></table></figure>\n<p>  各种详细设置:<a href=\"https://docs.armbian.com/User-Guide_Fine-Tuning/\" target=\"_blank\" rel=\"noopener\">Fine-Tuning</a></p>\n</li>\n<li><h3 id=\"屏幕旋转\"><a href=\"#屏幕旋转\" class=\"headerlink\" title=\"屏幕旋转\"></a>屏幕旋转</h3><p>  编辑配置文件：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/X11/xorg.conf.d/01-armbian-defaults.conf</span><br></pre></td></tr></table></figure>\n<p>  在末尾加入下面的代码:</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Append</span></span><br><span class=\"line\">Section <span class=\"string\">\"Device\"</span></span><br><span class=\"line\">Identifier <span class=\"string\">\"default\"</span></span><br><span class=\"line\">Driver <span class=\"string\">\"fbdev\"</span></span><br><span class=\"line\">Option <span class=\"string\">\"Rotate\"</span> <span class=\"string\">\"CCW\"</span></span><br><span class=\"line\">EndSection</span><br></pre></td></tr></table></figure>\n<p>  保存后重启，重启后屏幕就旋转成竖的了。 你可以通过改变<code>CCW</code>到<code>CW</code>来改变旋转方向。</p>\n</li>\n</ul>\n<hr>\n<ul>\n<li><h3 id=\"python-log用法\"><a href=\"#python-log用法\" class=\"headerlink\" title=\"python log用法\"></a>python log用法</h3>  <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> logging</span><br><span class=\"line\">logging.basicConfig(filename=<span class=\"string\">'/root/screen.log'</span>, level=logging.INFO, format=<span class=\"string\">'%(asctime)s %(message)s'</span>, datefmt=<span class=\"string\">'[%Y-%m-%d %I:%M:%S %p]'</span>)</span><br><span class=\"line\">logging.info(<span class=\"string\">'hi'</span>)</span><br></pre></td></tr></table></figure>\n<p>  输出(文件：screen.log)：<br>  <code>[2018-10-08 09:36:36 PM] hi</code><br>  其他用法还有：</p>\n  <figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logging.debug(<span class=\"string\">\"debug\"</span>) </span><br><span class=\"line\">logging.info(<span class=\"string\">\"info\"</span>) </span><br><span class=\"line\">logging.warning(<span class=\"string\">\"warning\"</span>) </span><br><span class=\"line\">logging.error(<span class=\"string\">\"error\"</span>)</span><br><span class=\"line\">logging.critical(<span class=\"string\">\"critical\"</span>)</span><br></pre></td></tr></table></figure>\n<p>  参照：<a href=\"https://docs.python.org/2/howto/logging.html\" target=\"_blank\" rel=\"noopener\">https://docs.python.org/2/howto/logging.html</a></p>\n<p>  进程管理工具Supervisor:<a href=\"https://www.restran.net/2015/10/04/supervisord-tutorial/\" target=\"_blank\" rel=\"noopener\">管理Python</a></p>\n</li>\n</ul>\n<blockquote>\n<p>习得以上知识所用的时间：230分钟</p>\n</blockquote>"},{"title":"通过Nginx转发Minecraft服务器流量达到加速的目的(Nginx转发TCP)","date":"2018-10-21T08:25:01.000Z","_content":"阿里云学生机10块一个月挺便宜了，就是内存2G对于一个Minecraft服务器来说有点小\n而我还有个谷歌云服务器在台湾，配置不错内存也够，问题就是网络延迟太大\n把Minecraft服务器运行在那里实际玩下来发现延迟不能忍受\n从我的电脑Ping台湾服务器有250ms，Ping阿里云20ms，阿里云Ping台湾服务器，50ms\n用小学老师教我的加法一算发现，50+20小于250啊\n于是就有了标题这个想法\n<!--more-->\n对于流量转发除了SS和Frp其他我还真不知道（**去看我的[frp教程](/frp-for-mc/)吧，真的，Nginx反向代理太难用了**）\n\n网上查了可以用firewalld做端口转发，我试了把tcp和udp的25565端口都转发到台湾服务器\n没用，可能是原理不对\n\n再一查看到Nginx反向代理可以做这种事情\n大概就是编辑站点配置文件，在server{}里面加上\n\n```nginx\n    listen 25565;\n    location / {\n      # 代理的地址\n      proxy_pass http://35.xx.xx.23:25565;\n    }\n```\n\n我确实这样做了因为前面不加`http://`配置文件不让过，结果一试当然没有用\n\n# 正确的方法在这里\n\n后来找到了Nginx转发tcp的文章，总算是找对方向了\n我的Nginx版本1.14，默认是支持TCP流量转发的，只需要在**Nginx的**配置文件(Nginx.conf)里面加如下面几行就可以：\n\n```nginx\nstream {\n    server {\n        listen 25565;\n        proxy_pass 35.xx.xx.23:25565;\n    }\n}\n```\n\n加在events后面\n\n是的，就是这么简单，这篇文章能教你的已经结束了\n\n而我自己的折腾还在后面，因为我没有把前面listen 25565的站点删掉，没删掉！！\n导致我不管怎么改Nginx的配置都是说连不上\n折腾了一晚上+一小个下午共计两个小时，的人生\n终于在今天也就是写这篇文章前发现了，把那个站点删掉，终于是能连上了\n感动得我\n掀了桌子\n昔日的卡顿\n完全没了影子\n那么以后\n终于能和小伙伴愉快的玩mc了\n开心","source":"_posts/nginx建立TCP代理.md","raw":"---\ntitle: 通过Nginx转发Minecraft服务器流量达到加速的目的(Nginx转发TCP)\ndate: 2018-10-21 16:25:01\ntags: 云服务器\n---\n阿里云学生机10块一个月挺便宜了，就是内存2G对于一个Minecraft服务器来说有点小\n而我还有个谷歌云服务器在台湾，配置不错内存也够，问题就是网络延迟太大\n把Minecraft服务器运行在那里实际玩下来发现延迟不能忍受\n从我的电脑Ping台湾服务器有250ms，Ping阿里云20ms，阿里云Ping台湾服务器，50ms\n用小学老师教我的加法一算发现，50+20小于250啊\n于是就有了标题这个想法\n<!--more-->\n对于流量转发除了SS和Frp其他我还真不知道（**去看我的[frp教程](/frp-for-mc/)吧，真的，Nginx反向代理太难用了**）\n\n网上查了可以用firewalld做端口转发，我试了把tcp和udp的25565端口都转发到台湾服务器\n没用，可能是原理不对\n\n再一查看到Nginx反向代理可以做这种事情\n大概就是编辑站点配置文件，在server{}里面加上\n\n```nginx\n    listen 25565;\n    location / {\n      # 代理的地址\n      proxy_pass http://35.xx.xx.23:25565;\n    }\n```\n\n我确实这样做了因为前面不加`http://`配置文件不让过，结果一试当然没有用\n\n# 正确的方法在这里\n\n后来找到了Nginx转发tcp的文章，总算是找对方向了\n我的Nginx版本1.14，默认是支持TCP流量转发的，只需要在**Nginx的**配置文件(Nginx.conf)里面加如下面几行就可以：\n\n```nginx\nstream {\n    server {\n        listen 25565;\n        proxy_pass 35.xx.xx.23:25565;\n    }\n}\n```\n\n加在events后面\n\n是的，就是这么简单，这篇文章能教你的已经结束了\n\n而我自己的折腾还在后面，因为我没有把前面listen 25565的站点删掉，没删掉！！\n导致我不管怎么改Nginx的配置都是说连不上\n折腾了一晚上+一小个下午共计两个小时，的人生\n终于在今天也就是写这篇文章前发现了，把那个站点删掉，终于是能连上了\n感动得我\n掀了桌子\n昔日的卡顿\n完全没了影子\n那么以后\n终于能和小伙伴愉快的玩mc了\n开心","slug":"nginx建立TCP代理","published":1,"updated":"2019-09-15T08:07:22.908Z","_id":"ck023sdn700080guy579zbf1e","comments":1,"layout":"post","photos":[],"link":"","content":"<p>阿里云学生机10块一个月挺便宜了，就是内存2G对于一个Minecraft服务器来说有点小<br>而我还有个谷歌云服务器在台湾，配置不错内存也够，问题就是网络延迟太大<br>把Minecraft服务器运行在那里实际玩下来发现延迟不能忍受<br>从我的电脑Ping台湾服务器有250ms，Ping阿里云20ms，阿里云Ping台湾服务器，50ms<br>用小学老师教我的加法一算发现，50+20小于250啊<br>于是就有了标题这个想法<br><a id=\"more\"></a><br>对于流量转发除了SS和Frp其他我还真不知道（<strong>去看我的<a href=\"/frp-for-mc/\">frp教程</a>吧，真的，Nginx反向代理太难用了</strong>）</p>\n<p>网上查了可以用firewalld做端口转发，我试了把tcp和udp的25565端口都转发到台湾服务器<br>没用，可能是原理不对</p>\n<p>再一查看到Nginx反向代理可以做这种事情<br>大概就是编辑站点配置文件，在server{}里面加上</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">listen</span> <span class=\"number\">25565</span>;</span><br><span class=\"line\"><span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 代理的地址</span></span><br><span class=\"line\">  <span class=\"attribute\">proxy_pass</span> http://35.xx.xx.23:25565;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我确实这样做了因为前面不加<code>http://</code>配置文件不让过，结果一试当然没有用</p>\n<h1 id=\"正确的方法在这里\"><a href=\"#正确的方法在这里\" class=\"headerlink\" title=\"正确的方法在这里\"></a>正确的方法在这里</h1><p>后来找到了Nginx转发tcp的文章，总算是找对方向了<br>我的Nginx版本1.14，默认是支持TCP流量转发的，只需要在<strong>Nginx的</strong>配置文件(Nginx.conf)里面加如下面几行就可以：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">stream</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">25565</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> <span class=\"number\">35</span>.xx.xx.<span class=\"number\">23</span>:<span class=\"number\">25565</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>加在events后面</p>\n<p>是的，就是这么简单，这篇文章能教你的已经结束了</p>\n<p>而我自己的折腾还在后面，因为我没有把前面listen 25565的站点删掉，没删掉！！<br>导致我不管怎么改Nginx的配置都是说连不上<br>折腾了一晚上+一小个下午共计两个小时，的人生<br>终于在今天也就是写这篇文章前发现了，把那个站点删掉，终于是能连上了<br>感动得我<br>掀了桌子<br>昔日的卡顿<br>完全没了影子<br>那么以后<br>终于能和小伙伴愉快的玩mc了<br>开心</p>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"<p>阿里云学生机10块一个月挺便宜了，就是内存2G对于一个Minecraft服务器来说有点小<br>而我还有个谷歌云服务器在台湾，配置不错内存也够，问题就是网络延迟太大<br>把Minecraft服务器运行在那里实际玩下来发现延迟不能忍受<br>从我的电脑Ping台湾服务器有250ms，Ping阿里云20ms，阿里云Ping台湾服务器，50ms<br>用小学老师教我的加法一算发现，50+20小于250啊<br>于是就有了标题这个想法<br>","more":"<br>对于流量转发除了SS和Frp其他我还真不知道（<strong>去看我的<a href=\"/frp-for-mc/\">frp教程</a>吧，真的，Nginx反向代理太难用了</strong>）</p>\n<p>网上查了可以用firewalld做端口转发，我试了把tcp和udp的25565端口都转发到台湾服务器<br>没用，可能是原理不对</p>\n<p>再一查看到Nginx反向代理可以做这种事情<br>大概就是编辑站点配置文件，在server{}里面加上</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">listen</span> <span class=\"number\">25565</span>;</span><br><span class=\"line\"><span class=\"attribute\">location</span> / &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 代理的地址</span></span><br><span class=\"line\">  <span class=\"attribute\">proxy_pass</span> http://35.xx.xx.23:25565;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我确实这样做了因为前面不加<code>http://</code>配置文件不让过，结果一试当然没有用</p>\n<h1 id=\"正确的方法在这里\"><a href=\"#正确的方法在这里\" class=\"headerlink\" title=\"正确的方法在这里\"></a>正确的方法在这里</h1><p>后来找到了Nginx转发tcp的文章，总算是找对方向了<br>我的Nginx版本1.14，默认是支持TCP流量转发的，只需要在<strong>Nginx的</strong>配置文件(Nginx.conf)里面加如下面几行就可以：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">stream</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">25565</span>;</span><br><span class=\"line\">        <span class=\"attribute\">proxy_pass</span> <span class=\"number\">35</span>.xx.xx.<span class=\"number\">23</span>:<span class=\"number\">25565</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>加在events后面</p>\n<p>是的，就是这么简单，这篇文章能教你的已经结束了</p>\n<p>而我自己的折腾还在后面，因为我没有把前面listen 25565的站点删掉，没删掉！！<br>导致我不管怎么改Nginx的配置都是说连不上<br>折腾了一晚上+一小个下午共计两个小时，的人生<br>终于在今天也就是写这篇文章前发现了，把那个站点删掉，终于是能连上了<br>感动得我<br>掀了桌子<br>昔日的卡顿<br>完全没了影子<br>那么以后<br>终于能和小伙伴愉快的玩mc了<br>开心</p>"},{"title":"Coding绑定ssh并部署hexo","date":"2018-10-18T12:51:09.000Z","_content":"通过ssh连接git需要配置公钥，先在本地生成公钥\n\n```bash\nssh-keygen -t rsa -C \"your_email@example.com\"\n```\n\n生成在目录`~/.ssh`下面，`.ssh/id_rsa.pub`就是公钥，绑定coding的时候在设置里点添加公钥，然后复制`.pub`文件里的内容过去，<!--more-->保存后还需要认证一下：\n\n```bash\nssh -T git@git.coding.NET\n```\n\n按照提示输`yes`\ncoding会提示绑定成功\n\n```powershell\nPS D:\\Onedrive\\文档\\hexo> ssh -T git@git.coding.NET\nThe authenticity of host 'git.coding.net (118.25.***.124)' can't be established.\nRSA key fingerprint is SHA256:jok3FH7q5LJ6qvE7iPNehBgXRw51ErE77S0Dn+Vg/Ik.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added 'git.coding.net,118.25.***.124' (RSA) to the list of known hosts.\nCoding 提示: Hello xiaoxx97, You've connected to Coding.net via SSH. This is a personal key.\nxiaoxx97，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥\n```\n\n以及，如果你的项目的名称不是`你的用户名.coding.me`，虽然也可以开启静态页面，但是图片的路径会出错，导致所有图片显示不出来，要解决这个问题，绑定一个域名就好了。\n\n关于hexo的配置文件的deploy部分\n```yml\ndeploy:\n  type: git\n  repo:\n    coding: git@git.coding.net:你的用户名/项目名.git,master\n```\n`.git`后面`,master`要记得加\n还有现在coding好像在改版，项目页面复制下来的git链接域名是`git.dev.tencent.com`，而根据我现在的实践操作发现如果我不把域名换成`git.coding.net`的话是没法部署成功的，失败原因是`Host key verification failed.`\n\n如果没装过deployer要先装不然会deploy失败\n\n```bash\nnpm install hexo-deployer-git --save\n```","source":"_posts/关于coding和git的折腾.md","raw":"---\ntitle: Coding绑定ssh并部署hexo\ndate: 2018-10-18 20:51:09\ntags: 云服务器\n---\n通过ssh连接git需要配置公钥，先在本地生成公钥\n\n```bash\nssh-keygen -t rsa -C \"your_email@example.com\"\n```\n\n生成在目录`~/.ssh`下面，`.ssh/id_rsa.pub`就是公钥，绑定coding的时候在设置里点添加公钥，然后复制`.pub`文件里的内容过去，<!--more-->保存后还需要认证一下：\n\n```bash\nssh -T git@git.coding.NET\n```\n\n按照提示输`yes`\ncoding会提示绑定成功\n\n```powershell\nPS D:\\Onedrive\\文档\\hexo> ssh -T git@git.coding.NET\nThe authenticity of host 'git.coding.net (118.25.***.124)' can't be established.\nRSA key fingerprint is SHA256:jok3FH7q5LJ6qvE7iPNehBgXRw51ErE77S0Dn+Vg/Ik.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added 'git.coding.net,118.25.***.124' (RSA) to the list of known hosts.\nCoding 提示: Hello xiaoxx97, You've connected to Coding.net via SSH. This is a personal key.\nxiaoxx97，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥\n```\n\n以及，如果你的项目的名称不是`你的用户名.coding.me`，虽然也可以开启静态页面，但是图片的路径会出错，导致所有图片显示不出来，要解决这个问题，绑定一个域名就好了。\n\n关于hexo的配置文件的deploy部分\n```yml\ndeploy:\n  type: git\n  repo:\n    coding: git@git.coding.net:你的用户名/项目名.git,master\n```\n`.git`后面`,master`要记得加\n还有现在coding好像在改版，项目页面复制下来的git链接域名是`git.dev.tencent.com`，而根据我现在的实践操作发现如果我不把域名换成`git.coding.net`的话是没法部署成功的，失败原因是`Host key verification failed.`\n\n如果没装过deployer要先装不然会deploy失败\n\n```bash\nnpm install hexo-deployer-git --save\n```","slug":"关于coding和git的折腾","published":1,"updated":"2019-09-15T08:07:22.909Z","_id":"ck023sdo700090guy0xufq4jd","comments":1,"layout":"post","photos":[],"link":"","content":"<p>通过ssh连接git需要配置公钥，先在本地生成公钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"your_email@example.com\"</span></span><br></pre></td></tr></table></figure>\n<p>生成在目录<code>~/.ssh</code>下面，<code>.ssh/id_rsa.pub</code>就是公钥，绑定coding的时候在设置里点添加公钥，然后复制<code>.pub</code>文件里的内容过去，<a id=\"more\"></a>保存后还需要认证一下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@git.coding.NET</span><br></pre></td></tr></table></figure>\n<p>按照提示输<code>yes</code><br>coding会提示绑定成功</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\Onedrive\\文档\\hexo&gt; ssh -T git@git.coding.NET</span><br><span class=\"line\">The authenticity of host <span class=\"string\">'git.coding.net (118.25.***.124)'</span> can<span class=\"string\">'t be established.</span></span><br><span class=\"line\"><span class=\"string\">RSA key fingerprint is SHA256:jok3FH7q5LJ6qvE7iPNehBgXRw51ErE77S0Dn+Vg/Ik.</span></span><br><span class=\"line\"><span class=\"string\">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class=\"line\"><span class=\"string\">Warning: Permanently added '</span>git.coding.net,<span class=\"number\">118.25</span>.***.<span class=\"number\">124</span><span class=\"string\">' (RSA) to the list of known hosts.</span></span><br><span class=\"line\"><span class=\"string\">Coding 提示: Hello xiaoxx97, You'</span>ve connected to Coding.net via SSH. This is a personal key.</span><br><span class=\"line\">xiaoxx97，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥</span><br></pre></td></tr></table></figure>\n<p>以及，如果你的项目的名称不是<code>你的用户名.coding.me</code>，虽然也可以开启静态页面，但是图片的路径会出错，导致所有图片显示不出来，要解决这个问题，绑定一个域名就好了。</p>\n<p>关于hexo的配置文件的deploy部分<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">    coding:</span> <span class=\"string\">git@git.coding.net:你的用户名/项目名.git,master</span></span><br></pre></td></tr></table></figure></p>\n<p><code>.git</code>后面<code>,master</code>要记得加<br>还有现在coding好像在改版，项目页面复制下来的git链接域名是<code>git.dev.tencent.com</code>，而根据我现在的实践操作发现如果我不把域名换成<code>git.coding.net</code>的话是没法部署成功的，失败原因是<code>Host key verification failed.</code></p>\n<p>如果没装过deployer要先装不然会deploy失败</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"<p>通过ssh连接git需要配置公钥，先在本地生成公钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"your_email@example.com\"</span></span><br></pre></td></tr></table></figure>\n<p>生成在目录<code>~/.ssh</code>下面，<code>.ssh/id_rsa.pub</code>就是公钥，绑定coding的时候在设置里点添加公钥，然后复制<code>.pub</code>文件里的内容过去，","more":"保存后还需要认证一下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -T git@git.coding.NET</span><br></pre></td></tr></table></figure>\n<p>按照提示输<code>yes</code><br>coding会提示绑定成功</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\Onedrive\\文档\\hexo&gt; ssh -T git@git.coding.NET</span><br><span class=\"line\">The authenticity of host <span class=\"string\">'git.coding.net (118.25.***.124)'</span> can<span class=\"string\">'t be established.</span></span><br><span class=\"line\"><span class=\"string\">RSA key fingerprint is SHA256:jok3FH7q5LJ6qvE7iPNehBgXRw51ErE77S0Dn+Vg/Ik.</span></span><br><span class=\"line\"><span class=\"string\">Are you sure you want to continue connecting (yes/no)? yes</span></span><br><span class=\"line\"><span class=\"string\">Warning: Permanently added '</span>git.coding.net,<span class=\"number\">118.25</span>.***.<span class=\"number\">124</span><span class=\"string\">' (RSA) to the list of known hosts.</span></span><br><span class=\"line\"><span class=\"string\">Coding 提示: Hello xiaoxx97, You'</span>ve connected to Coding.net via SSH. This is a personal key.</span><br><span class=\"line\">xiaoxx97，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥</span><br></pre></td></tr></table></figure>\n<p>以及，如果你的项目的名称不是<code>你的用户名.coding.me</code>，虽然也可以开启静态页面，但是图片的路径会出错，导致所有图片显示不出来，要解决这个问题，绑定一个域名就好了。</p>\n<p>关于hexo的配置文件的deploy部分<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">git</span></span><br><span class=\"line\"><span class=\"attr\">  repo:</span></span><br><span class=\"line\"><span class=\"attr\">    coding:</span> <span class=\"string\">git@git.coding.net:你的用户名/项目名.git,master</span></span><br></pre></td></tr></table></figure></p>\n<p><code>.git</code>后面<code>,master</code>要记得加<br>还有现在coding好像在改版，项目页面复制下来的git链接域名是<code>git.dev.tencent.com</code>，而根据我现在的实践操作发现如果我不把域名换成<code>git.coding.net</code>的话是没法部署成功的，失败原因是<code>Host key verification failed.</code></p>\n<p>如果没装过deployer要先装不然会deploy失败</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>"},{"title":"小米6刷入miui欧洲版以及安装小米钱包、应用商店APP,开启全盘加密","date":"2018-12-18T08:03:00.000Z","_content":"> [miui.eu](miui.eu)，一个真正没有广告的系统，比国际版还要纯净\n\n我一开始照着知乎[这个教程](https://www.zhihu.com/question/50231539)刷的，刷了后死活开不了机，也就是卡在了MI界面，后来在miui欧洲论坛找到了[这个](https://xiaomi.eu/community/threads/bootloop-problem-while-flashing-eu-stable.46593/)答案，完全符合我的情况，不能直接从国内版刷成欧洲版，要先刷个国际版，在国际版的基础上才能刷欧洲版。\n\n> miui欧洲版自带人脸解锁，抬起亮屏，还有谷歌的Smart Lock，挺有意思。\n\n<!--more-->\n\n----\n\n>  2019-08-18 更新：\n>\n> 现在已经半夜1点，我的小米6正在通过线刷刷国内版miui，起因是这次更新miui9.8.15版本后出了一点问题怎么也开不了机，具体的问题应该就是换行符的问题，我刚通过脚本自动获取链接的方式做到持续集成，可以全自动生成刷机包而不用每次改两个链接以及git commit,tag,push等，现在只要在持续集成那边开个定时，就可以每周自动出炉修复刷机包并且上传到GitHub的release页面，可惜我再也用不到了（大概），还需要的朋友记得在评论区告诉我，我会考虑加上其他机型或者出个持续集成的教程。\n>\n> 链接在这里：https://github.com/xiaoxx970/mipay-extract/releases\n>\n> 现在已经开启了每周更新，不用我动就会保持最新版本的，用着miui欧洲版的同学每次更新前去这个页面下载一下就可以刷机了。 \n\n首先要说的是，要折腾，先备份。\n如果你用了谷歌验证器，可以象我一样换成Authy，通过手机登录，不用担心换手机找不回来\n微信可以通过Windows端备份聊天记录\n相册短信便签什么的就交给小米云，差不多就这些\n\n其次要说的是，等下用到的所有提取出来的刷机包，在每一次更新系统后都会失效，你可以选择再次刷入。\n特别地，关于支付安全，eu固件默认关闭了全盘强制加密（FBE）功能，这跟国内固件不一样，最直接的影响就是进入恢复模式不用解密，数据暴露在捡到你手机的人面前，所以我是选择刷入了开启加密的补丁包，同样的每一次更新系统就必须在更新后重新刷入`force-fbe`包，否则无法开机。\n\n下面从第一步，你还是个国内miui系统开始\n\n# 解锁bootloader\n    http://www.miui.com/unlock/index.html\n\n# ~~刷入国际版ROM~~\n（根据评论，可以直接刷欧洲版，只要刷完欧洲版，清理一下缓存就行了，所以这步可跳过）\n\n你没有看错，欧洲版和国内版系统分区不一样（我猜的），直接卡刷欧洲版我试过没法开机（可能还是因为FBE的缘故？），反正为了保证成功就先刷国际版ROM，顺便把系统和数据也清了\n   - 去下载线刷包：[线刷包地址](http://en.miui.com/download.html)\n   - 手机音量下+电源键开机，进入Fastboot模式\n   - 下载小米的[通用刷机工具](http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip)\n   - 按照教程一步一步往下做\n   - **注意**软件打开右下角不要选`全部删除并lock`，选择`全部删除`就可以了\n   - 线刷具体教程：http://www.miui.com/shuaji-393.html\n\n# 不用开机，继续刷入twrp\n怎么做到的呢，就是线刷软件提示刷入成功，手机重启的时候，还是按住音量下+电源键开机，进入Fastboot模式，通过ADB(刚才下载的通用刷机工具里有)终端命令来刷入。\n如果还是不小心开机了没关系，等下刷系统的时候在twrp里面双清一下就可以了。\n   1. [twrp官方下载](https://twrp.me/Devices/)\n    选择你的机型对应下载下来\n   2. 打开adb终端\n    adb终端的位置在`\\MiFlash2018-5-28-0\\Source\\ThirdParty\\Google\\Android`里面，进入到`Android`文件夹，鼠标在空白的地方按住Shift以后右键，选择在此处打开cmd/power shell窗口，就可以使用adb了。\n   3. 终端输入命令\n      ```bash\n      fastboot flash recovery twrp.img\n      fastboot boot twrp.img\n      ```\n      `twrp.img`是替换成你的twrp包的路径和名称。\n   > 第二条命令执行完后手机就会自己重启到twrp界面，可以设置成中文。\n   \n# 进入twrp，刷eu固件\n1. 去下载miui欧洲版：[miui欧洲版发布页面](https://xiaomi.eu/community/link-forums/roms-download.73/)\n2. 格式化data分区\n   如果你想开启全盘默认加密，那就要在刷入下面的包之前先格式化data分区\n3. 连接电脑，把eu固件拷入sdcard目录\n   手机在twrp界面，电脑上应该能看到手机，不能的话在手机点挂载，然后点开启MTP\n> **注意：** 如果你选择开启全盘加密，那么先去做第五步，把你要刷的包都刷入了再开机\n4. 从手机上点刷机，选择刷机包，完成，开机。\n\n到这里已经完成miui欧洲版刷机了，选择语言，连WiFi，登账号\n![](screen1.jpg)这是开机后的桌面\nmiui欧洲版阉割了很多比如小米钱包，里面的卡模拟的功能我用得到，包括公交卡什么的，所以接下来折腾如何装回这个应用\n\n# 提取Mipay安装包以及本土化修复包\n> 要从中国版固件的system.img里面提取软件包，还要通过Root权限把软件包写入System分区，这里有一个教程：[MIUI国际版mi pay解决方案](https://www.yipkwong.com/2018/06/06/167/)，里面叙述了详细经过，但是我没用这个方法，虽然尝试过但是卡在了挂载镜像那一步。\n\n我从另一个地方找到了方便的方法：[Mi Pay Extractor](https://github.com/linusyang92/mipay-extract)，是一个提取脚本，可以自动提取出卡刷包中的MiPay软件和日历、天气等。\n1. ~~直接git clone到本地~~下载zip包\n\n   windows用户不要git clone到本地，去直接下载zip文件来避免等下会出现的换行符问题：[repo的下载链接](https://github.com/linusyang92/mipay-extract/archive/master.zip)\n\n   linux用户无妨\n   ```bash\n   git clone https://github.com/linusyang92/mipay-extract.git\n   ```\n![目录截图](git-clone.jpg)\n2. 下载国内的miui最新卡刷包，放入同一目录\n3. miui欧洲版卡刷包，也放在同一目录\n4. 运行`extract.bat`，如果出现下面这样的错误：\n```bash\nextract.sh: line 2: $'\\r': command not found\nextract.sh: line 3: cd: $'.\\r': No such file or directory\nextract.sh: line 4: $'\\r': command not found\nextract.sh: line 6: $'\\r': command not found\nextract.sh: line 18: $'\\r': command not found\nextract.sh: line 19: syntax error near unexpected token `$'{\\r''\n'xtract.sh: line 19: `exists() {\n请按任意键继续. . .\n```\n   那就是因为`extract.sh`文件用的换行符不对，把原来的换行符`CRLF`改成`LF`后保存就可以正常运行了\n   Windows下双击`extract.bat`就可以开始提取，会要几分钟时间。\n   ![bat-run](bat-run.jpg)这样就说明提取成功，现在目录下会有`mipay-MIxxx.zip`,这就是一个卡刷包，通过twrp可以直接刷入\n   <a id=\"five\"/>\n5. 运行`cleaner-fix.bat`\n生成修复日历和天气的刷机包，具体说就是让日历显示农历，天气app换回国内的。这个命令同时还会生成开启默认加密的刷机包。\n6. 对于想在负一屏还能用微信支付宝扫码快捷键的，以及查快递，`extract.bat --appvault`可以生成这样的修复包，也就是替换成跟国内一样的信息助手\n\nFinally，我们有了四个准备卡刷的包：\n![目录截图2](mipay-extract.jpg)全扔进手机，一个一个刷就是了\n然而，你可能遇到跟我一样的错误：一个叫255的错误，简单来说就是以上这四个包，没一个能刷成功的，网上搜255错误，原因很多，没有一个能解决我的问题的，于是我慢慢想起了前面提到的`CRLF`，说不定又是这个东西在捣鬼。打开zip包，第一个文件夹`META-INF`一路点进去，最后看到了一个叫做`update-binary`的文件，这个文件类似于脚本，在刷机的时候执行的，和其他能刷成功的一对比发现确实是因为用了`CRLF`换行符导致错误的。用VScode打开转换成`LF`后保存，更新压缩包，这次就没有任何毛病了,在twrp下开启MTP把刷机包存到手机，可以全部成功刷入。\n> 在[release页面](https://github.com/linusyang92/mipay-extract/releases)有他提取好的卡刷包，虽然是Mix2的但是发现也适用于我的小米6，如果你是米6或mix2不想折腾也可以用作者提取好的\n\n下面是安装小米应用商店，装了就可以用它来更新小米钱包，而不用每次想更新都去下载线刷包。\n下载地址：https://xiaomi-market.cn.uptodown.com/android\n不知道为什么这个网站是被墙了的，开全局去下\n然后就可以安装了，一切都非常完美，可以一键装应用和更新\n\n最后，终于写完了这个教程，自我感觉是很详细了，希望可以帮到跟我一样在折腾miui的人。我刷这个系统的初衷是国内版变得越来越难用，最主要的表现是经常熄屏自己莫名震动，还经常自己亮屏，打开了看也没有什么通知，后来上网一搜发现我不是一个人，这是小米系统本身的问题，那些震动是真的有通知不过之前被我从通知栏禁止了，可能禁止的层面不对，等通知到达了震动了系统才把通知删掉，这不是折磨人么。我就找能不能刷类似CM的原版安卓，然后就在知乎上看到了miui欧洲版，感觉对安卓的底层不会改太多，就折腾用欧洲版来了。现在用了两个星期，确实好用，字体不好看还换了个字体，外观上和国内版差别也不大。就是每次升级系统不是很方便就是了，之后会想办法用持续集成完成自动的提取。\n\n\n> 2019-4-23更新：总结一下用miui-eu时更新系统步骤\n\n   1. 下载eu包：https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/\n\n   2. 下载国内相同版本包：http://www.miui.com/download.html\n\n   3. 在`mipay-extract`文件夹中执行以下命令\n      ```\n      ./cleaner-fix.bat\n      ./extract.bat --appvault\n      ```\n\n   4. 生成的4个包加上下载下来的eu包拷贝进手机，重启进入twrp选择刷机包刷机\n\n      可以批量选择刷机包，顺序是eu包在最前面，其他的在后面刷。\n\n      > 我的[Release页面](https://github.com/xiaoxx970/mipay-extract/releases) ，如果你也是小米6就可以直接下载下来用","source":"_posts/miui-eu.md","raw":"title: 小米6刷入miui欧洲版以及安装小米钱包、应用商店APP,开启全盘加密\ntags:\n  - MIUI\ndate: 2018-12-18 16:03:00\n---\n> [miui.eu](miui.eu)，一个真正没有广告的系统，比国际版还要纯净\n\n我一开始照着知乎[这个教程](https://www.zhihu.com/question/50231539)刷的，刷了后死活开不了机，也就是卡在了MI界面，后来在miui欧洲论坛找到了[这个](https://xiaomi.eu/community/threads/bootloop-problem-while-flashing-eu-stable.46593/)答案，完全符合我的情况，不能直接从国内版刷成欧洲版，要先刷个国际版，在国际版的基础上才能刷欧洲版。\n\n> miui欧洲版自带人脸解锁，抬起亮屏，还有谷歌的Smart Lock，挺有意思。\n\n<!--more-->\n\n----\n\n>  2019-08-18 更新：\n>\n> 现在已经半夜1点，我的小米6正在通过线刷刷国内版miui，起因是这次更新miui9.8.15版本后出了一点问题怎么也开不了机，具体的问题应该就是换行符的问题，我刚通过脚本自动获取链接的方式做到持续集成，可以全自动生成刷机包而不用每次改两个链接以及git commit,tag,push等，现在只要在持续集成那边开个定时，就可以每周自动出炉修复刷机包并且上传到GitHub的release页面，可惜我再也用不到了（大概），还需要的朋友记得在评论区告诉我，我会考虑加上其他机型或者出个持续集成的教程。\n>\n> 链接在这里：https://github.com/xiaoxx970/mipay-extract/releases\n>\n> 现在已经开启了每周更新，不用我动就会保持最新版本的，用着miui欧洲版的同学每次更新前去这个页面下载一下就可以刷机了。 \n\n首先要说的是，要折腾，先备份。\n如果你用了谷歌验证器，可以象我一样换成Authy，通过手机登录，不用担心换手机找不回来\n微信可以通过Windows端备份聊天记录\n相册短信便签什么的就交给小米云，差不多就这些\n\n其次要说的是，等下用到的所有提取出来的刷机包，在每一次更新系统后都会失效，你可以选择再次刷入。\n特别地，关于支付安全，eu固件默认关闭了全盘强制加密（FBE）功能，这跟国内固件不一样，最直接的影响就是进入恢复模式不用解密，数据暴露在捡到你手机的人面前，所以我是选择刷入了开启加密的补丁包，同样的每一次更新系统就必须在更新后重新刷入`force-fbe`包，否则无法开机。\n\n下面从第一步，你还是个国内miui系统开始\n\n# 解锁bootloader\n    http://www.miui.com/unlock/index.html\n\n# ~~刷入国际版ROM~~\n（根据评论，可以直接刷欧洲版，只要刷完欧洲版，清理一下缓存就行了，所以这步可跳过）\n\n你没有看错，欧洲版和国内版系统分区不一样（我猜的），直接卡刷欧洲版我试过没法开机（可能还是因为FBE的缘故？），反正为了保证成功就先刷国际版ROM，顺便把系统和数据也清了\n   - 去下载线刷包：[线刷包地址](http://en.miui.com/download.html)\n   - 手机音量下+电源键开机，进入Fastboot模式\n   - 下载小米的[通用刷机工具](http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip)\n   - 按照教程一步一步往下做\n   - **注意**软件打开右下角不要选`全部删除并lock`，选择`全部删除`就可以了\n   - 线刷具体教程：http://www.miui.com/shuaji-393.html\n\n# 不用开机，继续刷入twrp\n怎么做到的呢，就是线刷软件提示刷入成功，手机重启的时候，还是按住音量下+电源键开机，进入Fastboot模式，通过ADB(刚才下载的通用刷机工具里有)终端命令来刷入。\n如果还是不小心开机了没关系，等下刷系统的时候在twrp里面双清一下就可以了。\n   1. [twrp官方下载](https://twrp.me/Devices/)\n    选择你的机型对应下载下来\n   2. 打开adb终端\n    adb终端的位置在`\\MiFlash2018-5-28-0\\Source\\ThirdParty\\Google\\Android`里面，进入到`Android`文件夹，鼠标在空白的地方按住Shift以后右键，选择在此处打开cmd/power shell窗口，就可以使用adb了。\n   3. 终端输入命令\n      ```bash\n      fastboot flash recovery twrp.img\n      fastboot boot twrp.img\n      ```\n      `twrp.img`是替换成你的twrp包的路径和名称。\n   > 第二条命令执行完后手机就会自己重启到twrp界面，可以设置成中文。\n   \n# 进入twrp，刷eu固件\n1. 去下载miui欧洲版：[miui欧洲版发布页面](https://xiaomi.eu/community/link-forums/roms-download.73/)\n2. 格式化data分区\n   如果你想开启全盘默认加密，那就要在刷入下面的包之前先格式化data分区\n3. 连接电脑，把eu固件拷入sdcard目录\n   手机在twrp界面，电脑上应该能看到手机，不能的话在手机点挂载，然后点开启MTP\n> **注意：** 如果你选择开启全盘加密，那么先去做第五步，把你要刷的包都刷入了再开机\n4. 从手机上点刷机，选择刷机包，完成，开机。\n\n到这里已经完成miui欧洲版刷机了，选择语言，连WiFi，登账号\n![](screen1.jpg)这是开机后的桌面\nmiui欧洲版阉割了很多比如小米钱包，里面的卡模拟的功能我用得到，包括公交卡什么的，所以接下来折腾如何装回这个应用\n\n# 提取Mipay安装包以及本土化修复包\n> 要从中国版固件的system.img里面提取软件包，还要通过Root权限把软件包写入System分区，这里有一个教程：[MIUI国际版mi pay解决方案](https://www.yipkwong.com/2018/06/06/167/)，里面叙述了详细经过，但是我没用这个方法，虽然尝试过但是卡在了挂载镜像那一步。\n\n我从另一个地方找到了方便的方法：[Mi Pay Extractor](https://github.com/linusyang92/mipay-extract)，是一个提取脚本，可以自动提取出卡刷包中的MiPay软件和日历、天气等。\n1. ~~直接git clone到本地~~下载zip包\n\n   windows用户不要git clone到本地，去直接下载zip文件来避免等下会出现的换行符问题：[repo的下载链接](https://github.com/linusyang92/mipay-extract/archive/master.zip)\n\n   linux用户无妨\n   ```bash\n   git clone https://github.com/linusyang92/mipay-extract.git\n   ```\n![目录截图](git-clone.jpg)\n2. 下载国内的miui最新卡刷包，放入同一目录\n3. miui欧洲版卡刷包，也放在同一目录\n4. 运行`extract.bat`，如果出现下面这样的错误：\n```bash\nextract.sh: line 2: $'\\r': command not found\nextract.sh: line 3: cd: $'.\\r': No such file or directory\nextract.sh: line 4: $'\\r': command not found\nextract.sh: line 6: $'\\r': command not found\nextract.sh: line 18: $'\\r': command not found\nextract.sh: line 19: syntax error near unexpected token `$'{\\r''\n'xtract.sh: line 19: `exists() {\n请按任意键继续. . .\n```\n   那就是因为`extract.sh`文件用的换行符不对，把原来的换行符`CRLF`改成`LF`后保存就可以正常运行了\n   Windows下双击`extract.bat`就可以开始提取，会要几分钟时间。\n   ![bat-run](bat-run.jpg)这样就说明提取成功，现在目录下会有`mipay-MIxxx.zip`,这就是一个卡刷包，通过twrp可以直接刷入\n   <a id=\"five\"/>\n5. 运行`cleaner-fix.bat`\n生成修复日历和天气的刷机包，具体说就是让日历显示农历，天气app换回国内的。这个命令同时还会生成开启默认加密的刷机包。\n6. 对于想在负一屏还能用微信支付宝扫码快捷键的，以及查快递，`extract.bat --appvault`可以生成这样的修复包，也就是替换成跟国内一样的信息助手\n\nFinally，我们有了四个准备卡刷的包：\n![目录截图2](mipay-extract.jpg)全扔进手机，一个一个刷就是了\n然而，你可能遇到跟我一样的错误：一个叫255的错误，简单来说就是以上这四个包，没一个能刷成功的，网上搜255错误，原因很多，没有一个能解决我的问题的，于是我慢慢想起了前面提到的`CRLF`，说不定又是这个东西在捣鬼。打开zip包，第一个文件夹`META-INF`一路点进去，最后看到了一个叫做`update-binary`的文件，这个文件类似于脚本，在刷机的时候执行的，和其他能刷成功的一对比发现确实是因为用了`CRLF`换行符导致错误的。用VScode打开转换成`LF`后保存，更新压缩包，这次就没有任何毛病了,在twrp下开启MTP把刷机包存到手机，可以全部成功刷入。\n> 在[release页面](https://github.com/linusyang92/mipay-extract/releases)有他提取好的卡刷包，虽然是Mix2的但是发现也适用于我的小米6，如果你是米6或mix2不想折腾也可以用作者提取好的\n\n下面是安装小米应用商店，装了就可以用它来更新小米钱包，而不用每次想更新都去下载线刷包。\n下载地址：https://xiaomi-market.cn.uptodown.com/android\n不知道为什么这个网站是被墙了的，开全局去下\n然后就可以安装了，一切都非常完美，可以一键装应用和更新\n\n最后，终于写完了这个教程，自我感觉是很详细了，希望可以帮到跟我一样在折腾miui的人。我刷这个系统的初衷是国内版变得越来越难用，最主要的表现是经常熄屏自己莫名震动，还经常自己亮屏，打开了看也没有什么通知，后来上网一搜发现我不是一个人，这是小米系统本身的问题，那些震动是真的有通知不过之前被我从通知栏禁止了，可能禁止的层面不对，等通知到达了震动了系统才把通知删掉，这不是折磨人么。我就找能不能刷类似CM的原版安卓，然后就在知乎上看到了miui欧洲版，感觉对安卓的底层不会改太多，就折腾用欧洲版来了。现在用了两个星期，确实好用，字体不好看还换了个字体，外观上和国内版差别也不大。就是每次升级系统不是很方便就是了，之后会想办法用持续集成完成自动的提取。\n\n\n> 2019-4-23更新：总结一下用miui-eu时更新系统步骤\n\n   1. 下载eu包：https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/\n\n   2. 下载国内相同版本包：http://www.miui.com/download.html\n\n   3. 在`mipay-extract`文件夹中执行以下命令\n      ```\n      ./cleaner-fix.bat\n      ./extract.bat --appvault\n      ```\n\n   4. 生成的4个包加上下载下来的eu包拷贝进手机，重启进入twrp选择刷机包刷机\n\n      可以批量选择刷机包，顺序是eu包在最前面，其他的在后面刷。\n\n      > 我的[Release页面](https://github.com/xiaoxx970/mipay-extract/releases) ，如果你也是小米6就可以直接下载下来用","slug":"miui-eu","published":1,"updated":"2019-09-15T08:07:22.904Z","_id":"ck023se6l000j0guyn6plddf6","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p><a href=\"miui.eu\">miui.eu</a>，一个真正没有广告的系统，比国际版还要纯净</p>\n</blockquote>\n<p>我一开始照着知乎<a href=\"https://www.zhihu.com/question/50231539\" target=\"_blank\" rel=\"noopener\">这个教程</a>刷的，刷了后死活开不了机，也就是卡在了MI界面，后来在miui欧洲论坛找到了<a href=\"https://xiaomi.eu/community/threads/bootloop-problem-while-flashing-eu-stable.46593/\" target=\"_blank\" rel=\"noopener\">这个</a>答案，完全符合我的情况，不能直接从国内版刷成欧洲版，要先刷个国际版，在国际版的基础上才能刷欧洲版。</p>\n<blockquote>\n<p>miui欧洲版自带人脸解锁，抬起亮屏，还有谷歌的Smart Lock，挺有意思。</p>\n</blockquote>\n<a id=\"more\"></a>\n<hr>\n<blockquote>\n<p> 2019-08-18 更新：</p>\n<p>现在已经半夜1点，我的小米6正在通过线刷刷国内版miui，起因是这次更新miui9.8.15版本后出了一点问题怎么也开不了机，具体的问题应该就是换行符的问题，我刚通过脚本自动获取链接的方式做到持续集成，可以全自动生成刷机包而不用每次改两个链接以及git commit,tag,push等，现在只要在持续集成那边开个定时，就可以每周自动出炉修复刷机包并且上传到GitHub的release页面，可惜我再也用不到了（大概），还需要的朋友记得在评论区告诉我，我会考虑加上其他机型或者出个持续集成的教程。</p>\n<p>链接在这里：<a href=\"https://github.com/xiaoxx970/mipay-extract/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaoxx970/mipay-extract/releases</a></p>\n<p>现在已经开启了每周更新，不用我动就会保持最新版本的，用着miui欧洲版的同学每次更新前去这个页面下载一下就可以刷机了。 </p>\n</blockquote>\n<p>首先要说的是，要折腾，先备份。<br>如果你用了谷歌验证器，可以象我一样换成Authy，通过手机登录，不用担心换手机找不回来<br>微信可以通过Windows端备份聊天记录<br>相册短信便签什么的就交给小米云，差不多就这些</p>\n<p>其次要说的是，等下用到的所有提取出来的刷机包，在每一次更新系统后都会失效，你可以选择再次刷入。<br>特别地，关于支付安全，eu固件默认关闭了全盘强制加密（FBE）功能，这跟国内固件不一样，最直接的影响就是进入恢复模式不用解密，数据暴露在捡到你手机的人面前，所以我是选择刷入了开启加密的补丁包，同样的每一次更新系统就必须在更新后重新刷入<code>force-fbe</code>包，否则无法开机。</p>\n<p>下面从第一步，你还是个国内miui系统开始</p>\n<h1 id=\"解锁bootloader\"><a href=\"#解锁bootloader\" class=\"headerlink\" title=\"解锁bootloader\"></a>解锁bootloader</h1><pre><code>http://www.miui.com/unlock/index.html\n</code></pre><h1 id=\"刷入国际版ROM\"><a href=\"#刷入国际版ROM\" class=\"headerlink\" title=\"刷入国际版ROM\"></a><del>刷入国际版ROM</del></h1><p>（根据评论，可以直接刷欧洲版，只要刷完欧洲版，清理一下缓存就行了，所以这步可跳过）</p>\n<p>你没有看错，欧洲版和国内版系统分区不一样（我猜的），直接卡刷欧洲版我试过没法开机（可能还是因为FBE的缘故？），反正为了保证成功就先刷国际版ROM，顺便把系统和数据也清了</p>\n<ul>\n<li>去下载线刷包：<a href=\"http://en.miui.com/download.html\" target=\"_blank\" rel=\"noopener\">线刷包地址</a></li>\n<li>手机音量下+电源键开机，进入Fastboot模式</li>\n<li>下载小米的<a href=\"http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip\" target=\"_blank\" rel=\"noopener\">通用刷机工具</a></li>\n<li>按照教程一步一步往下做</li>\n<li><strong>注意</strong>软件打开右下角不要选<code>全部删除并lock</code>，选择<code>全部删除</code>就可以了</li>\n<li>线刷具体教程：<a href=\"http://www.miui.com/shuaji-393.html\" target=\"_blank\" rel=\"noopener\">http://www.miui.com/shuaji-393.html</a></li>\n</ul>\n<h1 id=\"不用开机，继续刷入twrp\"><a href=\"#不用开机，继续刷入twrp\" class=\"headerlink\" title=\"不用开机，继续刷入twrp\"></a>不用开机，继续刷入twrp</h1><p>怎么做到的呢，就是线刷软件提示刷入成功，手机重启的时候，还是按住音量下+电源键开机，进入Fastboot模式，通过ADB(刚才下载的通用刷机工具里有)终端命令来刷入。<br>如果还是不小心开机了没关系，等下刷系统的时候在twrp里面双清一下就可以了。</p>\n<ol>\n<li><a href=\"https://twrp.me/Devices/\" target=\"_blank\" rel=\"noopener\">twrp官方下载</a><br>选择你的机型对应下载下来</li>\n<li>打开adb终端<br>adb终端的位置在<code>\\MiFlash2018-5-28-0\\Source\\ThirdParty\\Google\\Android</code>里面，进入到<code>Android</code>文件夹，鼠标在空白的地方按住Shift以后右键，选择在此处打开cmd/power shell窗口，就可以使用adb了。</li>\n<li><p>终端输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastboot flash recovery twrp.img</span><br><span class=\"line\">fastboot boot twrp.img</span><br></pre></td></tr></table></figure>\n<p><code>twrp.img</code>是替换成你的twrp包的路径和名称。</p>\n<blockquote>\n<p>第二条命令执行完后手机就会自己重启到twrp界面，可以设置成中文。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"进入twrp，刷eu固件\"><a href=\"#进入twrp，刷eu固件\" class=\"headerlink\" title=\"进入twrp，刷eu固件\"></a>进入twrp，刷eu固件</h1><ol>\n<li>去下载miui欧洲版：<a href=\"https://xiaomi.eu/community/link-forums/roms-download.73/\" target=\"_blank\" rel=\"noopener\">miui欧洲版发布页面</a></li>\n<li>格式化data分区<br>如果你想开启全盘默认加密，那就要在刷入下面的包之前先格式化data分区</li>\n<li>连接电脑，把eu固件拷入sdcard目录<br>手机在twrp界面，电脑上应该能看到手机，不能的话在手机点挂载，然后点开启MTP<blockquote>\n<p><strong>注意：</strong> 如果你选择开启全盘加密，那么先去做第五步，把你要刷的包都刷入了再开机</p>\n</blockquote>\n</li>\n<li>从手机上点刷机，选择刷机包，完成，开机。</li>\n</ol>\n<p>到这里已经完成miui欧洲版刷机了，选择语言，连WiFi，登账号<br><img src=\"screen1.jpg\" alt>这是开机后的桌面<br>miui欧洲版阉割了很多比如小米钱包，里面的卡模拟的功能我用得到，包括公交卡什么的，所以接下来折腾如何装回这个应用</p>\n<h1 id=\"提取Mipay安装包以及本土化修复包\"><a href=\"#提取Mipay安装包以及本土化修复包\" class=\"headerlink\" title=\"提取Mipay安装包以及本土化修复包\"></a>提取Mipay安装包以及本土化修复包</h1><blockquote>\n<p>要从中国版固件的system.img里面提取软件包，还要通过Root权限把软件包写入System分区，这里有一个教程：<a href=\"https://www.yipkwong.com/2018/06/06/167/\" target=\"_blank\" rel=\"noopener\">MIUI国际版mi pay解决方案</a>，里面叙述了详细经过，但是我没用这个方法，虽然尝试过但是卡在了挂载镜像那一步。</p>\n</blockquote>\n<p>我从另一个地方找到了方便的方法：<a href=\"https://github.com/linusyang92/mipay-extract\" target=\"_blank\" rel=\"noopener\">Mi Pay Extractor</a>，是一个提取脚本，可以自动提取出卡刷包中的MiPay软件和日历、天气等。</p>\n<ol>\n<li><p><del>直接git clone到本地</del>下载zip包</p>\n<p>windows用户不要git clone到本地，去直接下载zip文件来避免等下会出现的换行符问题：<a href=\"https://github.com/linusyang92/mipay-extract/archive/master.zip\" target=\"_blank\" rel=\"noopener\">repo的下载链接</a></p>\n<p>linux用户无妨</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/linusyang92/mipay-extract.git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"git-clone.jpg\" alt=\"目录截图\"></p>\n<ol start=\"2\">\n<li>下载国内的miui最新卡刷包，放入同一目录</li>\n<li>miui欧洲版卡刷包，也放在同一目录</li>\n<li><p>运行<code>extract.bat</code>，如果出现下面这样的错误：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extract.sh: line 2: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 3: <span class=\"built_in\">cd</span>: $<span class=\"string\">'.\\r'</span>: No such file or directory</span><br><span class=\"line\">extract.sh: line 4: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 6: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 18: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 19: syntax error near unexpected token `$<span class=\"string\">'&#123;\\r'</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">'</span>xtract.sh: line 19: `<span class=\"function\"><span class=\"title\">exists</span></span>() &#123;</span><br><span class=\"line\">请按任意键继续. . .</span><br></pre></td></tr></table></figure>\n<p>那就是因为<code>extract.sh</code>文件用的换行符不对，把原来的换行符<code>CRLF</code>改成<code>LF</code>后保存就可以正常运行了<br>Windows下双击<code>extract.bat</code>就可以开始提取，会要几分钟时间。<br><img src=\"bat-run.jpg\" alt=\"bat-run\">这样就说明提取成功，现在目录下会有<code>mipay-MIxxx.zip</code>,这就是一个卡刷包，通过twrp可以直接刷入<br><a id=\"five\"></a></p>\n</li>\n<li>运行<code>cleaner-fix.bat</code><br>生成修复日历和天气的刷机包，具体说就是让日历显示农历，天气app换回国内的。这个命令同时还会生成开启默认加密的刷机包。</li>\n<li>对于想在负一屏还能用微信支付宝扫码快捷键的，以及查快递，<code>extract.bat --appvault</code>可以生成这样的修复包，也就是替换成跟国内一样的信息助手</li>\n</ol>\n<p>Finally，我们有了四个准备卡刷的包：<br><img src=\"mipay-extract.jpg\" alt=\"目录截图2\">全扔进手机，一个一个刷就是了<br>然而，你可能遇到跟我一样的错误：一个叫255的错误，简单来说就是以上这四个包，没一个能刷成功的，网上搜255错误，原因很多，没有一个能解决我的问题的，于是我慢慢想起了前面提到的<code>CRLF</code>，说不定又是这个东西在捣鬼。打开zip包，第一个文件夹<code>META-INF</code>一路点进去，最后看到了一个叫做<code>update-binary</code>的文件，这个文件类似于脚本，在刷机的时候执行的，和其他能刷成功的一对比发现确实是因为用了<code>CRLF</code>换行符导致错误的。用VScode打开转换成<code>LF</code>后保存，更新压缩包，这次就没有任何毛病了,在twrp下开启MTP把刷机包存到手机，可以全部成功刷入。</p>\n<blockquote>\n<p>在<a href=\"https://github.com/linusyang92/mipay-extract/releases\" target=\"_blank\" rel=\"noopener\">release页面</a>有他提取好的卡刷包，虽然是Mix2的但是发现也适用于我的小米6，如果你是米6或mix2不想折腾也可以用作者提取好的</p>\n</blockquote>\n<p>下面是安装小米应用商店，装了就可以用它来更新小米钱包，而不用每次想更新都去下载线刷包。<br>下载地址：<a href=\"https://xiaomi-market.cn.uptodown.com/android\" target=\"_blank\" rel=\"noopener\">https://xiaomi-market.cn.uptodown.com/android</a><br>不知道为什么这个网站是被墙了的，开全局去下<br>然后就可以安装了，一切都非常完美，可以一键装应用和更新</p>\n<p>最后，终于写完了这个教程，自我感觉是很详细了，希望可以帮到跟我一样在折腾miui的人。我刷这个系统的初衷是国内版变得越来越难用，最主要的表现是经常熄屏自己莫名震动，还经常自己亮屏，打开了看也没有什么通知，后来上网一搜发现我不是一个人，这是小米系统本身的问题，那些震动是真的有通知不过之前被我从通知栏禁止了，可能禁止的层面不对，等通知到达了震动了系统才把通知删掉，这不是折磨人么。我就找能不能刷类似CM的原版安卓，然后就在知乎上看到了miui欧洲版，感觉对安卓的底层不会改太多，就折腾用欧洲版来了。现在用了两个星期，确实好用，字体不好看还换了个字体，外观上和国内版差别也不大。就是每次升级系统不是很方便就是了，之后会想办法用持续集成完成自动的提取。</p>\n<blockquote>\n<p>2019-4-23更新：总结一下用miui-eu时更新系统步骤</p>\n</blockquote>\n<ol>\n<li><p>下载eu包：<a href=\"https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/</a></p>\n</li>\n<li><p>下载国内相同版本包：<a href=\"http://www.miui.com/download.html\" target=\"_blank\" rel=\"noopener\">http://www.miui.com/download.html</a></p>\n</li>\n<li><p>在<code>mipay-extract</code>文件夹中执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./cleaner-fix.bat</span><br><span class=\"line\">./extract.bat --appvault</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成的4个包加上下载下来的eu包拷贝进手机，重启进入twrp选择刷机包刷机</p>\n<p>可以批量选择刷机包，顺序是eu包在最前面，其他的在后面刷。</p>\n<blockquote>\n<p>我的<a href=\"https://github.com/xiaoxx970/mipay-extract/releases\" target=\"_blank\" rel=\"noopener\">Release页面</a> ，如果你也是小米6就可以直接下载下来用</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n.content-wrap,\n.sidebar-inner,\n.header-inner {\n  background: rgba(255,255,255,0.522);\n}\n@media (max-width: 991px) {\n  .footer-inner {\n    padding-right: 0;\n  }\n}\n"}},"excerpt":"<blockquote>\n<p><a href=\"miui.eu\">miui.eu</a>，一个真正没有广告的系统，比国际版还要纯净</p>\n</blockquote>\n<p>我一开始照着知乎<a href=\"https://www.zhihu.com/question/50231539\" target=\"_blank\" rel=\"noopener\">这个教程</a>刷的，刷了后死活开不了机，也就是卡在了MI界面，后来在miui欧洲论坛找到了<a href=\"https://xiaomi.eu/community/threads/bootloop-problem-while-flashing-eu-stable.46593/\" target=\"_blank\" rel=\"noopener\">这个</a>答案，完全符合我的情况，不能直接从国内版刷成欧洲版，要先刷个国际版，在国际版的基础上才能刷欧洲版。</p>\n<blockquote>\n<p>miui欧洲版自带人脸解锁，抬起亮屏，还有谷歌的Smart Lock，挺有意思。</p>\n</blockquote>","more":"<hr>\n<blockquote>\n<p> 2019-08-18 更新：</p>\n<p>现在已经半夜1点，我的小米6正在通过线刷刷国内版miui，起因是这次更新miui9.8.15版本后出了一点问题怎么也开不了机，具体的问题应该就是换行符的问题，我刚通过脚本自动获取链接的方式做到持续集成，可以全自动生成刷机包而不用每次改两个链接以及git commit,tag,push等，现在只要在持续集成那边开个定时，就可以每周自动出炉修复刷机包并且上传到GitHub的release页面，可惜我再也用不到了（大概），还需要的朋友记得在评论区告诉我，我会考虑加上其他机型或者出个持续集成的教程。</p>\n<p>链接在这里：<a href=\"https://github.com/xiaoxx970/mipay-extract/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/xiaoxx970/mipay-extract/releases</a></p>\n<p>现在已经开启了每周更新，不用我动就会保持最新版本的，用着miui欧洲版的同学每次更新前去这个页面下载一下就可以刷机了。 </p>\n</blockquote>\n<p>首先要说的是，要折腾，先备份。<br>如果你用了谷歌验证器，可以象我一样换成Authy，通过手机登录，不用担心换手机找不回来<br>微信可以通过Windows端备份聊天记录<br>相册短信便签什么的就交给小米云，差不多就这些</p>\n<p>其次要说的是，等下用到的所有提取出来的刷机包，在每一次更新系统后都会失效，你可以选择再次刷入。<br>特别地，关于支付安全，eu固件默认关闭了全盘强制加密（FBE）功能，这跟国内固件不一样，最直接的影响就是进入恢复模式不用解密，数据暴露在捡到你手机的人面前，所以我是选择刷入了开启加密的补丁包，同样的每一次更新系统就必须在更新后重新刷入<code>force-fbe</code>包，否则无法开机。</p>\n<p>下面从第一步，你还是个国内miui系统开始</p>\n<h1 id=\"解锁bootloader\"><a href=\"#解锁bootloader\" class=\"headerlink\" title=\"解锁bootloader\"></a>解锁bootloader</h1><pre><code>http://www.miui.com/unlock/index.html\n</code></pre><h1 id=\"刷入国际版ROM\"><a href=\"#刷入国际版ROM\" class=\"headerlink\" title=\"刷入国际版ROM\"></a><del>刷入国际版ROM</del></h1><p>（根据评论，可以直接刷欧洲版，只要刷完欧洲版，清理一下缓存就行了，所以这步可跳过）</p>\n<p>你没有看错，欧洲版和国内版系统分区不一样（我猜的），直接卡刷欧洲版我试过没法开机（可能还是因为FBE的缘故？），反正为了保证成功就先刷国际版ROM，顺便把系统和数据也清了</p>\n<ul>\n<li>去下载线刷包：<a href=\"http://en.miui.com/download.html\" target=\"_blank\" rel=\"noopener\">线刷包地址</a></li>\n<li>手机音量下+电源键开机，进入Fastboot模式</li>\n<li>下载小米的<a href=\"http://bigota.d.miui.com/tools/MiFlash2018-5-28-0.zip\" target=\"_blank\" rel=\"noopener\">通用刷机工具</a></li>\n<li>按照教程一步一步往下做</li>\n<li><strong>注意</strong>软件打开右下角不要选<code>全部删除并lock</code>，选择<code>全部删除</code>就可以了</li>\n<li>线刷具体教程：<a href=\"http://www.miui.com/shuaji-393.html\" target=\"_blank\" rel=\"noopener\">http://www.miui.com/shuaji-393.html</a></li>\n</ul>\n<h1 id=\"不用开机，继续刷入twrp\"><a href=\"#不用开机，继续刷入twrp\" class=\"headerlink\" title=\"不用开机，继续刷入twrp\"></a>不用开机，继续刷入twrp</h1><p>怎么做到的呢，就是线刷软件提示刷入成功，手机重启的时候，还是按住音量下+电源键开机，进入Fastboot模式，通过ADB(刚才下载的通用刷机工具里有)终端命令来刷入。<br>如果还是不小心开机了没关系，等下刷系统的时候在twrp里面双清一下就可以了。</p>\n<ol>\n<li><a href=\"https://twrp.me/Devices/\" target=\"_blank\" rel=\"noopener\">twrp官方下载</a><br>选择你的机型对应下载下来</li>\n<li>打开adb终端<br>adb终端的位置在<code>\\MiFlash2018-5-28-0\\Source\\ThirdParty\\Google\\Android</code>里面，进入到<code>Android</code>文件夹，鼠标在空白的地方按住Shift以后右键，选择在此处打开cmd/power shell窗口，就可以使用adb了。</li>\n<li><p>终端输入命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastboot flash recovery twrp.img</span><br><span class=\"line\">fastboot boot twrp.img</span><br></pre></td></tr></table></figure>\n<p><code>twrp.img</code>是替换成你的twrp包的路径和名称。</p>\n<blockquote>\n<p>第二条命令执行完后手机就会自己重启到twrp界面，可以设置成中文。</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"进入twrp，刷eu固件\"><a href=\"#进入twrp，刷eu固件\" class=\"headerlink\" title=\"进入twrp，刷eu固件\"></a>进入twrp，刷eu固件</h1><ol>\n<li>去下载miui欧洲版：<a href=\"https://xiaomi.eu/community/link-forums/roms-download.73/\" target=\"_blank\" rel=\"noopener\">miui欧洲版发布页面</a></li>\n<li>格式化data分区<br>如果你想开启全盘默认加密，那就要在刷入下面的包之前先格式化data分区</li>\n<li>连接电脑，把eu固件拷入sdcard目录<br>手机在twrp界面，电脑上应该能看到手机，不能的话在手机点挂载，然后点开启MTP<blockquote>\n<p><strong>注意：</strong> 如果你选择开启全盘加密，那么先去做第五步，把你要刷的包都刷入了再开机</p>\n</blockquote>\n</li>\n<li>从手机上点刷机，选择刷机包，完成，开机。</li>\n</ol>\n<p>到这里已经完成miui欧洲版刷机了，选择语言，连WiFi，登账号<br><img src=\"screen1.jpg\" alt>这是开机后的桌面<br>miui欧洲版阉割了很多比如小米钱包，里面的卡模拟的功能我用得到，包括公交卡什么的，所以接下来折腾如何装回这个应用</p>\n<h1 id=\"提取Mipay安装包以及本土化修复包\"><a href=\"#提取Mipay安装包以及本土化修复包\" class=\"headerlink\" title=\"提取Mipay安装包以及本土化修复包\"></a>提取Mipay安装包以及本土化修复包</h1><blockquote>\n<p>要从中国版固件的system.img里面提取软件包，还要通过Root权限把软件包写入System分区，这里有一个教程：<a href=\"https://www.yipkwong.com/2018/06/06/167/\" target=\"_blank\" rel=\"noopener\">MIUI国际版mi pay解决方案</a>，里面叙述了详细经过，但是我没用这个方法，虽然尝试过但是卡在了挂载镜像那一步。</p>\n</blockquote>\n<p>我从另一个地方找到了方便的方法：<a href=\"https://github.com/linusyang92/mipay-extract\" target=\"_blank\" rel=\"noopener\">Mi Pay Extractor</a>，是一个提取脚本，可以自动提取出卡刷包中的MiPay软件和日历、天气等。</p>\n<ol>\n<li><p><del>直接git clone到本地</del>下载zip包</p>\n<p>windows用户不要git clone到本地，去直接下载zip文件来避免等下会出现的换行符问题：<a href=\"https://github.com/linusyang92/mipay-extract/archive/master.zip\" target=\"_blank\" rel=\"noopener\">repo的下载链接</a></p>\n<p>linux用户无妨</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/linusyang92/mipay-extract.git</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><img src=\"git-clone.jpg\" alt=\"目录截图\"></p>\n<ol start=\"2\">\n<li>下载国内的miui最新卡刷包，放入同一目录</li>\n<li>miui欧洲版卡刷包，也放在同一目录</li>\n<li><p>运行<code>extract.bat</code>，如果出现下面这样的错误：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extract.sh: line 2: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 3: <span class=\"built_in\">cd</span>: $<span class=\"string\">'.\\r'</span>: No such file or directory</span><br><span class=\"line\">extract.sh: line 4: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 6: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 18: $<span class=\"string\">'\\r'</span>: <span class=\"built_in\">command</span> not found</span><br><span class=\"line\">extract.sh: line 19: syntax error near unexpected token `$<span class=\"string\">'&#123;\\r'</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">'</span>xtract.sh: line 19: `<span class=\"function\"><span class=\"title\">exists</span></span>() &#123;</span><br><span class=\"line\">请按任意键继续. . .</span><br></pre></td></tr></table></figure>\n<p>那就是因为<code>extract.sh</code>文件用的换行符不对，把原来的换行符<code>CRLF</code>改成<code>LF</code>后保存就可以正常运行了<br>Windows下双击<code>extract.bat</code>就可以开始提取，会要几分钟时间。<br><img src=\"bat-run.jpg\" alt=\"bat-run\">这样就说明提取成功，现在目录下会有<code>mipay-MIxxx.zip</code>,这就是一个卡刷包，通过twrp可以直接刷入<br><a id=\"five\"></a></p>\n</li>\n<li>运行<code>cleaner-fix.bat</code><br>生成修复日历和天气的刷机包，具体说就是让日历显示农历，天气app换回国内的。这个命令同时还会生成开启默认加密的刷机包。</li>\n<li>对于想在负一屏还能用微信支付宝扫码快捷键的，以及查快递，<code>extract.bat --appvault</code>可以生成这样的修复包，也就是替换成跟国内一样的信息助手</li>\n</ol>\n<p>Finally，我们有了四个准备卡刷的包：<br><img src=\"mipay-extract.jpg\" alt=\"目录截图2\">全扔进手机，一个一个刷就是了<br>然而，你可能遇到跟我一样的错误：一个叫255的错误，简单来说就是以上这四个包，没一个能刷成功的，网上搜255错误，原因很多，没有一个能解决我的问题的，于是我慢慢想起了前面提到的<code>CRLF</code>，说不定又是这个东西在捣鬼。打开zip包，第一个文件夹<code>META-INF</code>一路点进去，最后看到了一个叫做<code>update-binary</code>的文件，这个文件类似于脚本，在刷机的时候执行的，和其他能刷成功的一对比发现确实是因为用了<code>CRLF</code>换行符导致错误的。用VScode打开转换成<code>LF</code>后保存，更新压缩包，这次就没有任何毛病了,在twrp下开启MTP把刷机包存到手机，可以全部成功刷入。</p>\n<blockquote>\n<p>在<a href=\"https://github.com/linusyang92/mipay-extract/releases\" target=\"_blank\" rel=\"noopener\">release页面</a>有他提取好的卡刷包，虽然是Mix2的但是发现也适用于我的小米6，如果你是米6或mix2不想折腾也可以用作者提取好的</p>\n</blockquote>\n<p>下面是安装小米应用商店，装了就可以用它来更新小米钱包，而不用每次想更新都去下载线刷包。<br>下载地址：<a href=\"https://xiaomi-market.cn.uptodown.com/android\" target=\"_blank\" rel=\"noopener\">https://xiaomi-market.cn.uptodown.com/android</a><br>不知道为什么这个网站是被墙了的，开全局去下<br>然后就可以安装了，一切都非常完美，可以一键装应用和更新</p>\n<p>最后，终于写完了这个教程，自我感觉是很详细了，希望可以帮到跟我一样在折腾miui的人。我刷这个系统的初衷是国内版变得越来越难用，最主要的表现是经常熄屏自己莫名震动，还经常自己亮屏，打开了看也没有什么通知，后来上网一搜发现我不是一个人，这是小米系统本身的问题，那些震动是真的有通知不过之前被我从通知栏禁止了，可能禁止的层面不对，等通知到达了震动了系统才把通知删掉，这不是折磨人么。我就找能不能刷类似CM的原版安卓，然后就在知乎上看到了miui欧洲版，感觉对安卓的底层不会改太多，就折腾用欧洲版来了。现在用了两个星期，确实好用，字体不好看还换了个字体，外观上和国内版差别也不大。就是每次升级系统不是很方便就是了，之后会想办法用持续集成完成自动的提取。</p>\n<blockquote>\n<p>2019-4-23更新：总结一下用miui-eu时更新系统步骤</p>\n</blockquote>\n<ol>\n<li><p>下载eu包：<a href=\"https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/\" target=\"_blank\" rel=\"noopener\">https://sourceforge.net/projects/xiaomi-eu-multilang-miui-roms/files/xiaomi.eu/MIUI-WEEKLY-RELEASES/</a></p>\n</li>\n<li><p>下载国内相同版本包：<a href=\"http://www.miui.com/download.html\" target=\"_blank\" rel=\"noopener\">http://www.miui.com/download.html</a></p>\n</li>\n<li><p>在<code>mipay-extract</code>文件夹中执行以下命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./cleaner-fix.bat</span><br><span class=\"line\">./extract.bat --appvault</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成的4个包加上下载下来的eu包拷贝进手机，重启进入twrp选择刷机包刷机</p>\n<p>可以批量选择刷机包，顺序是eu包在最前面，其他的在后面刷。</p>\n<blockquote>\n<p>我的<a href=\"https://github.com/xiaoxx970/mipay-extract/releases\" target=\"_blank\" rel=\"noopener\">Release页面</a> ，如果你也是小米6就可以直接下载下来用</p>\n</blockquote>\n</li>\n</ol>"},{"title":"树莓派：samba文件共享、frp内网穿透、lighttpd、aria2c下载器（AriaNg前端）安装教程","date":"2018-03-11T17:08:00.000Z","_content":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近拿到了一个树莓派3B，想要做成NAS以及下载机，我这个人平时喜欢看美剧，每次下载都要先开电脑打开浏览器找资源迅雷下载，有时候用手机找到资源了还是得开电脑，毕竟手机不适合用来下BT，于是有了这个想法，一开始还装了[Nextcloud的树莓派版](https://ownyourbits.com/nextcloudpi/)(需要的童鞋可以进去看（需翻墙）)（2018-12-20更新：现在看官网把这个部分已经做的很完善了，占用可能也不高了），网盘下载前端倒是什么都有了，就是觉着太臃肿，web服务器用的居然还是apache，占用可想而知，到后来每次链接ssh都要接近半分钟，运行一个python脚本更是要到一分钟，那就是几行的脚本啊。后来想nextcloud其实没什么用，我只要能下载和共享文件就可以了。  \n<!--more-->\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;于是就有了这个教程，我打算用lighttpd作web服务器，上面放hexo博客（毕竟有了frp）和[aria2c前端](http://ariang.mayswind.net/zh_Hans/)，通过frp连接到我的阿里云主机，那里有公网IP，这样一来我可以在任何地方访问我的树莓派叫它下美剧，真是很幸福的一件事。  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;废话不多说，下面开始教程，我用的系统是raspbian-stretch-lite，最少占用嘛，桌面也是不需要的。  \n\n# **第一部分：samba文件共享**\n\n* ## 挂载硬盘  \n\n查看设备列表：\n\n```bash\nsudo fdisk -l\n```\n\n这时候会列出所有挂载的设备（告诉我你已经插上硬盘了）然后找到硬盘的标识，一般是/dev/sda1，然后记下来  \n挂载硬盘：\n\n```bash\nsudo mount /dev/sda1 /media\n```\n\n查看现有磁盘信息，看是否挂载成功:\n\n```bash\ndf -T\n```\n\n* ## 更换软件安装源到国内  \n\n少数情况后面的安装会出现apt-get install安装失败，这个时候就需要把安装源替换成国内源，速度也会更快  \n\n备份原列表\n\n```bash\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\nsudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak\n```\n\n编辑文件：\n\n```bash\nsudo sed -i 's#://raspbian.raspberrypi.org#s://mirrors.tuna.tsinghua.edu.cn/raspbian#g' /etc/apt/sources.list\nsudo sed -i 's#://archive.raspberrypi.org/debian#s://mirrors.tuna.tsinghua.edu.cn/raspberrypi#g' /etc/apt/sources.list.d/raspi.list\n```\n\n然后执行更新让更改生效:\n\n```bash\nsudo apt-get update\n```\n\n* ## samba安装及配置\n\n根据需要修改下面配置文件  \n[MyNAS]是电脑上可以看到的名称  \n共享路径是挂载硬盘的路径所以我用的是/media  \n其他可以不用管  \n全部复制到终端即可：  \n（我用了echo命令来写配置文件，当然用nano、vim、vi都是可以的，看各位喜欢）\n\n```bash\nsudo apt-get install samba -y #安装samba\nsudo echo \"\n    # 分享名称\n    [MyNAS]\n    # 说明信息\n    comment = NAS Storage\n    # 可以访问的用户\n    valid users = pi,root\n    # 共享文件的路径。\n    path = /media\n    # 可被其他人看到资源名称（非内容）\n    browseable = yes\n    # 可写\n    writable = yes\n    # 新建文件的权限为 664\n    create mask = 0664\n    # 新建目录的权限为 775\n    directory mask = 0775\n\"  >> /etc/samba/smb.conf\n\n```\n\n测试配置文件是否有错误，根据提示做相应修改：\n\n```bash\ntestparm\n```\n添加登陆账户并创建密码，必须是 linux 已存在的用户，密码不一定要和系统一样，只是登录samba用的。\n\n```bash\nsudo smbpasswd -a pi\n```\n\n输入两次密码  \n\n重载 samba 服务：\n\n```bash\nsudo service samba reload\n```\n\n让samba开机启动：\n\n```bash\nsudo update-rc.d samba defaults\n```\n\n# **第二部分：aria2下载器**\n\n* ## aria2配置及安装\n\n安装aria2\n\n```bash\nsudo apt-get install aria2 -y\n```\n\n创建 session 和配置文件：\n\n```bash\nmkdir ~/.aria2\ntouch ~/.aria2/aria2.session\ntouch ~/.aria2/aria2.conf\n```\n\n写入配置文件aria2.conf,注意如果用户名不是pi的话需要改下面的对应文件路径：\n\n```bash\necho \"\n\n## 文件保存相关 ##\n\n# 文件保存目录\ndir=/media/Download\n# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M\ndisk-cache=32M\n# 断点续传\ncontinue=true\n\n# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc\n# 预分配所需时间: none < falloc ? trunc < prealloc\n# falloc和trunc则需要文件系统和内核支持\n# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项\n#file-allocation=falloc\n\n## 下载连接相关 ##\n\n# 最大同时下载任务数, 运行时可修改, 默认:5\n#max-concurrent-downloads=5\n# 同一服务器连接数, 添加时可指定, 默认:1\nmax-connection-per-server=15\n# 整体下载速度限制, 运行时可修改, 默认:0（不限制）\n#max-overall-download-limit=0\n# 单个任务下载速度限制, 默认:0（不限制）\n#max-download-limit=0\n# 整体上传速度限制, 运行时可修改, 默认:0（不限制）\n#max-overall-upload-limit=0\n# 单个任务上传速度限制, 默认:0（不限制）\n#max-upload-limit=0\n# 禁用IPv6, 默认:false\ndisable-ipv6=true\n\n# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M\n# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载\nmin-split-size=10M\n# 单个任务最大线程数, 添加时可指定, 默认:5\nsplit=10\n\n## 进度保存相关 ##\n\n# 从会话文件中读取下载任务\ninput-file=/home/pi/.aria2/aria2.session\n# 在Aria2退出时保存错误的、未完成的下载任务到会话文件\nsave-session=/home/pi/.aria2/aria2.session\n# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0\nsave-session-interval=60\n\n## RPC相关设置 ##\n\n# 启用RPC, 默认:false\nenable-rpc=true\n# 允许所有来源, 默认:false\nrpc-allow-origin-all=true\n# 允许外部访问, 默认:false\nrpc-listen-all=true\n# RPC端口, 仅当默认端口被占用时修改\n# rpc-listen-port=6800\n# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项\n#rpc-secret=<TOKEN>\n\n## BT/PT下载相关 ##\n\n# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true\n#follow-torrent=true\n# 客户端伪装, PT需要\npeer-id-prefix=-TR2770-\nuser-agent=Transmission/2.77\n# 强制保存会话, 即使任务已经完成, 默认:false\n# 较新的版本开启后会在任务完成后依然保留.aria2文件\n#force-save=false\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=true\n# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false\nbt-save-metadata=true\n\" >> ~/.aria2/aria2.conf\n```\n\n然后执行：\n\n```bash\naria2c --conf-path=/home/pi/.aria2/aria2.conf -D\n```\n\n没有任何提示则表示成功，Ctrl+C退出。  \n接下来作为服务添加开机自启，注意路径是否正确：\n\n```bash\nsudo tee /etc/init.d/aria2c <<-'EOF'\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides:          aria2\n# Required-Start:    $remote_fs $network\n# Required-Stop:     $remote_fs $network\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Aria2 Downloader\n### END INIT INFO\ndo_start()\n{\n        echo -n \"Starting aria2c\"\n             su pi -c \"aria2c --conf-path=/home/pi/.aria2/aria2.conf &\"\n#这里的路径只能用绝对路径所以用户名不是pi的记得来这里修改\n}\ndo_stop()\n{\n     echo -n \"Shutting down aria2c \"\n        pkill -f aria2c\n}\ndo_restart() {\n    do_stop\n    sleep 1\n    do_start\n}\ncase \"$1\" in\nstart)\n   do_start\n   ;;\nstop)\n   do_stop\n   ;;\nstatus)\n  exit $?\n  ;;\nrestart)\n  do_restart\n  ;;\n*)\n   echo \"Usage: service aria2c {start|stop|status|restart}\" >&2\n   exit 1\n   ;;\nesac\nexit\nEOF\nsudo chmod +x /etc/init.d/aria2c\nsudo update-rc.d aria2c defaults\nsudo service aria2c start\n```\n\n这个时候aria2已经添加到开机启动并已经启动  \n以后想要管理aria2只需要输入对应命令即可\n\n```bash\n#启动aria2服务\nsudo service aria2c start \n#停止aria2服务\nsudo service aria2c stop \n#查看aria2服务状态\nsudo service aria2c status \n```\n同样的命令把aria2c替换成其他名称用来管理samba和等下要装的frp都是可以的  \n\n> 参考：https://www.jianshu.com/p/03f8022453a5\n\n* ## 网页前端（lighttpd和[ariaNg](http://ariang.mayswind.net/zh_Hans/)）\n\n安装lighttpd并设为默认启动：  \n\n```bash\nsudo apt-get install lighttpd -y\nsudo update-rc.d lighttpd defaults\n```\n\n安装好lighttpd后默认已经开启网页服务，接下来放aria2前端\n\n```bash\ncd /var/www/html\nsudo wget https://github.com/mayswind/AriaNg/releases/download/0.4.0/aria-ng-0.4.0.zip\nsudo unzip aria-ng-0.4.0.zip\n#顺便删除压缩包\nrm aria-ng-0.4.0.zip\n```\n\n现在用浏览器打开树莓派IP，你就可以看到一个漂亮的前端,以后就用它管理下载  \n至此，一个内网NAS已经搭建完成，轻量化，超小占用。  \n当然还没完，我们要做的是能从外网访问的下载器。\n</br>\n\n# **第三部分：内网穿透frp**  \n\n关于frp\n\n英文全称：fast reverse proxy\n中文全称：快速反向代理\n简称：frp\nfrp 是一个可用于内网穿透的高性能反向代理应用，支持 tcp, udp, http, https 协议.\n\nfrp 的作用\n利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。\n对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。\n利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。\n\nfrp为免费且开源项目，需要自己利用一台拥有公网IP机器搭建服务端，以部署内网穿透项目。\n\n项目链接：https://github.com/fatedier/frp/\n\n科普完了,没有公网IP服务器的童鞋这里推荐一个免费的公共服务:https://www.nat.ee/\n\n* ## frp客户端安装\n\n可以自己到[releases](http://github.com/fatedier/frp/releases)页面找最新版链接\n\n```bash\ncd ~\nwget http://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_arm.tar.gz\ntar -xvf frp_0.16.0_linux_arm.tar.gz\nsudo mv frp_0.16.0_linux_arm/ /etc/frp\n```\n\n编辑配置文件\n\n```bash\nsudo nano /etc/frp/frpc.ini\n```\n\n根据nat.ee提供的配置文件,这里提供一个http的例子  \n把中文都换掉,自定义域太简单可能会因为被占用无法启动,记得换个复杂点的\n\n```bash\n#http-自定义配置-示例\n[common]\nserver_addr = nat.ee\nserver_port = 7000\nprivilege_token = www.nat.ee\nuser = 自定义用户名称\n\n[自定义服务名称]\ntype = http\nlocal_port = 80\nlocal_ip = 127.0.0.1\ncustom_domains = 自定义域.nat.ee\n```  \n\nCtrl+O保存，Ctrl+X退出  \n测试一下是否运行正常:  \n\n```bash\nsudo /etc/frp/frpc -c /etc/frp/frpc.ini\n```\n\n如果输出结果带有\"start proxy success\"则表示连接成功  \nCtrl+C关闭  \n添加frp为服务并自动启动:  \n(我在里面加了判断网络是否连接的脚本\"net_ts\",终于解决了开机启动时没网络导致启动失败的问题)\n\n```bash\nsudo tee /etc/init.d/frp <<-'EOF'\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides:         frp\n# Required-Start:    $network $local_fs $remote_fs $named $portmap $syslog\n# Required-Stop::    $network $local_fs $remote_fs\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Start frp at boot time\n# Description:       A porxy clint\n### END INIT INFO\nnet_ts()\n{\n    #超时时间\n    timeout=5\n\n    #目标网站\n    target=baidu.com\n\n    #获取响应状态码\n    ret_code=`curl -I -s --connect-timeout $timeout $target -w %{http_code} | tail -n1`\n\n    if [ \"x$ret_code\" = \"x200\" ]; then\n        echo 网络畅通\n\tnetstate='1'\n    else\n        echo 网络不畅通\n\tnetstate='0'\n    fi\n}\ndo_start()\n{\n        echo \"starting frp.\"\n        /etc/frp/frpc -c /etc/frp/frpc.ini &\n\n}\ndo_stop()\n{\n      pkill -f /etc/frp/frpc\n      echo \"stop complete.\"\n}\ndo_restart() {\n    do_stop\n    sleep 1\n    do_start\n}\ncase \"$1\" in\nstart)\n  net_ts\n#这里验证网络是否连通，连通了才启动frp\n  while [ $netstate -lt 0 ];\n  do\n    echo 请检查网络，将在5秒后重试\n    sleep 5\n    net_ts\n  done\n  do_start\n   ;;\nstop)\n   do_stop\n   ;;\nstatus)\n  exit $?\n  ;;\nrestart)\n  do_restart\n  ;;\n*)\n   echo \"Usage:service frp {start|stop|restart|status}\" >&2\n   exit 1\n   ;;\nesac\nexit 0\nEOF\n\nsudo chmod +x /etc/init.d/frp\nsudo systemctl daemon-reload\nsudo update-rc.d frp defaults\nsudo service frp start\n```\n\nfrp服务已经启动  \n现在试试能否从外网访问  \n一切正常的话你就可以从外网看到刚才那个漂亮的前端  \n开始你的下载吧  \nfrp还有很多玩法，有兴趣的朋友可以去项目地址看看，有中文说明.  \n\n**第一次写教程,写的不好的地方请多包涵,之后我还会写在树莓派上安装hexo博客的教程,记得来看哦.**\n","source":"_posts/raspberrypi-how.md","raw":"---\ntitle: 树莓派：samba文件共享、frp内网穿透、lighttpd、aria2c下载器（AriaNg前端）安装教程\ndate: 2018-3-12 1:08:00\ntags: 各种Pi\n---\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近拿到了一个树莓派3B，想要做成NAS以及下载机，我这个人平时喜欢看美剧，每次下载都要先开电脑打开浏览器找资源迅雷下载，有时候用手机找到资源了还是得开电脑，毕竟手机不适合用来下BT，于是有了这个想法，一开始还装了[Nextcloud的树莓派版](https://ownyourbits.com/nextcloudpi/)(需要的童鞋可以进去看（需翻墙）)（2018-12-20更新：现在看官网把这个部分已经做的很完善了，占用可能也不高了），网盘下载前端倒是什么都有了，就是觉着太臃肿，web服务器用的居然还是apache，占用可想而知，到后来每次链接ssh都要接近半分钟，运行一个python脚本更是要到一分钟，那就是几行的脚本啊。后来想nextcloud其实没什么用，我只要能下载和共享文件就可以了。  \n<!--more-->\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;于是就有了这个教程，我打算用lighttpd作web服务器，上面放hexo博客（毕竟有了frp）和[aria2c前端](http://ariang.mayswind.net/zh_Hans/)，通过frp连接到我的阿里云主机，那里有公网IP，这样一来我可以在任何地方访问我的树莓派叫它下美剧，真是很幸福的一件事。  \n\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;废话不多说，下面开始教程，我用的系统是raspbian-stretch-lite，最少占用嘛，桌面也是不需要的。  \n\n# **第一部分：samba文件共享**\n\n* ## 挂载硬盘  \n\n查看设备列表：\n\n```bash\nsudo fdisk -l\n```\n\n这时候会列出所有挂载的设备（告诉我你已经插上硬盘了）然后找到硬盘的标识，一般是/dev/sda1，然后记下来  \n挂载硬盘：\n\n```bash\nsudo mount /dev/sda1 /media\n```\n\n查看现有磁盘信息，看是否挂载成功:\n\n```bash\ndf -T\n```\n\n* ## 更换软件安装源到国内  \n\n少数情况后面的安装会出现apt-get install安装失败，这个时候就需要把安装源替换成国内源，速度也会更快  \n\n备份原列表\n\n```bash\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak\nsudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak\n```\n\n编辑文件：\n\n```bash\nsudo sed -i 's#://raspbian.raspberrypi.org#s://mirrors.tuna.tsinghua.edu.cn/raspbian#g' /etc/apt/sources.list\nsudo sed -i 's#://archive.raspberrypi.org/debian#s://mirrors.tuna.tsinghua.edu.cn/raspberrypi#g' /etc/apt/sources.list.d/raspi.list\n```\n\n然后执行更新让更改生效:\n\n```bash\nsudo apt-get update\n```\n\n* ## samba安装及配置\n\n根据需要修改下面配置文件  \n[MyNAS]是电脑上可以看到的名称  \n共享路径是挂载硬盘的路径所以我用的是/media  \n其他可以不用管  \n全部复制到终端即可：  \n（我用了echo命令来写配置文件，当然用nano、vim、vi都是可以的，看各位喜欢）\n\n```bash\nsudo apt-get install samba -y #安装samba\nsudo echo \"\n    # 分享名称\n    [MyNAS]\n    # 说明信息\n    comment = NAS Storage\n    # 可以访问的用户\n    valid users = pi,root\n    # 共享文件的路径。\n    path = /media\n    # 可被其他人看到资源名称（非内容）\n    browseable = yes\n    # 可写\n    writable = yes\n    # 新建文件的权限为 664\n    create mask = 0664\n    # 新建目录的权限为 775\n    directory mask = 0775\n\"  >> /etc/samba/smb.conf\n\n```\n\n测试配置文件是否有错误，根据提示做相应修改：\n\n```bash\ntestparm\n```\n添加登陆账户并创建密码，必须是 linux 已存在的用户，密码不一定要和系统一样，只是登录samba用的。\n\n```bash\nsudo smbpasswd -a pi\n```\n\n输入两次密码  \n\n重载 samba 服务：\n\n```bash\nsudo service samba reload\n```\n\n让samba开机启动：\n\n```bash\nsudo update-rc.d samba defaults\n```\n\n# **第二部分：aria2下载器**\n\n* ## aria2配置及安装\n\n安装aria2\n\n```bash\nsudo apt-get install aria2 -y\n```\n\n创建 session 和配置文件：\n\n```bash\nmkdir ~/.aria2\ntouch ~/.aria2/aria2.session\ntouch ~/.aria2/aria2.conf\n```\n\n写入配置文件aria2.conf,注意如果用户名不是pi的话需要改下面的对应文件路径：\n\n```bash\necho \"\n\n## 文件保存相关 ##\n\n# 文件保存目录\ndir=/media/Download\n# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M\ndisk-cache=32M\n# 断点续传\ncontinue=true\n\n# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc\n# 预分配所需时间: none < falloc ? trunc < prealloc\n# falloc和trunc则需要文件系统和内核支持\n# NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项\n#file-allocation=falloc\n\n## 下载连接相关 ##\n\n# 最大同时下载任务数, 运行时可修改, 默认:5\n#max-concurrent-downloads=5\n# 同一服务器连接数, 添加时可指定, 默认:1\nmax-connection-per-server=15\n# 整体下载速度限制, 运行时可修改, 默认:0（不限制）\n#max-overall-download-limit=0\n# 单个任务下载速度限制, 默认:0（不限制）\n#max-download-limit=0\n# 整体上传速度限制, 运行时可修改, 默认:0（不限制）\n#max-overall-upload-limit=0\n# 单个任务上传速度限制, 默认:0（不限制）\n#max-upload-limit=0\n# 禁用IPv6, 默认:false\ndisable-ipv6=true\n\n# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M\n# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载\nmin-split-size=10M\n# 单个任务最大线程数, 添加时可指定, 默认:5\nsplit=10\n\n## 进度保存相关 ##\n\n# 从会话文件中读取下载任务\ninput-file=/home/pi/.aria2/aria2.session\n# 在Aria2退出时保存错误的、未完成的下载任务到会话文件\nsave-session=/home/pi/.aria2/aria2.session\n# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0\nsave-session-interval=60\n\n## RPC相关设置 ##\n\n# 启用RPC, 默认:false\nenable-rpc=true\n# 允许所有来源, 默认:false\nrpc-allow-origin-all=true\n# 允许外部访问, 默认:false\nrpc-listen-all=true\n# RPC端口, 仅当默认端口被占用时修改\n# rpc-listen-port=6800\n# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项\n#rpc-secret=<TOKEN>\n\n## BT/PT下载相关 ##\n\n# 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true\n#follow-torrent=true\n# 客户端伪装, PT需要\npeer-id-prefix=-TR2770-\nuser-agent=Transmission/2.77\n# 强制保存会话, 即使任务已经完成, 默认:false\n# 较新的版本开启后会在任务完成后依然保留.aria2文件\n#force-save=false\n# 继续之前的BT任务时, 无需再次校验, 默认:false\nbt-seed-unverified=true\n# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false\nbt-save-metadata=true\n\" >> ~/.aria2/aria2.conf\n```\n\n然后执行：\n\n```bash\naria2c --conf-path=/home/pi/.aria2/aria2.conf -D\n```\n\n没有任何提示则表示成功，Ctrl+C退出。  \n接下来作为服务添加开机自启，注意路径是否正确：\n\n```bash\nsudo tee /etc/init.d/aria2c <<-'EOF'\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides:          aria2\n# Required-Start:    $remote_fs $network\n# Required-Stop:     $remote_fs $network\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Aria2 Downloader\n### END INIT INFO\ndo_start()\n{\n        echo -n \"Starting aria2c\"\n             su pi -c \"aria2c --conf-path=/home/pi/.aria2/aria2.conf &\"\n#这里的路径只能用绝对路径所以用户名不是pi的记得来这里修改\n}\ndo_stop()\n{\n     echo -n \"Shutting down aria2c \"\n        pkill -f aria2c\n}\ndo_restart() {\n    do_stop\n    sleep 1\n    do_start\n}\ncase \"$1\" in\nstart)\n   do_start\n   ;;\nstop)\n   do_stop\n   ;;\nstatus)\n  exit $?\n  ;;\nrestart)\n  do_restart\n  ;;\n*)\n   echo \"Usage: service aria2c {start|stop|status|restart}\" >&2\n   exit 1\n   ;;\nesac\nexit\nEOF\nsudo chmod +x /etc/init.d/aria2c\nsudo update-rc.d aria2c defaults\nsudo service aria2c start\n```\n\n这个时候aria2已经添加到开机启动并已经启动  \n以后想要管理aria2只需要输入对应命令即可\n\n```bash\n#启动aria2服务\nsudo service aria2c start \n#停止aria2服务\nsudo service aria2c stop \n#查看aria2服务状态\nsudo service aria2c status \n```\n同样的命令把aria2c替换成其他名称用来管理samba和等下要装的frp都是可以的  \n\n> 参考：https://www.jianshu.com/p/03f8022453a5\n\n* ## 网页前端（lighttpd和[ariaNg](http://ariang.mayswind.net/zh_Hans/)）\n\n安装lighttpd并设为默认启动：  \n\n```bash\nsudo apt-get install lighttpd -y\nsudo update-rc.d lighttpd defaults\n```\n\n安装好lighttpd后默认已经开启网页服务，接下来放aria2前端\n\n```bash\ncd /var/www/html\nsudo wget https://github.com/mayswind/AriaNg/releases/download/0.4.0/aria-ng-0.4.0.zip\nsudo unzip aria-ng-0.4.0.zip\n#顺便删除压缩包\nrm aria-ng-0.4.0.zip\n```\n\n现在用浏览器打开树莓派IP，你就可以看到一个漂亮的前端,以后就用它管理下载  \n至此，一个内网NAS已经搭建完成，轻量化，超小占用。  \n当然还没完，我们要做的是能从外网访问的下载器。\n</br>\n\n# **第三部分：内网穿透frp**  \n\n关于frp\n\n英文全称：fast reverse proxy\n中文全称：快速反向代理\n简称：frp\nfrp 是一个可用于内网穿透的高性能反向代理应用，支持 tcp, udp, http, https 协议.\n\nfrp 的作用\n利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。\n对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。\n利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。\n\nfrp为免费且开源项目，需要自己利用一台拥有公网IP机器搭建服务端，以部署内网穿透项目。\n\n项目链接：https://github.com/fatedier/frp/\n\n科普完了,没有公网IP服务器的童鞋这里推荐一个免费的公共服务:https://www.nat.ee/\n\n* ## frp客户端安装\n\n可以自己到[releases](http://github.com/fatedier/frp/releases)页面找最新版链接\n\n```bash\ncd ~\nwget http://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_arm.tar.gz\ntar -xvf frp_0.16.0_linux_arm.tar.gz\nsudo mv frp_0.16.0_linux_arm/ /etc/frp\n```\n\n编辑配置文件\n\n```bash\nsudo nano /etc/frp/frpc.ini\n```\n\n根据nat.ee提供的配置文件,这里提供一个http的例子  \n把中文都换掉,自定义域太简单可能会因为被占用无法启动,记得换个复杂点的\n\n```bash\n#http-自定义配置-示例\n[common]\nserver_addr = nat.ee\nserver_port = 7000\nprivilege_token = www.nat.ee\nuser = 自定义用户名称\n\n[自定义服务名称]\ntype = http\nlocal_port = 80\nlocal_ip = 127.0.0.1\ncustom_domains = 自定义域.nat.ee\n```  \n\nCtrl+O保存，Ctrl+X退出  \n测试一下是否运行正常:  \n\n```bash\nsudo /etc/frp/frpc -c /etc/frp/frpc.ini\n```\n\n如果输出结果带有\"start proxy success\"则表示连接成功  \nCtrl+C关闭  \n添加frp为服务并自动启动:  \n(我在里面加了判断网络是否连接的脚本\"net_ts\",终于解决了开机启动时没网络导致启动失败的问题)\n\n```bash\nsudo tee /etc/init.d/frp <<-'EOF'\n#!/bin/sh\n### BEGIN INIT INFO\n# Provides:         frp\n# Required-Start:    $network $local_fs $remote_fs $named $portmap $syslog\n# Required-Stop::    $network $local_fs $remote_fs\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Start frp at boot time\n# Description:       A porxy clint\n### END INIT INFO\nnet_ts()\n{\n    #超时时间\n    timeout=5\n\n    #目标网站\n    target=baidu.com\n\n    #获取响应状态码\n    ret_code=`curl -I -s --connect-timeout $timeout $target -w %{http_code} | tail -n1`\n\n    if [ \"x$ret_code\" = \"x200\" ]; then\n        echo 网络畅通\n\tnetstate='1'\n    else\n        echo 网络不畅通\n\tnetstate='0'\n    fi\n}\ndo_start()\n{\n        echo \"starting frp.\"\n        /etc/frp/frpc -c /etc/frp/frpc.ini &\n\n}\ndo_stop()\n{\n      pkill -f /etc/frp/frpc\n      echo \"stop complete.\"\n}\ndo_restart() {\n    do_stop\n    sleep 1\n    do_start\n}\ncase \"$1\" in\nstart)\n  net_ts\n#这里验证网络是否连通，连通了才启动frp\n  while [ $netstate -lt 0 ];\n  do\n    echo 请检查网络，将在5秒后重试\n    sleep 5\n    net_ts\n  done\n  do_start\n   ;;\nstop)\n   do_stop\n   ;;\nstatus)\n  exit $?\n  ;;\nrestart)\n  do_restart\n  ;;\n*)\n   echo \"Usage:service frp {start|stop|restart|status}\" >&2\n   exit 1\n   ;;\nesac\nexit 0\nEOF\n\nsudo chmod +x /etc/init.d/frp\nsudo systemctl daemon-reload\nsudo update-rc.d frp defaults\nsudo service frp start\n```\n\nfrp服务已经启动  \n现在试试能否从外网访问  \n一切正常的话你就可以从外网看到刚才那个漂亮的前端  \n开始你的下载吧  \nfrp还有很多玩法，有兴趣的朋友可以去项目地址看看，有中文说明.  \n\n**第一次写教程,写的不好的地方请多包涵,之后我还会写在树莓派上安装hexo博客的教程,记得来看哦.**\n","slug":"raspberrypi-how","published":1,"updated":"2019-06-24T16:02:13.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck023se7c000l0guybfzybkt7","content":"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近拿到了一个树莓派3B，想要做成NAS以及下载机，我这个人平时喜欢看美剧，每次下载都要先开电脑打开浏览器找资源迅雷下载，有时候用手机找到资源了还是得开电脑，毕竟手机不适合用来下BT，于是有了这个想法，一开始还装了<a href=\"https://ownyourbits.com/nextcloudpi/\" target=\"_blank\" rel=\"noopener\">Nextcloud的树莓派版</a>(需要的童鞋可以进去看（需翻墙）)（2018-12-20更新：现在看官网把这个部分已经做的很完善了，占用可能也不高了），网盘下载前端倒是什么都有了，就是觉着太臃肿，web服务器用的居然还是apache，占用可想而知，到后来每次链接ssh都要接近半分钟，运行一个python脚本更是要到一分钟，那就是几行的脚本啊。后来想nextcloud其实没什么用，我只要能下载和共享文件就可以了。<br><a id=\"more\"></a><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;于是就有了这个教程，我打算用lighttpd作web服务器，上面放hexo博客（毕竟有了frp）和<a href=\"http://ariang.mayswind.net/zh_Hans/\" target=\"_blank\" rel=\"noopener\">aria2c前端</a>，通过frp连接到我的阿里云主机，那里有公网IP，这样一来我可以在任何地方访问我的树莓派叫它下美剧，真是很幸福的一件事。  </p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;废话不多说，下面开始教程，我用的系统是raspbian-stretch-lite，最少占用嘛，桌面也是不需要的。  </p>\n<h1 id=\"第一部分：samba文件共享\"><a href=\"#第一部分：samba文件共享\" class=\"headerlink\" title=\"第一部分：samba文件共享\"></a><strong>第一部分：samba文件共享</strong></h1><ul>\n<li><h2 id=\"挂载硬盘\"><a href=\"#挂载硬盘\" class=\"headerlink\" title=\"挂载硬盘\"></a>挂载硬盘</h2></li>\n</ul>\n<p>查看设备列表：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fdisk -l</span><br></pre></td></tr></table></figure>\n<p>这时候会列出所有挂载的设备（告诉我你已经插上硬盘了）然后找到硬盘的标识，一般是/dev/sda1，然后记下来<br>挂载硬盘：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/sda1 /media</span><br></pre></td></tr></table></figure>\n<p>查看现有磁盘信息，看是否挂载成功:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -T</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h2 id=\"更换软件安装源到国内\"><a href=\"#更换软件安装源到国内\" class=\"headerlink\" title=\"更换软件安装源到国内\"></a>更换软件安装源到国内</h2></li>\n</ul>\n<p>少数情况后面的安装会出现apt-get install安装失败，这个时候就需要把安装源替换成国内源，速度也会更快  </p>\n<p>备份原列表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class=\"line\">sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak</span><br></pre></td></tr></table></figure>\n<p>编辑文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sed -i <span class=\"string\">'s#://raspbian.raspberrypi.org#s://mirrors.tuna.tsinghua.edu.cn/raspbian#g'</span> /etc/apt/sources.list</span><br><span class=\"line\">sudo sed -i <span class=\"string\">'s#://archive.raspberrypi.org/debian#s://mirrors.tuna.tsinghua.edu.cn/raspberrypi#g'</span> /etc/apt/sources.list.d/raspi.list</span><br></pre></td></tr></table></figure>\n<p>然后执行更新让更改生效:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h2 id=\"samba安装及配置\"><a href=\"#samba安装及配置\" class=\"headerlink\" title=\"samba安装及配置\"></a>samba安装及配置</h2></li>\n</ul>\n<p>根据需要修改下面配置文件<br>[MyNAS]是电脑上可以看到的名称<br>共享路径是挂载硬盘的路径所以我用的是/media<br>其他可以不用管<br>全部复制到终端即可：<br>（我用了echo命令来写配置文件，当然用nano、vim、vi都是可以的，看各位喜欢）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install samba -y <span class=\"comment\">#安装samba</span></span><br><span class=\"line\">sudo <span class=\"built_in\">echo</span> <span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">    # 分享名称</span></span><br><span class=\"line\"><span class=\"string\">    [MyNAS]</span></span><br><span class=\"line\"><span class=\"string\">    # 说明信息</span></span><br><span class=\"line\"><span class=\"string\">    comment = NAS Storage</span></span><br><span class=\"line\"><span class=\"string\">    # 可以访问的用户</span></span><br><span class=\"line\"><span class=\"string\">    valid users = pi,root</span></span><br><span class=\"line\"><span class=\"string\">    # 共享文件的路径。</span></span><br><span class=\"line\"><span class=\"string\">    path = /media</span></span><br><span class=\"line\"><span class=\"string\">    # 可被其他人看到资源名称（非内容）</span></span><br><span class=\"line\"><span class=\"string\">    browseable = yes</span></span><br><span class=\"line\"><span class=\"string\">    # 可写</span></span><br><span class=\"line\"><span class=\"string\">    writable = yes</span></span><br><span class=\"line\"><span class=\"string\">    # 新建文件的权限为 664</span></span><br><span class=\"line\"><span class=\"string\">    create mask = 0664</span></span><br><span class=\"line\"><span class=\"string\">    # 新建目录的权限为 775</span></span><br><span class=\"line\"><span class=\"string\">    directory mask = 0775</span></span><br><span class=\"line\"><span class=\"string\">\"</span>  &gt;&gt; /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>\n<p>测试配置文件是否有错误，根据提示做相应修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testparm</span><br></pre></td></tr></table></figure>\n<p>添加登陆账户并创建密码，必须是 linux 已存在的用户，密码不一定要和系统一样，只是登录samba用的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure>\n<p>输入两次密码  </p>\n<p>重载 samba 服务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service samba reload</span><br></pre></td></tr></table></figure>\n<p>让samba开机启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-rc.d samba defaults</span><br></pre></td></tr></table></figure>\n<h1 id=\"第二部分：aria2下载器\"><a href=\"#第二部分：aria2下载器\" class=\"headerlink\" title=\"第二部分：aria2下载器\"></a><strong>第二部分：aria2下载器</strong></h1><ul>\n<li><h2 id=\"aria2配置及安装\"><a href=\"#aria2配置及安装\" class=\"headerlink\" title=\"aria2配置及安装\"></a>aria2配置及安装</h2></li>\n</ul>\n<p>安装aria2</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install aria2 -y</span><br></pre></td></tr></table></figure>\n<p>创建 session 和配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.aria2</span><br><span class=\"line\">touch ~/.aria2/aria2.session</span><br><span class=\"line\">touch ~/.aria2/aria2.conf</span><br></pre></td></tr></table></figure>\n<p>写入配置文件aria2.conf,注意如果用户名不是pi的话需要改下面的对应文件路径：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## 文件保存相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 文件保存目录</span></span><br><span class=\"line\"><span class=\"string\">dir=/media/Download</span></span><br><span class=\"line\"><span class=\"string\"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class=\"line\"><span class=\"string\">disk-cache=32M</span></span><br><span class=\"line\"><span class=\"string\"># 断点续传</span></span><br><span class=\"line\"><span class=\"string\">continue=true</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class=\"line\"><span class=\"string\"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class=\"line\"><span class=\"string\"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class=\"line\"><span class=\"string\"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class=\"line\"><span class=\"string\">#file-allocation=falloc</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## 下载连接相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class=\"line\"><span class=\"string\">#max-concurrent-downloads=5</span></span><br><span class=\"line\"><span class=\"string\"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class=\"line\"><span class=\"string\">max-connection-per-server=15</span></span><br><span class=\"line\"><span class=\"string\"># 整体下载速度限制, 运行时可修改, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-overall-download-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 单个任务下载速度限制, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-download-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 整体上传速度限制, 运行时可修改, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-overall-upload-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 单个任务上传速度限制, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-upload-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 禁用IPv6, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">disable-ipv6=true</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class=\"line\"><span class=\"string\"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class=\"line\"><span class=\"string\">min-split-size=10M</span></span><br><span class=\"line\"><span class=\"string\"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class=\"line\"><span class=\"string\">split=10</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## 进度保存相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 从会话文件中读取下载任务</span></span><br><span class=\"line\"><span class=\"string\">input-file=/home/pi/.aria2/aria2.session</span></span><br><span class=\"line\"><span class=\"string\"># 在Aria2退出时保存错误的、未完成的下载任务到会话文件</span></span><br><span class=\"line\"><span class=\"string\">save-session=/home/pi/.aria2/aria2.session</span></span><br><span class=\"line\"><span class=\"string\"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class=\"line\"><span class=\"string\">save-session-interval=60</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## RPC相关设置 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 启用RPC, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">enable-rpc=true</span></span><br><span class=\"line\"><span class=\"string\"># 允许所有来源, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">rpc-allow-origin-all=true</span></span><br><span class=\"line\"><span class=\"string\"># 允许外部访问, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">rpc-listen-all=true</span></span><br><span class=\"line\"><span class=\"string\"># RPC端口, 仅当默认端口被占用时修改</span></span><br><span class=\"line\"><span class=\"string\"># rpc-listen-port=6800</span></span><br><span class=\"line\"><span class=\"string\"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class=\"line\"><span class=\"string\">#rpc-secret=&lt;TOKEN&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## BT/PT下载相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class=\"line\"><span class=\"string\">#follow-torrent=true</span></span><br><span class=\"line\"><span class=\"string\"># 客户端伪装, PT需要</span></span><br><span class=\"line\"><span class=\"string\">peer-id-prefix=-TR2770-</span></span><br><span class=\"line\"><span class=\"string\">user-agent=Transmission/2.77</span></span><br><span class=\"line\"><span class=\"string\"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class=\"line\"><span class=\"string\"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class=\"line\"><span class=\"string\">#force-save=false</span></span><br><span class=\"line\"><span class=\"string\"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">bt-seed-unverified=true</span></span><br><span class=\"line\"><span class=\"string\"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class=\"line\"><span class=\"string\">bt-save-metadata=true</span></span><br><span class=\"line\"><span class=\"string\">\"</span> &gt;&gt; ~/.aria2/aria2.conf</span><br></pre></td></tr></table></figure>\n<p>然后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aria2c --conf-path=/home/pi/.aria2/aria2.conf -D</span><br></pre></td></tr></table></figure>\n<p>没有任何提示则表示成功，Ctrl+C退出。<br>接下来作为服务添加开机自启，注意路径是否正确：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/init.d/aria2c &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">### BEGIN INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># Provides:          aria2</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Start:    $remote_fs $network</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Stop:     $remote_fs $network</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Start:     2 3 4 5</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Stop:      0 1 6</span></span><br><span class=\"line\"><span class=\"comment\"># Short-Description: Aria2 Downloader</span></span><br><span class=\"line\"><span class=\"comment\">### END INIT INFO</span></span><br><span class=\"line\">do_start()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Starting aria2c\"</span></span><br><span class=\"line\">             su pi -c <span class=\"string\">\"aria2c --conf-path=/home/pi/.aria2/aria2.conf &amp;\"</span></span><br><span class=\"line\"><span class=\"comment\">#这里的路径只能用绝对路径所以用户名不是pi的记得来这里修改</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">do_stop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Shutting down aria2c \"</span></span><br><span class=\"line\">        pkill -f aria2c</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_restart</span></span>() &#123;</span><br><span class=\"line\">    do_stop</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    do_start</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">start)</span><br><span class=\"line\">   do_start</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">   do_stop</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">status)</span><br><span class=\"line\">  <span class=\"built_in\">exit</span> $?</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">restart)</span><br><span class=\"line\">  do_restart</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: service aria2c &#123;start|stop|status|restart&#125;\"</span> &gt;&amp;2</span><br><span class=\"line\">   <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">   ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo chmod +x /etc/init.d/aria2c</span><br><span class=\"line\">sudo update-rc.d aria2c defaults</span><br><span class=\"line\">sudo service aria2c start</span><br></pre></td></tr></table></figure>\n<p>这个时候aria2已经添加到开机启动并已经启动<br>以后想要管理aria2只需要输入对应命令即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#启动aria2服务</span></span><br><span class=\"line\">sudo service aria2c start </span><br><span class=\"line\"><span class=\"comment\">#停止aria2服务</span></span><br><span class=\"line\">sudo service aria2c stop </span><br><span class=\"line\"><span class=\"comment\">#查看aria2服务状态</span></span><br><span class=\"line\">sudo service aria2c status</span><br></pre></td></tr></table></figure>\n<p>同样的命令把aria2c替换成其他名称用来管理samba和等下要装的frp都是可以的  </p>\n<blockquote>\n<p>参考：<a href=\"https://www.jianshu.com/p/03f8022453a5\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/03f8022453a5</a></p>\n</blockquote>\n<ul>\n<li><h2 id=\"网页前端（lighttpd和ariaNg）\"><a href=\"#网页前端（lighttpd和ariaNg）\" class=\"headerlink\" title=\"网页前端（lighttpd和ariaNg）\"></a>网页前端（lighttpd和<a href=\"http://ariang.mayswind.net/zh_Hans/\" target=\"_blank\" rel=\"noopener\">ariaNg</a>）</h2></li>\n</ul>\n<p>安装lighttpd并设为默认启动：  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lighttpd -y</span><br><span class=\"line\">sudo update-rc.d lighttpd defaults</span><br></pre></td></tr></table></figure>\n<p>安装好lighttpd后默认已经开启网页服务，接下来放aria2前端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</span><br><span class=\"line\">sudo wget https://github.com/mayswind/AriaNg/releases/download/0.4.0/aria-ng-0.4.0.zip</span><br><span class=\"line\">sudo unzip aria-ng-0.4.0.zip</span><br><span class=\"line\"><span class=\"comment\">#顺便删除压缩包</span></span><br><span class=\"line\">rm aria-ng-0.4.0.zip</span><br></pre></td></tr></table></figure>\n<p>现在用浏览器打开树莓派IP，你就可以看到一个漂亮的前端,以后就用它管理下载<br>至此，一个内网NAS已经搭建完成，轻量化，超小占用。<br>当然还没完，我们要做的是能从外网访问的下载器。<br><br></p>\n<h1 id=\"第三部分：内网穿透frp\"><a href=\"#第三部分：内网穿透frp\" class=\"headerlink\" title=\"第三部分：内网穿透frp\"></a><strong>第三部分：内网穿透frp</strong></h1><p>关于frp</p>\n<p>英文全称：fast reverse proxy<br>中文全称：快速反向代理<br>简称：frp<br>frp 是一个可用于内网穿透的高性能反向代理应用，支持 tcp, udp, http, https 协议.</p>\n<p>frp 的作用<br>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。<br>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。<br>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p>\n<p>frp为免费且开源项目，需要自己利用一台拥有公网IP机器搭建服务端，以部署内网穿透项目。</p>\n<p>项目链接：<a href=\"https://github.com/fatedier/frp/\" target=\"_blank\" rel=\"noopener\">https://github.com/fatedier/frp/</a></p>\n<p>科普完了,没有公网IP服务器的童鞋这里推荐一个免费的公共服务:<a href=\"https://www.nat.ee/\" target=\"_blank\" rel=\"noopener\">https://www.nat.ee/</a></p>\n<ul>\n<li><h2 id=\"frp客户端安装\"><a href=\"#frp客户端安装\" class=\"headerlink\" title=\"frp客户端安装\"></a>frp客户端安装</h2></li>\n</ul>\n<p>可以自己到<a href=\"http://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">releases</a>页面找最新版链接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget http://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_arm.tar.gz</span><br><span class=\"line\">tar -xvf frp_0.16.0_linux_arm.tar.gz</span><br><span class=\"line\">sudo mv frp_0.16.0_linux_arm/ /etc/frp</span><br></pre></td></tr></table></figure>\n<p>编辑配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>\n<p>根据nat.ee提供的配置文件,这里提供一个http的例子<br>把中文都换掉,自定义域太简单可能会因为被占用无法启动,记得换个复杂点的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#http-自定义配置-示例</span></span><br><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = nat.ee</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\">privilege_token = www.nat.ee</span><br><span class=\"line\">user = 自定义用户名称</span><br><span class=\"line\"></span><br><span class=\"line\">[自定义服务名称]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = http</span><br><span class=\"line\">local_port = 80</span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">custom_domains = 自定义域.nat.ee</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">Ctrl+O保存，Ctrl+X退出  </span><br><span class=\"line\">测试一下是否运行正常:  </span><br><span class=\"line\"></span><br><span class=\"line\">```bash</span><br><span class=\"line\">sudo /etc/frp/frpc -c /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>\n<p>如果输出结果带有”start proxy success”则表示连接成功<br>Ctrl+C关闭<br>添加frp为服务并自动启动:<br>(我在里面加了判断网络是否连接的脚本”net_ts”,终于解决了开机启动时没网络导致启动失败的问题)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/init.d/frp &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">### BEGIN INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># Provides:         frp</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Start:    $network $local_fs $remote_fs $named $portmap $syslog</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Stop::    $network $local_fs $remote_fs</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Start:     2 3 4 5</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Stop:      0 1 6</span></span><br><span class=\"line\"><span class=\"comment\"># Short-Description: Start frp at boot time</span></span><br><span class=\"line\"><span class=\"comment\"># Description:       A porxy clint</span></span><br><span class=\"line\"><span class=\"comment\">### END INIT INFO</span></span><br><span class=\"line\">net_ts()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">#超时时间</span></span><br><span class=\"line\">    timeout=5</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#目标网站</span></span><br><span class=\"line\">    target=baidu.com</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#获取响应状态码</span></span><br><span class=\"line\">    ret_code=`curl -I -s --connect-timeout <span class=\"variable\">$timeout</span> <span class=\"variable\">$target</span> -w %&#123;http_code&#125; | tail -n1`</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"x<span class=\"variable\">$ret_code</span>\"</span> = <span class=\"string\">\"x200\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> 网络畅通</span><br><span class=\"line\">\tnetstate=<span class=\"string\">'1'</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> 网络不畅通</span><br><span class=\"line\">\tnetstate=<span class=\"string\">'0'</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">do_start()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"starting frp.\"</span></span><br><span class=\"line\">        /etc/frp/frpc -c /etc/frp/frpc.ini &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">do_stop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      pkill -f /etc/frp/frpc</span><br><span class=\"line\">      <span class=\"built_in\">echo</span> <span class=\"string\">\"stop complete.\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_restart</span></span>() &#123;</span><br><span class=\"line\">    do_stop</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    do_start</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">start)</span><br><span class=\"line\">  net_ts</span><br><span class=\"line\"><span class=\"comment\">#这里验证网络是否连通，连通了才启动frp</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> [ <span class=\"variable\">$netstate</span> -lt 0 ];</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> 请检查网络，将在5秒后重试</span><br><span class=\"line\">    sleep 5</span><br><span class=\"line\">    net_ts</span><br><span class=\"line\">  <span class=\"keyword\">done</span></span><br><span class=\"line\">  do_start</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">   do_stop</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">status)</span><br><span class=\"line\">  <span class=\"built_in\">exit</span> $?</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">restart)</span><br><span class=\"line\">  do_restart</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage:service frp &#123;start|stop|restart|status&#125;\"</span> &gt;&amp;2</span><br><span class=\"line\">   <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">   ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /etc/init.d/frp</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo update-rc.d frp defaults</span><br><span class=\"line\">sudo service frp start</span><br></pre></td></tr></table></figure>\n<p>frp服务已经启动<br>现在试试能否从外网访问<br>一切正常的话你就可以从外网看到刚才那个漂亮的前端<br>开始你的下载吧<br>frp还有很多玩法，有兴趣的朋友可以去项目地址看看，有中文说明.  </p>\n<p><strong>第一次写教程,写的不好的地方请多包涵,之后我还会写在树莓派上安装hexo博客的教程,记得来看哦.</strong></p>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n"}},"excerpt":"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近拿到了一个树莓派3B，想要做成NAS以及下载机，我这个人平时喜欢看美剧，每次下载都要先开电脑打开浏览器找资源迅雷下载，有时候用手机找到资源了还是得开电脑，毕竟手机不适合用来下BT，于是有了这个想法，一开始还装了<a href=\"https://ownyourbits.com/nextcloudpi/\" target=\"_blank\" rel=\"noopener\">Nextcloud的树莓派版</a>(需要的童鞋可以进去看（需翻墙）)（2018-12-20更新：现在看官网把这个部分已经做的很完善了，占用可能也不高了），网盘下载前端倒是什么都有了，就是觉着太臃肿，web服务器用的居然还是apache，占用可想而知，到后来每次链接ssh都要接近半分钟，运行一个python脚本更是要到一分钟，那就是几行的脚本啊。后来想nextcloud其实没什么用，我只要能下载和共享文件就可以了。<br>","more":"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;于是就有了这个教程，我打算用lighttpd作web服务器，上面放hexo博客（毕竟有了frp）和<a href=\"http://ariang.mayswind.net/zh_Hans/\" target=\"_blank\" rel=\"noopener\">aria2c前端</a>，通过frp连接到我的阿里云主机，那里有公网IP，这样一来我可以在任何地方访问我的树莓派叫它下美剧，真是很幸福的一件事。  </p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;废话不多说，下面开始教程，我用的系统是raspbian-stretch-lite，最少占用嘛，桌面也是不需要的。  </p>\n<h1 id=\"第一部分：samba文件共享\"><a href=\"#第一部分：samba文件共享\" class=\"headerlink\" title=\"第一部分：samba文件共享\"></a><strong>第一部分：samba文件共享</strong></h1><ul>\n<li><h2 id=\"挂载硬盘\"><a href=\"#挂载硬盘\" class=\"headerlink\" title=\"挂载硬盘\"></a>挂载硬盘</h2></li>\n</ul>\n<p>查看设备列表：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fdisk -l</span><br></pre></td></tr></table></figure>\n<p>这时候会列出所有挂载的设备（告诉我你已经插上硬盘了）然后找到硬盘的标识，一般是/dev/sda1，然后记下来<br>挂载硬盘：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/sda1 /media</span><br></pre></td></tr></table></figure>\n<p>查看现有磁盘信息，看是否挂载成功:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">df -T</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h2 id=\"更换软件安装源到国内\"><a href=\"#更换软件安装源到国内\" class=\"headerlink\" title=\"更换软件安装源到国内\"></a>更换软件安装源到国内</h2></li>\n</ul>\n<p>少数情况后面的安装会出现apt-get install安装失败，这个时候就需要把安装源替换成国内源，速度也会更快  </p>\n<p>备份原列表</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class=\"line\">sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak</span><br></pre></td></tr></table></figure>\n<p>编辑文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sed -i <span class=\"string\">'s#://raspbian.raspberrypi.org#s://mirrors.tuna.tsinghua.edu.cn/raspbian#g'</span> /etc/apt/sources.list</span><br><span class=\"line\">sudo sed -i <span class=\"string\">'s#://archive.raspberrypi.org/debian#s://mirrors.tuna.tsinghua.edu.cn/raspberrypi#g'</span> /etc/apt/sources.list.d/raspi.list</span><br></pre></td></tr></table></figure>\n<p>然后执行更新让更改生效:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h2 id=\"samba安装及配置\"><a href=\"#samba安装及配置\" class=\"headerlink\" title=\"samba安装及配置\"></a>samba安装及配置</h2></li>\n</ul>\n<p>根据需要修改下面配置文件<br>[MyNAS]是电脑上可以看到的名称<br>共享路径是挂载硬盘的路径所以我用的是/media<br>其他可以不用管<br>全部复制到终端即可：<br>（我用了echo命令来写配置文件，当然用nano、vim、vi都是可以的，看各位喜欢）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install samba -y <span class=\"comment\">#安装samba</span></span><br><span class=\"line\">sudo <span class=\"built_in\">echo</span> <span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">    # 分享名称</span></span><br><span class=\"line\"><span class=\"string\">    [MyNAS]</span></span><br><span class=\"line\"><span class=\"string\">    # 说明信息</span></span><br><span class=\"line\"><span class=\"string\">    comment = NAS Storage</span></span><br><span class=\"line\"><span class=\"string\">    # 可以访问的用户</span></span><br><span class=\"line\"><span class=\"string\">    valid users = pi,root</span></span><br><span class=\"line\"><span class=\"string\">    # 共享文件的路径。</span></span><br><span class=\"line\"><span class=\"string\">    path = /media</span></span><br><span class=\"line\"><span class=\"string\">    # 可被其他人看到资源名称（非内容）</span></span><br><span class=\"line\"><span class=\"string\">    browseable = yes</span></span><br><span class=\"line\"><span class=\"string\">    # 可写</span></span><br><span class=\"line\"><span class=\"string\">    writable = yes</span></span><br><span class=\"line\"><span class=\"string\">    # 新建文件的权限为 664</span></span><br><span class=\"line\"><span class=\"string\">    create mask = 0664</span></span><br><span class=\"line\"><span class=\"string\">    # 新建目录的权限为 775</span></span><br><span class=\"line\"><span class=\"string\">    directory mask = 0775</span></span><br><span class=\"line\"><span class=\"string\">\"</span>  &gt;&gt; /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>\n<p>测试配置文件是否有错误，根据提示做相应修改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">testparm</span><br></pre></td></tr></table></figure>\n<p>添加登陆账户并创建密码，必须是 linux 已存在的用户，密码不一定要和系统一样，只是登录samba用的。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure>\n<p>输入两次密码  </p>\n<p>重载 samba 服务：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service samba reload</span><br></pre></td></tr></table></figure>\n<p>让samba开机启动：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-rc.d samba defaults</span><br></pre></td></tr></table></figure>\n<h1 id=\"第二部分：aria2下载器\"><a href=\"#第二部分：aria2下载器\" class=\"headerlink\" title=\"第二部分：aria2下载器\"></a><strong>第二部分：aria2下载器</strong></h1><ul>\n<li><h2 id=\"aria2配置及安装\"><a href=\"#aria2配置及安装\" class=\"headerlink\" title=\"aria2配置及安装\"></a>aria2配置及安装</h2></li>\n</ul>\n<p>安装aria2</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install aria2 -y</span><br></pre></td></tr></table></figure>\n<p>创建 session 和配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.aria2</span><br><span class=\"line\">touch ~/.aria2/aria2.session</span><br><span class=\"line\">touch ~/.aria2/aria2.conf</span><br></pre></td></tr></table></figure>\n<p>写入配置文件aria2.conf,注意如果用户名不是pi的话需要改下面的对应文件路径：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## 文件保存相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 文件保存目录</span></span><br><span class=\"line\"><span class=\"string\">dir=/media/Download</span></span><br><span class=\"line\"><span class=\"string\"># 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16M</span></span><br><span class=\"line\"><span class=\"string\">disk-cache=32M</span></span><br><span class=\"line\"><span class=\"string\"># 断点续传</span></span><br><span class=\"line\"><span class=\"string\">continue=true</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc</span></span><br><span class=\"line\"><span class=\"string\"># 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc</span></span><br><span class=\"line\"><span class=\"string\"># falloc和trunc则需要文件系统和内核支持</span></span><br><span class=\"line\"><span class=\"string\"># NTFS建议使用falloc, EXT3/4建议trunc, MAC 下需要注释此项</span></span><br><span class=\"line\"><span class=\"string\">#file-allocation=falloc</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## 下载连接相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 最大同时下载任务数, 运行时可修改, 默认:5</span></span><br><span class=\"line\"><span class=\"string\">#max-concurrent-downloads=5</span></span><br><span class=\"line\"><span class=\"string\"># 同一服务器连接数, 添加时可指定, 默认:1</span></span><br><span class=\"line\"><span class=\"string\">max-connection-per-server=15</span></span><br><span class=\"line\"><span class=\"string\"># 整体下载速度限制, 运行时可修改, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-overall-download-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 单个任务下载速度限制, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-download-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 整体上传速度限制, 运行时可修改, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-overall-upload-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 单个任务上传速度限制, 默认:0（不限制）</span></span><br><span class=\"line\"><span class=\"string\">#max-upload-limit=0</span></span><br><span class=\"line\"><span class=\"string\"># 禁用IPv6, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">disable-ipv6=true</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M</span></span><br><span class=\"line\"><span class=\"string\"># 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载</span></span><br><span class=\"line\"><span class=\"string\">min-split-size=10M</span></span><br><span class=\"line\"><span class=\"string\"># 单个任务最大线程数, 添加时可指定, 默认:5</span></span><br><span class=\"line\"><span class=\"string\">split=10</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## 进度保存相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 从会话文件中读取下载任务</span></span><br><span class=\"line\"><span class=\"string\">input-file=/home/pi/.aria2/aria2.session</span></span><br><span class=\"line\"><span class=\"string\"># 在Aria2退出时保存错误的、未完成的下载任务到会话文件</span></span><br><span class=\"line\"><span class=\"string\">save-session=/home/pi/.aria2/aria2.session</span></span><br><span class=\"line\"><span class=\"string\"># 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0</span></span><br><span class=\"line\"><span class=\"string\">save-session-interval=60</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## RPC相关设置 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 启用RPC, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">enable-rpc=true</span></span><br><span class=\"line\"><span class=\"string\"># 允许所有来源, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">rpc-allow-origin-all=true</span></span><br><span class=\"line\"><span class=\"string\"># 允许外部访问, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">rpc-listen-all=true</span></span><br><span class=\"line\"><span class=\"string\"># RPC端口, 仅当默认端口被占用时修改</span></span><br><span class=\"line\"><span class=\"string\"># rpc-listen-port=6800</span></span><br><span class=\"line\"><span class=\"string\"># 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项</span></span><br><span class=\"line\"><span class=\"string\">#rpc-secret=&lt;TOKEN&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">## BT/PT下载相关 ##</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true</span></span><br><span class=\"line\"><span class=\"string\">#follow-torrent=true</span></span><br><span class=\"line\"><span class=\"string\"># 客户端伪装, PT需要</span></span><br><span class=\"line\"><span class=\"string\">peer-id-prefix=-TR2770-</span></span><br><span class=\"line\"><span class=\"string\">user-agent=Transmission/2.77</span></span><br><span class=\"line\"><span class=\"string\"># 强制保存会话, 即使任务已经完成, 默认:false</span></span><br><span class=\"line\"><span class=\"string\"># 较新的版本开启后会在任务完成后依然保留.aria2文件</span></span><br><span class=\"line\"><span class=\"string\">#force-save=false</span></span><br><span class=\"line\"><span class=\"string\"># 继续之前的BT任务时, 无需再次校验, 默认:false</span></span><br><span class=\"line\"><span class=\"string\">bt-seed-unverified=true</span></span><br><span class=\"line\"><span class=\"string\"># 保存磁力链接元数据为种子文件(.torrent文件), 默认:false</span></span><br><span class=\"line\"><span class=\"string\">bt-save-metadata=true</span></span><br><span class=\"line\"><span class=\"string\">\"</span> &gt;&gt; ~/.aria2/aria2.conf</span><br></pre></td></tr></table></figure>\n<p>然后执行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aria2c --conf-path=/home/pi/.aria2/aria2.conf -D</span><br></pre></td></tr></table></figure>\n<p>没有任何提示则表示成功，Ctrl+C退出。<br>接下来作为服务添加开机自启，注意路径是否正确：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/init.d/aria2c &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">### BEGIN INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># Provides:          aria2</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Start:    $remote_fs $network</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Stop:     $remote_fs $network</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Start:     2 3 4 5</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Stop:      0 1 6</span></span><br><span class=\"line\"><span class=\"comment\"># Short-Description: Aria2 Downloader</span></span><br><span class=\"line\"><span class=\"comment\">### END INIT INFO</span></span><br><span class=\"line\">do_start()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Starting aria2c\"</span></span><br><span class=\"line\">             su pi -c <span class=\"string\">\"aria2c --conf-path=/home/pi/.aria2/aria2.conf &amp;\"</span></span><br><span class=\"line\"><span class=\"comment\">#这里的路径只能用绝对路径所以用户名不是pi的记得来这里修改</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">do_stop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"built_in\">echo</span> -n <span class=\"string\">\"Shutting down aria2c \"</span></span><br><span class=\"line\">        pkill -f aria2c</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_restart</span></span>() &#123;</span><br><span class=\"line\">    do_stop</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    do_start</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">start)</span><br><span class=\"line\">   do_start</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">   do_stop</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">status)</span><br><span class=\"line\">  <span class=\"built_in\">exit</span> $?</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">restart)</span><br><span class=\"line\">  do_restart</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: service aria2c &#123;start|stop|status|restart&#125;\"</span> &gt;&amp;2</span><br><span class=\"line\">   <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">   ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo chmod +x /etc/init.d/aria2c</span><br><span class=\"line\">sudo update-rc.d aria2c defaults</span><br><span class=\"line\">sudo service aria2c start</span><br></pre></td></tr></table></figure>\n<p>这个时候aria2已经添加到开机启动并已经启动<br>以后想要管理aria2只需要输入对应命令即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#启动aria2服务</span></span><br><span class=\"line\">sudo service aria2c start </span><br><span class=\"line\"><span class=\"comment\">#停止aria2服务</span></span><br><span class=\"line\">sudo service aria2c stop </span><br><span class=\"line\"><span class=\"comment\">#查看aria2服务状态</span></span><br><span class=\"line\">sudo service aria2c status</span><br></pre></td></tr></table></figure>\n<p>同样的命令把aria2c替换成其他名称用来管理samba和等下要装的frp都是可以的  </p>\n<blockquote>\n<p>参考：<a href=\"https://www.jianshu.com/p/03f8022453a5\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/03f8022453a5</a></p>\n</blockquote>\n<ul>\n<li><h2 id=\"网页前端（lighttpd和ariaNg）\"><a href=\"#网页前端（lighttpd和ariaNg）\" class=\"headerlink\" title=\"网页前端（lighttpd和ariaNg）\"></a>网页前端（lighttpd和<a href=\"http://ariang.mayswind.net/zh_Hans/\" target=\"_blank\" rel=\"noopener\">ariaNg</a>）</h2></li>\n</ul>\n<p>安装lighttpd并设为默认启动：  </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lighttpd -y</span><br><span class=\"line\">sudo update-rc.d lighttpd defaults</span><br></pre></td></tr></table></figure>\n<p>安装好lighttpd后默认已经开启网页服务，接下来放aria2前端</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /var/www/html</span><br><span class=\"line\">sudo wget https://github.com/mayswind/AriaNg/releases/download/0.4.0/aria-ng-0.4.0.zip</span><br><span class=\"line\">sudo unzip aria-ng-0.4.0.zip</span><br><span class=\"line\"><span class=\"comment\">#顺便删除压缩包</span></span><br><span class=\"line\">rm aria-ng-0.4.0.zip</span><br></pre></td></tr></table></figure>\n<p>现在用浏览器打开树莓派IP，你就可以看到一个漂亮的前端,以后就用它管理下载<br>至此，一个内网NAS已经搭建完成，轻量化，超小占用。<br>当然还没完，我们要做的是能从外网访问的下载器。<br><br></p>\n<h1 id=\"第三部分：内网穿透frp\"><a href=\"#第三部分：内网穿透frp\" class=\"headerlink\" title=\"第三部分：内网穿透frp\"></a><strong>第三部分：内网穿透frp</strong></h1><p>关于frp</p>\n<p>英文全称：fast reverse proxy<br>中文全称：快速反向代理<br>简称：frp<br>frp 是一个可用于内网穿透的高性能反向代理应用，支持 tcp, udp, http, https 协议.</p>\n<p>frp 的作用<br>利用处于内网或防火墙后的机器，对外网环境提供 http 或 https 服务。<br>对于 http, https 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个80端口。<br>利用处于内网或防火墙后的机器，对外网环境提供 tcp 和 udp 服务，例如在家里通过 ssh 访问处于公司内网环境内的主机。</p>\n<p>frp为免费且开源项目，需要自己利用一台拥有公网IP机器搭建服务端，以部署内网穿透项目。</p>\n<p>项目链接：<a href=\"https://github.com/fatedier/frp/\" target=\"_blank\" rel=\"noopener\">https://github.com/fatedier/frp/</a></p>\n<p>科普完了,没有公网IP服务器的童鞋这里推荐一个免费的公共服务:<a href=\"https://www.nat.ee/\" target=\"_blank\" rel=\"noopener\">https://www.nat.ee/</a></p>\n<ul>\n<li><h2 id=\"frp客户端安装\"><a href=\"#frp客户端安装\" class=\"headerlink\" title=\"frp客户端安装\"></a>frp客户端安装</h2></li>\n</ul>\n<p>可以自己到<a href=\"http://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">releases</a>页面找最新版链接</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget http://github.com/fatedier/frp/releases/download/v0.16.0/frp_0.16.0_linux_arm.tar.gz</span><br><span class=\"line\">tar -xvf frp_0.16.0_linux_arm.tar.gz</span><br><span class=\"line\">sudo mv frp_0.16.0_linux_arm/ /etc/frp</span><br></pre></td></tr></table></figure>\n<p>编辑配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>\n<p>根据nat.ee提供的配置文件,这里提供一个http的例子<br>把中文都换掉,自定义域太简单可能会因为被占用无法启动,记得换个复杂点的</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#http-自定义配置-示例</span></span><br><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = nat.ee</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\">privilege_token = www.nat.ee</span><br><span class=\"line\">user = 自定义用户名称</span><br><span class=\"line\"></span><br><span class=\"line\">[自定义服务名称]</span><br><span class=\"line\"><span class=\"built_in\">type</span> = http</span><br><span class=\"line\">local_port = 80</span><br><span class=\"line\">local_ip = 127.0.0.1</span><br><span class=\"line\">custom_domains = 自定义域.nat.ee</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">Ctrl+O保存，Ctrl+X退出  </span><br><span class=\"line\">测试一下是否运行正常:  </span><br><span class=\"line\"></span><br><span class=\"line\">```bash</span><br><span class=\"line\">sudo /etc/frp/frpc -c /etc/frp/frpc.ini</span><br></pre></td></tr></table></figure>\n<p>如果输出结果带有”start proxy success”则表示连接成功<br>Ctrl+C关闭<br>添加frp为服务并自动启动:<br>(我在里面加了判断网络是否连接的脚本”net_ts”,终于解决了开机启动时没网络导致启动失败的问题)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/init.d/frp &lt;&lt;-<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"comment\">### BEGIN INIT INFO</span></span><br><span class=\"line\"><span class=\"comment\"># Provides:         frp</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Start:    $network $local_fs $remote_fs $named $portmap $syslog</span></span><br><span class=\"line\"><span class=\"comment\"># Required-Stop::    $network $local_fs $remote_fs</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Start:     2 3 4 5</span></span><br><span class=\"line\"><span class=\"comment\"># Default-Stop:      0 1 6</span></span><br><span class=\"line\"><span class=\"comment\"># Short-Description: Start frp at boot time</span></span><br><span class=\"line\"><span class=\"comment\"># Description:       A porxy clint</span></span><br><span class=\"line\"><span class=\"comment\">### END INIT INFO</span></span><br><span class=\"line\">net_ts()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">#超时时间</span></span><br><span class=\"line\">    timeout=5</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#目标网站</span></span><br><span class=\"line\">    target=baidu.com</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#获取响应状态码</span></span><br><span class=\"line\">    ret_code=`curl -I -s --connect-timeout <span class=\"variable\">$timeout</span> <span class=\"variable\">$target</span> -w %&#123;http_code&#125; | tail -n1`</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> [ <span class=\"string\">\"x<span class=\"variable\">$ret_code</span>\"</span> = <span class=\"string\">\"x200\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> 网络畅通</span><br><span class=\"line\">\tnetstate=<span class=\"string\">'1'</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> 网络不畅通</span><br><span class=\"line\">\tnetstate=<span class=\"string\">'0'</span></span><br><span class=\"line\">    <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">do_start()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"starting frp.\"</span></span><br><span class=\"line\">        /etc/frp/frpc -c /etc/frp/frpc.ini &amp;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">do_stop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">      pkill -f /etc/frp/frpc</span><br><span class=\"line\">      <span class=\"built_in\">echo</span> <span class=\"string\">\"stop complete.\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">do_restart</span></span>() &#123;</span><br><span class=\"line\">    do_stop</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    do_start</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">case</span> <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">start)</span><br><span class=\"line\">  net_ts</span><br><span class=\"line\"><span class=\"comment\">#这里验证网络是否连通，连通了才启动frp</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> [ <span class=\"variable\">$netstate</span> -lt 0 ];</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> 请检查网络，将在5秒后重试</span><br><span class=\"line\">    sleep 5</span><br><span class=\"line\">    net_ts</span><br><span class=\"line\">  <span class=\"keyword\">done</span></span><br><span class=\"line\">  do_start</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">stop)</span><br><span class=\"line\">   do_stop</span><br><span class=\"line\">   ;;</span><br><span class=\"line\">status)</span><br><span class=\"line\">  <span class=\"built_in\">exit</span> $?</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">restart)</span><br><span class=\"line\">  do_restart</span><br><span class=\"line\">  ;;</span><br><span class=\"line\">*)</span><br><span class=\"line\">   <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage:service frp &#123;start|stop|restart|status&#125;\"</span> &gt;&amp;2</span><br><span class=\"line\">   <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">   ;;</span><br><span class=\"line\"><span class=\"keyword\">esac</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span> 0</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /etc/init.d/frp</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo update-rc.d frp defaults</span><br><span class=\"line\">sudo service frp start</span><br></pre></td></tr></table></figure>\n<p>frp服务已经启动<br>现在试试能否从外网访问<br>一切正常的话你就可以从外网看到刚才那个漂亮的前端<br>开始你的下载吧<br>frp还有很多玩法，有兴趣的朋友可以去项目地址看看，有中文说明.  </p>\n<p><strong>第一次写教程,写的不好的地方请多包涵,之后我还会写在树莓派上安装hexo博客的教程,记得来看哦.</strong></p>"},{"title":"把时间当作朋友_笔记","date":"2018-10-08T03:26:00.000Z","_content":"* 我有没有什么觉得自己“现在学也来不及了”的技能？\n* 浮躁的根源：不懂“有些阶段就是无法跨越”这个道理。告诉自己：我有不足，我需要时间，我没办法一蹴而就。\n  “我要”的欲望可以用”我有“的东西来满足，即便“我有“的暂时不够，我也能借助已经拥有的努力和勤奋（亦或投机），只要假以时日，定能如愿以偿。一旦得偿所愿，不仅”我有“的更多，”我要“的也更容易获得，如此形成良性循环。\n  摆脱生活死循环：给我什么我就用好什么，积累到一定程度再去换能换的东西。<!--more-->\n  在想到”我要什么“的时候马上提醒自己，接下来要花一些时间去思考”我有什么“。后者会在转瞬间让我”脚踏实地“。\n* 完美永不存在，未知永远存在，为了进步，必须忍受一定的未知。\n  初学概念：看不懂证明，暂时不去问为什么.我们只能尝试着适应”在未知中不断前行“。\n  一个有效的策略：**记录下来**暂时不能解决的问题，继续前行并不是忽略这些问题。你一直在前行，你一直在积累，你一直在成长。所以，到有了答案那一刻，你不再是当初无能为力的你，你已经重生。\n  尽快接受现实，包括：*速成绝无可能、只有付出才有收获、完美永不存在、未知永远存在、现状无法马上摆脱*，~~不仅要接受，还要牢记；不仅要牢记，还要坚信。~~而后才能找对目标。\n  * 真正能够做对、做好的人不会在乎他人的嘲弄和打击，自己也不会这样对别人\n  * ”最后期限”不是固定在将来的某个点，而是朝着你加速扑来，唯一的策略依然是：现在就开始\n* 记录下来那些目前无法理解的、支持的、反对的、无所谓的论点，对无法理解的，写下自己当时的疑惑，对支持的，记录几个理由或实例，对反对的，同样记录几个理由或实例，对那些无所谓的，也要记录原因。————避免成为“选择性输入”的受害者。\n* 在被环境塑造的同时，我们也在塑造环境。\n* “恐惧情绪”————喜悦会使人停下行动去享受，而恐惧恰恰相反，会引发一个人马上采取行动去避免危险。事实上这种出于恐惧的决策几乎总是事与愿违。\n* 积极心理学？NO，应该 \n  > 哪一个更合理、更现实就接受哪一个\n\n  而不是\n  > 哪一个更积极就接受哪一个\n\n  因为后者只是自我欺骗而已。积极的并不总是好的。\n* ``强``与`弱`才是自然界中真正存在的本质，`善`与`恶`往往只是弱者一厢情愿的定义\n\n","source":"_posts/把时间当作朋友_笔记.md","raw":"---\ntitle: 把时间当作朋友_笔记\ndate: 2018-10-8 11:26:00\ntags: 笔记\n---\n* 我有没有什么觉得自己“现在学也来不及了”的技能？\n* 浮躁的根源：不懂“有些阶段就是无法跨越”这个道理。告诉自己：我有不足，我需要时间，我没办法一蹴而就。\n  “我要”的欲望可以用”我有“的东西来满足，即便“我有“的暂时不够，我也能借助已经拥有的努力和勤奋（亦或投机），只要假以时日，定能如愿以偿。一旦得偿所愿，不仅”我有“的更多，”我要“的也更容易获得，如此形成良性循环。\n  摆脱生活死循环：给我什么我就用好什么，积累到一定程度再去换能换的东西。<!--more-->\n  在想到”我要什么“的时候马上提醒自己，接下来要花一些时间去思考”我有什么“。后者会在转瞬间让我”脚踏实地“。\n* 完美永不存在，未知永远存在，为了进步，必须忍受一定的未知。\n  初学概念：看不懂证明，暂时不去问为什么.我们只能尝试着适应”在未知中不断前行“。\n  一个有效的策略：**记录下来**暂时不能解决的问题，继续前行并不是忽略这些问题。你一直在前行，你一直在积累，你一直在成长。所以，到有了答案那一刻，你不再是当初无能为力的你，你已经重生。\n  尽快接受现实，包括：*速成绝无可能、只有付出才有收获、完美永不存在、未知永远存在、现状无法马上摆脱*，~~不仅要接受，还要牢记；不仅要牢记，还要坚信。~~而后才能找对目标。\n  * 真正能够做对、做好的人不会在乎他人的嘲弄和打击，自己也不会这样对别人\n  * ”最后期限”不是固定在将来的某个点，而是朝着你加速扑来，唯一的策略依然是：现在就开始\n* 记录下来那些目前无法理解的、支持的、反对的、无所谓的论点，对无法理解的，写下自己当时的疑惑，对支持的，记录几个理由或实例，对反对的，同样记录几个理由或实例，对那些无所谓的，也要记录原因。————避免成为“选择性输入”的受害者。\n* 在被环境塑造的同时，我们也在塑造环境。\n* “恐惧情绪”————喜悦会使人停下行动去享受，而恐惧恰恰相反，会引发一个人马上采取行动去避免危险。事实上这种出于恐惧的决策几乎总是事与愿违。\n* 积极心理学？NO，应该 \n  > 哪一个更合理、更现实就接受哪一个\n\n  而不是\n  > 哪一个更积极就接受哪一个\n\n  因为后者只是自我欺骗而已。积极的并不总是好的。\n* ``强``与`弱`才是自然界中真正存在的本质，`善`与`恶`往往只是弱者一厢情愿的定义\n\n","slug":"把时间当作朋友_笔记","published":1,"updated":"2019-06-24T16:02:13.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck023se7p000o0guy3qdf1rl2","content":"<ul>\n<li>我有没有什么觉得自己“现在学也来不及了”的技能？</li>\n<li>浮躁的根源：不懂“有些阶段就是无法跨越”这个道理。告诉自己：我有不足，我需要时间，我没办法一蹴而就。<br>“我要”的欲望可以用”我有“的东西来满足，即便“我有“的暂时不够，我也能借助已经拥有的努力和勤奋（亦或投机），只要假以时日，定能如愿以偿。一旦得偿所愿，不仅”我有“的更多，”我要“的也更容易获得，如此形成良性循环。<br>摆脱生活死循环：给我什么我就用好什么，积累到一定程度再去换能换的东西。<a id=\"more\"></a><br>在想到”我要什么“的时候马上提醒自己，接下来要花一些时间去思考”我有什么“。后者会在转瞬间让我”脚踏实地“。</li>\n<li>完美永不存在，未知永远存在，为了进步，必须忍受一定的未知。<br>初学概念：看不懂证明，暂时不去问为什么.我们只能尝试着适应”在未知中不断前行“。<br>一个有效的策略：<strong>记录下来</strong>暂时不能解决的问题，继续前行并不是忽略这些问题。你一直在前行，你一直在积累，你一直在成长。所以，到有了答案那一刻，你不再是当初无能为力的你，你已经重生。<br>尽快接受现实，包括：<em>速成绝无可能、只有付出才有收获、完美永不存在、未知永远存在、现状无法马上摆脱</em>，<del>不仅要接受，还要牢记；不仅要牢记，还要坚信。</del>而后才能找对目标。<ul>\n<li>真正能够做对、做好的人不会在乎他人的嘲弄和打击，自己也不会这样对别人</li>\n<li>”最后期限”不是固定在将来的某个点，而是朝着你加速扑来，唯一的策略依然是：现在就开始</li>\n</ul>\n</li>\n<li>记录下来那些目前无法理解的、支持的、反对的、无所谓的论点，对无法理解的，写下自己当时的疑惑，对支持的，记录几个理由或实例，对反对的，同样记录几个理由或实例，对那些无所谓的，也要记录原因。————避免成为“选择性输入”的受害者。</li>\n<li>在被环境塑造的同时，我们也在塑造环境。</li>\n<li>“恐惧情绪”————喜悦会使人停下行动去享受，而恐惧恰恰相反，会引发一个人马上采取行动去避免危险。事实上这种出于恐惧的决策几乎总是事与愿违。</li>\n<li><p>积极心理学？NO，应该 </p>\n<blockquote>\n<p>哪一个更合理、更现实就接受哪一个</p>\n</blockquote>\n<p>而不是</p>\n<blockquote>\n<p>哪一个更积极就接受哪一个</p>\n</blockquote>\n<p>因为后者只是自我欺骗而已。积极的并不总是好的。</p>\n</li>\n<li><code>强</code>与<code>弱</code>才是自然界中真正存在的本质，<code>善</code>与<code>恶</code>往往只是弱者一厢情愿的定义</li>\n</ul>\n","site":{"data":{"styles":".site-meta,\n.headband {\n  background: #87daff;\n}\n.sidebar-nav .sidebar-nav-active {\n  color: #fc6423;\n  border-bottom-color: #fc6423;\n}\n"}},"excerpt":"<ul>\n<li>我有没有什么觉得自己“现在学也来不及了”的技能？</li>\n<li>浮躁的根源：不懂“有些阶段就是无法跨越”这个道理。告诉自己：我有不足，我需要时间，我没办法一蹴而就。<br>“我要”的欲望可以用”我有“的东西来满足，即便“我有“的暂时不够，我也能借助已经拥有的努力和勤奋（亦或投机），只要假以时日，定能如愿以偿。一旦得偿所愿，不仅”我有“的更多，”我要“的也更容易获得，如此形成良性循环。<br>摆脱生活死循环：给我什么我就用好什么，积累到一定程度再去换能换的东西。","more":"<br>在想到”我要什么“的时候马上提醒自己，接下来要花一些时间去思考”我有什么“。后者会在转瞬间让我”脚踏实地“。</li>\n<li>完美永不存在，未知永远存在，为了进步，必须忍受一定的未知。<br>初学概念：看不懂证明，暂时不去问为什么.我们只能尝试着适应”在未知中不断前行“。<br>一个有效的策略：<strong>记录下来</strong>暂时不能解决的问题，继续前行并不是忽略这些问题。你一直在前行，你一直在积累，你一直在成长。所以，到有了答案那一刻，你不再是当初无能为力的你，你已经重生。<br>尽快接受现实，包括：<em>速成绝无可能、只有付出才有收获、完美永不存在、未知永远存在、现状无法马上摆脱</em>，<del>不仅要接受，还要牢记；不仅要牢记，还要坚信。</del>而后才能找对目标。<ul>\n<li>真正能够做对、做好的人不会在乎他人的嘲弄和打击，自己也不会这样对别人</li>\n<li>”最后期限”不是固定在将来的某个点，而是朝着你加速扑来，唯一的策略依然是：现在就开始</li>\n</ul>\n</li>\n<li>记录下来那些目前无法理解的、支持的、反对的、无所谓的论点，对无法理解的，写下自己当时的疑惑，对支持的，记录几个理由或实例，对反对的，同样记录几个理由或实例，对那些无所谓的，也要记录原因。————避免成为“选择性输入”的受害者。</li>\n<li>在被环境塑造的同时，我们也在塑造环境。</li>\n<li>“恐惧情绪”————喜悦会使人停下行动去享受，而恐惧恰恰相反，会引发一个人马上采取行动去避免危险。事实上这种出于恐惧的决策几乎总是事与愿违。</li>\n<li><p>积极心理学？NO，应该 </p>\n<blockquote>\n<p>哪一个更合理、更现实就接受哪一个</p>\n</blockquote>\n<p>而不是</p>\n<blockquote>\n<p>哪一个更积极就接受哪一个</p>\n</blockquote>\n<p>因为后者只是自我欺骗而已。积极的并不总是好的。</p>\n</li>\n<li><code>强</code>与<code>弱</code>才是自然界中真正存在的本质，<code>善</code>与<code>恶</code>往往只是弱者一厢情愿的定义</li>\n</ul>"}],"PostAsset":[{"_id":"source/_posts/Wechat-vip-info-export/会员详情页面.png","slug":"会员详情页面.png","post":"ck023sdlb00000guy2ng7qucu","modified":0,"renderable":0},{"_id":"source/_posts/hackintosh-of-yoga710/CLOVER.zip","slug":"CLOVER.zip","post":"ck023sdm800030guy2r5inupc","modified":0,"renderable":0},{"_id":"source/_posts/hackintosh-of-yoga710/error1.jpg","slug":"error1.jpg","post":"ck023sdm800030guy2r5inupc","modified":0,"renderable":0},{"_id":"source/_posts/Wechat-vip-info-export/console1.png","slug":"console1.png","post":"ck023sdlb00000guy2ng7qucu","modified":0,"renderable":0},{"_id":"source/_posts/Wechat-vip-info-export/csv.png","slug":"csv.png","post":"ck023sdlb00000guy2ng7qucu","modified":0,"renderable":0},{"_id":"source/_posts/Wechat-vip-info-export/info_array.png","slug":"info_array.png","post":"ck023sdlb00000guy2ng7qucu","modified":0,"renderable":0},{"_id":"source/_posts/Wechat-vip-info-export/info_es.png","slug":"info_es.png","post":"ck023sdlb00000guy2ng7qucu","modified":0,"renderable":0},{"_id":"source/_posts/miui-eu/bat-run.jpg","slug":"bat-run.jpg","post":"ck023se6l000j0guyn6plddf6","modified":0,"renderable":0},{"_id":"source/_posts/miui-eu/git-clone.jpg","slug":"git-clone.jpg","post":"ck023se6l000j0guyn6plddf6","modified":0,"renderable":0},{"_id":"source/_posts/miui-eu/mipay-extract.jpg","slug":"mipay-extract.jpg","post":"ck023se6l000j0guyn6plddf6","modified":0,"renderable":0},{"_id":"source/_posts/miui-eu/screen.png","slug":"screen.png","post":"ck023se6l000j0guyn6plddf6","modified":0,"renderable":0},{"_id":"source/_posts/miui-eu/screen1.jpg","slug":"screen1.jpg","post":"ck023se6l000j0guyn6plddf6","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ck023sdlb00000guy2ng7qucu","tag_id":"ck023sdm300020guyqd27jffv","_id":"ck023sdn300070guy1xtzxsw3"},{"post_id":"ck023sdlt00010guyosgsfdaw","tag_id":"ck023sdn000060guyojjvr81o","_id":"ck023sdob000b0guyknjmjxsv"},{"post_id":"ck023sdml00040guyydj88gvv","tag_id":"ck023sdoa000a0guydv4ip41y","_id":"ck023sdod000d0guyf53p0y2n"},{"post_id":"ck023sdmq00050guyq93pvs5y","tag_id":"ck023sdob000c0guy15re2gf2","_id":"ck023sdoe000f0guyblbqelhg"},{"post_id":"ck023sdn700080guy579zbf1e","tag_id":"ck023sdod000e0guywfh02kf2","_id":"ck023sdoi000h0guynor958hm"},{"post_id":"ck023sdo700090guy0xufq4jd","tag_id":"ck023sdod000e0guywfh02kf2","_id":"ck023sdok000i0guyorxdf7z0"},{"post_id":"ck023se7c000l0guybfzybkt7","tag_id":"ck023sdob000c0guy15re2gf2","_id":"ck023se8a000p0guy7zb5x7m4"},{"post_id":"ck023se6l000j0guyn6plddf6","tag_id":"ck023se7l000n0guyksys3l85","_id":"ck023se8r000r0guykzw3drqy"},{"post_id":"ck023se7p000o0guy3qdf1rl2","tag_id":"ck023se8h000q0guy33mnwya3","_id":"ck023se8u000s0guyk65w4j3r"}],"Tag":[{"name":"Javascript","_id":"ck023sdm300020guyqd27jffv"},{"name":"云服务","_id":"ck023sdn000060guyojjvr81o"},{"name":"hexo_tricks","_id":"ck023sdoa000a0guydv4ip41y"},{"name":"各种Pi","_id":"ck023sdob000c0guy15re2gf2"},{"name":"云服务器","_id":"ck023sdod000e0guywfh02kf2"},{"name":"MIUI","_id":"ck023se7l000n0guyksys3l85"},{"name":"笔记","_id":"ck023se8h000q0guy33mnwya3"}]}}